Перем СтарыйКонтрагент;
Перем СтараяДата;
Перем НачальнаяДатаДокумента;

// ===============================
Процедура ЗаполнитьВидыОпераций()   
	
	//pfgjkybnm
	спВидОперации.УдалитьВсе();
	Если Импорт = 1 Тогда
		спВидОперации.ДобавитьЗначение(Перечисление.ВидыОперацийКнигиПриобретения.Импорт);
		спВидОперации.ДобавитьЗначение(Перечисление.ВидыОперацийКнигиПриобретения.ИмпортПоВекселю);
		спВидОперации.ДобавитьЗначение(Перечисление.ВидыОперацийКнигиПриобретения.РаботыОтНерезидента);
		спВидОперации.ДобавитьЗначение(Перечисление.ВидыОперацийКнигиПриобретения.РаботыОтНерезидентаПрошлогоПериода);
		спВидОперации.ДобавитьЗначение(Перечисление.ВидыОперацийКнигиПриобретения.ВексельПрошлогоПериода);
		спВидОперации.ДобавитьЗначение(Перечисление.ВидыОперацийКнигиПриобретения.ПогашениеНалоговогоВекселя);
	Иначе
		спВидОперации.ДобавитьЗначение(Перечисление.ВидыОперацийКнигиПриобретения.ПокупкаВУкраине);
		спВидОперации.ДобавитьЗначение(Перечисление.ВидыОперацийКнигиПриобретения.РасчетКорректировки);
	КонецЕсли;
	// если вид операции есть в новом списке - спозиционируемся на него
	Инд = спВидОперации.НайтиЗначение(ВидОперации);
	Если Инд = 0 Тогда
	    // нет такого в списке
		спВидОперации.ТекущаяСтрока(1);
		ВидОперации = спВидОперации.ПолучитьЗначение(1);
	Иначе
		спВидОперации.ТекущаяСтрока(Инд);
	КонецЕсли;
КонецПроцедуры
                   
Функция ЗаголовокФормы() 
	Перем Заголовок, Название;

	Заголовок = "Запись книги приобретения";
	Название ="Запись книги приобретения №";
	
	Заголовок = Заголовок + глЗаголовок(Контекст);
	
	Форма.Заголовок(Заголовок);     
	Возврат Название;
КонецФункции //ЗаголовокФормы

// ===============================
Функция УстДоступность()
	Если Импорт = 1 Тогда
	    Форма.ИспользоватьСлой("Основной,Импорт");
	Иначе
		Форма.ИспользоватьСлой("Основной,НеИмпорт");
		ДатаВыдачиВекселя = 0;
		ДатаПогашенияВекселя = 0;
		ФактическаяДатаПогашенияВекселя = 0;
	КонецЕсли;
КонецФункции

// ===============================
Процедура УстНалоговыйКредит()
	фНалоговыйКредит = 1;
	Если СтавкаНДС = Перечисление.ЗначенияНДС.БезНДС Тогда
		// приобретение без НДС - нет налогового кредита
	    фНалоговыйКредит = 0;
	КонецЕсли;
	Если ВаловыеРасходы = 0 Тогда
	    // не относятся на валовые расходы и не подлежат амортизации - нет налогового кредита
		фНалоговыйКредит = 0;
	КонецЕсли;
	Если ДляОблагаемыхОпераций = 0 Тогда
	    // для совершения операций, кот. не подлежат или освобождены от налогообложения - нет налогового кредита
		фНалоговыйКредит = 0;
	КонецЕсли;
	Если фНалоговыйКредит <> НалоговыйКредит Тогда
	    НалоговыйКредит = фНалоговыйКредит;
	КонецЕсли;
КонецПроцедуры
                                     
// ===============================
Процедура ИзмДатаДок()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
КонецПроцедуры

// ===============================
Процедура ИзмВидОперации()
	Инд = спВидОперации.ТекущаяСтрока();
	Если Инд <> 0 Тогда
		ТекВидОперации = спВидОперации.ПолучитьЗначение(Инд);
		Если ТекВидОперации <> ВидОперации Тогда
		    ВидОперации = ТекВидОперации;
		КонецЕсли;
	КонецЕсли;
	УстНалоговыйКредит();
КонецПроцедуры

//******************************************************************************
Процедура ОбновитьНадписи()
	Форма.ТекстОснования.Заголовок(СокрП(Основание));
КонецПроцедуры

//*****************************************************************************
Процедура ВыборОснования()
	// Процедура по кнопке редактирования основания в докумнете
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", КонтекстДокумента);
	// Могли изменить Контрагента
	ОбновитьНадписи();
КонецПроцедуры	

// ===============================
Процедура ПриОткрытии()
	
	НачальнаяДатаДокумента = ДатаДок;	
	
	глПроверкаРазрешенияРедактирования(Контекст);
	
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кнОК.Доступность(0);
		Форма.кнПровести.Доступность(0);
		Форма.кнДействия.Доступность(0);
		
		Форма.кнОснование.Доступность(0);
	Иначе
		Форма.КнопкаПоУмолчанию("кнОК");
	КонецЕсли;
	
	ПриЗаписиПерепроводить(1);
	
	ЗаполнитьВидыОпераций();
	Инд = спВидОперации.НайтиЗначение(ВидОперации);
	Если Инд <> 0 Тогда
	    спВидОперации.ТекущаяСтрока(Инд);
	Иначе
		ИзмВидОперации();    
	КонецЕсли;
	
	ОбновитьНадписи();
	
КонецПроцедуры

// ===============================
Процедура ИзмКонтрагент()
    Если Контрагент.Выбран()=1 Тогда                                      
		Если СтарыйКонтрагент <> Контрагент Тогда
			// изменили Контрагента
			// очистим договор
			Договор = ПолучитьПустоеЗначение("Документ.Договор");
			Если Константа.ПодставлятьОсновнойДоговор = Да Тогда
				// подставим договор по умолчанию                                 
				Если ПустоеЗначение(Контрагент.ОсновнойДоговорТорг) = 0 Тогда
					Если Фирма = Контрагент.ОсновнойДоговорТорг.Фирма Тогда
						Договор = Контрагент.ОсновнойДоговорТорг;
					КонецЕсли;	
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
	Иначе
		//Не выбран Контрагент - не имеет смысла показывать глубину и дату оплаты и договор
		Договор = ПолучитьПустоеЗначение("Документ.Договор");
	КонецЕсли;
	// Формирует и показывает дату оплаты
	СтарыйКонтрагент = Контрагент;
	ОбновитьНадписи();
КонецПроцедуры

// ===============================
Процедура ИзмДляОблагаемыхОпераций()
	УстНалоговыйКредит();
КонецПроцедуры

// ===============================
Процедура ИзмИмпорт()
	ЗаполнитьВидыОпераций();
	УстНалоговыйКредит();
КонецПроцедуры

// ===============================
Процедура ИзмВаловыеРасходы()
	УстНалоговыйКредит();
КонецПроцедуры

// ===============================
Процедура ИзмВидНДС()
	УстНалоговыйКредит();
КонецПроцедуры

// ===============================
Процедура ИзмНДС()
	СуммаСНДС = СуммаБезНДС + НДС;
КонецПроцедуры

// ===============================
Процедура ИзмСуммаБезНДС()
	НДС = СуммаБезНДС * глПроцентНДС(СтавкаНДС)/100;
	ИзмНДС();
КонецПроцедуры

// ===============================
Процедура ВводНового(Скопирован) //Предопределенная процедура

	глЗаполнитьШапку(Контекст);
	Если Скопирован=1 Тогда	//копирование документа
		Возврат;
	КонецЕсли;
	
	Валюта=Константа.ОсновнаяВалютаПродажи;
	Дата_Курса = ДатаДок;
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта = Гривня;
	КонецЕсли;
	Курс=глКурсДляВалюты(Валюта,Дата_Курса);

	СтавкаНДС = Константа.ОсновнаяСтавкаНДС;

	
	ДляОблагаемыхОпераций = 1;
	ВаловыеРасходы = 1;
	Импорт = 0;
	ИзмИмпорт();
	
	ВидОперации = спВидОперации.ПолучитьЗначение(1);
	ВидДокумента = Перечисление.ВидыДокументовКнигиПриобретения.НалоговаяНакладная;          
	СтарыйКонтрагент = Контрагент;       
	
	ИзмКонтрагент();
КонецПроцедуры

// ===============================
Процедура ВводНаОсновании(ДокОснование)
	
	Если Вопрос("Для корректного ввода налоговых документов необходимо
		|использовать 'Автоматический ввод документов' в обработке 
		|'Книга продаж' ('Книга приобретений') или 'Действия'/'Ввод 
		|налоговох документов'. Продолжить ?",4) = 7 тогда
			СтатусВозврата(0);
	КонецЕсли;		
			
	
	ДляОблагаемыхОпераций = 1;
	
	СтавкаНДС = Константа.ОсновнаяСтавкаНДС;
	ДокументОснование = глПолучитьКредДокумент(ДокОснование,0);
	
	глЗаполнитьШапкуНаОсн(Контекст,ДокументОснование);
	
	СтарыйКонтрагент = Контрагент;
	
	// вид операции
	Если ДокОснование.Вид()="ГТД" Тогда
	    Импорт = 1;
		ВидДокумента = Перечисление.ВидыДокументовКнигиПриобретения.ГТД;
	Иначе	
		ВидДокумента = Перечисление.ВидыДокументовКнигиПриобретения.НалоговаяНакладная;
	КонецЕсли; 
	
	ЗаполнитьВидыОпераций();
	УстНалоговыйКредит();
	
	ВидОперации = спВидОперации.ПолучитьЗначение(1);
	
	фНал = 0;
	Если (ДокОснование.Вид() = "ПриходнаяНакладная") Тогда
		Если (ДокОснование.ВидТорговли = Перечисление.ВидыТорговли.Нал) Тогда
		    фНал =1;
		КонецЕсли;
	КонецЕсли;
	
	// дата оплаты
	Если (фНал = 1) Тогда
	    ДатаОплаты = Формат(ДокОснование.ДатаДок,"ДДДММГГ");
		ФормаОплаты = "Оплата готівкою";
	Иначе
		СписокДат = СоздатьОбъект("СписокЗначений");
		Док = СоздатьОбъект("Документ");
		Док.ОбратныйПорядок(1); // найдем последний документ по заказу, который напоминает оплату
		Док.ВыбратьПодчиненныеДокументы('01.01.80',ДатаДок,ДокументОснование);
		
		Пока (Док.ПолучитьДокумент() = 1) и (СписокДат.РазмерСписка() < 3) Цикл
			Если (Док.Вид() = "ДвижениеДенежныхСредств") Тогда
			    СписокДат.ДобавитьЗначение(Док.ДатаДок);
				ФормаОплаты = "Оплата з розрахункового рахунку";
			ИначеЕсли (Док.Вид() = "ПриходныйКассовый") Тогда
			    СписокДат.ДобавитьЗначение(Док.ДатаДок);
				ФормаОплаты = "Оплата готівкою";
			ИначеЕсли (Док.Вид() = "РасходнаяНакладная") Тогда
				Если (ДокументОснование.ВидТорговли = Перечисление.ВидыТорговли.Бартер) Тогда
					// бартерный заказ, расходная накладная - вместо оплаты
					СписокДат.ДобавитьЗначение(Док.ДатаДок);
					ФормаОплаты = "Бартер";
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		СтрокаДат = "";
		Если СписокДат.РазмерСписка() = 3 Тогда
		    СписокДат.УдалитьЗначение(3);
			СтрокаДат = СписокДат.ВСтрокуСРазделителями()+" ...";
		Иначе
			СтрокаДат = СписокДат.ВСтрокуСРазделителями();
		КонецЕсли;
		ДатаОплаты = СтрЗаменить(СтрокаДат,"""","");
	КонецЕсли;
	// определим сумму
	Если (ДокОснование.Вид() = "ПриходнаяНакладная") или (ДокОснование.Вид() = "СчетВходящий") Тогда
	    СуммаБезНДС = глПересчет(ДокОснование.Итог("СуммаБезНДС"),ДокОснование.Валюта,ДокОснование.Курс,Гривня,ДокОснование.Дата_курса);
		СуммаСНДС = глПересчет(Окр(ДокОснование.Итог("СуммаСНДС"),2),ДокОснование.Валюта,ДокОснование.Курс,Гривня,ДокОснование.Дата_курса);
		НДС = СуммаСНДС - СуммаБезНДС;
	ИначеЕсли (ДокОснование.Вид() = "ГТД") Тогда
	    СуммаБезНДС = глПересчет(ДокОснование.Итог("СуммаБезНДС")+ДокОснование.Итог("СуммаАкциза")+ДокОснование.Итог("СуммаПошлины")+ДокОснование.Итог("СуммаУслуг")+ДокОснование.Итог("СуммаПеревозки"),ДокОснование.Валюта,ДокОснование.Курс,Гривня,ДокОснование.Дата_курса);
		НДС = глПересчет(ДокОснование.Итог("СуммаСНДС") - ДокОснование.Итог("СуммаБезНДС") + ( ДокОснование.Итог("СуммаАкциза")+ДокОснование.Итог("СуммаПошлины")+ДокОснование.Итог("СуммаУслуг")) * глПроцентНДС(Константа.ОсновнаяСтавкаНДС)/100,ДокОснование.Валюта,ДокОснование.Курс,Гривня,ДокОснование.Дата_курса);
		СуммаСНДС = СуммаБезНДС + НДС;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриЗаписи()
	Если глМожноЗаписатьДокумент(Контекст)=0 Тогда
		СтатусВозврата(0);                        
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
КонецПроцедуры       

Процедура ВыборФирмы()
	// по кнопке редактирования параметров фирмы в докумнете
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ИнформацияОфирме", КонтекстДокумента);
	ОбновитьНадписи();
КонецПроцедуры	

//*****************************************************************************
Процедура ПриНачалеВыбораЗначения(Рекв,Флаг)
	Флаг=0;
	Если Рекв="Фирма" Тогда
		ВыборФирмы();
	Иначе
		Флаг=1;
	КонецЕсли;
КонецПроцедуры
                          
//*****************************************************************************
//Инициализирум список действий по кнопке "Действия"       
СписокДействий = глПолучитьСписокДействий("
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ВводНаОсновании,
	|ОткрытьВЖурнале,
	|Подчиненные,
	|ИзмКомментария");

