//*****************************************************************************
// Описание переменных 
Перем СписокДействий,новый;
Перем СтарыйКонтрагент;
Перем СтараяДата;
Перем НачальнаяДатаДокумента;    
Перем спрКонтрПрава;
Перем тбОстаткиВсего,тбОстатки;
Перем ЗначениеТолькоПросмотрПриОткрытии;
Перем дополненияТорговля;
Перем кодСмс; //код проверки клиента из смс
перем стСумма;
Перем этоКладовщикШК;
перем расшФормы;
перем ПравоПользователяПроводитьПНВозвр,ПравоПользователяПроводитьПН;
перем ПравоПользователяПричинаВозврата;
перем стКомментарийСклад;
Перем АвторКратко;
Перем стЗнОжидаемыеПоступления;
Перем рф;
//перем текРаспечатан,тхтРаспечатан;

Процедура УстВидимостьПартийПост() Далее
Процедура ИзмКонтрагент(флПодтвержден = 0) Далее

//отладочные

//Для отладки
Процедура ГенерироватьСобытие(выбШК = "")
	Сообщить(ШтрКод);
	
	Если выбШК = "" Тогда
		выбШК = глВосстановитьЗначение("последнийШК","выбШК",0);
		Если выбШК = 0 Тогда
			выбШК = ШтрКод;
		КонецЕсли;
		ВвестиСтроку(выбШК,"введите штрихкод",13);
	КонецЕсли;
	
	Источник = "";
	РаботаСоСканеромШтрихКода = 2;
	Сервис.ВнешнееСобытие(Источник,"BarCodeValue",выбШК);
	глСохранитьЗначение("последнийШК","выбШК",выбШК);
КонецПроцедуры // ГенерироватьСобытие

//======================================================================
Процедура ПолучитьДанныеСоСканераШК()
	парам = "";
	Если ВвестиСтроку(парам,"Введите штрихкод",13,0,20) <> 1 Тогда
		Возврат;
	КонецЕсли;
	Источник = "";
	РаботаСоСканеромШтрихКода = 2;
	Сервис.ВнешнееСобытие(Источник,"BarCodeValue",парам);
КонецПроцедуры // ПолучитьДанныеСоСканераШК()

//парам - или строка с штрихкодом сотрудника или ссылка на спр. "Сотрудники"
Процедура ГенерироватьСобытиеСотр(парам = "")
	Источник = "";
	РаботаСоСканеромШтрихКода = 2;
	Если парам = "" Тогда
		Если ВвестиЗначение(парам,"Выберите сотрудника","Справочник.Сотрудники") <> 1 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗначения(парам) = 11 Тогда //справочник
		парам = парам.ШтрихКод;
	КонецЕсли;
	Сервис.ВнешнееСобытие(Источник,"BarCodeValue",СокрЛП(парам));
КонецПроцедуры // ГенерироватьСобытие

Функция ПоставитьЗадачуВCRM()
	спсПарам = СоздатьОбъект("Структура");
	спсПарам.Вставить("Заголовок", " " + ТекущийДокумент());
	спсПарам.Вставить("Описание", СокрЛП(ОписаниеЗадачи));
	спсПарам.Вставить("ДатаНачала", ДатаДок);
	спсПарам.Вставить("ДатаКонца", срокИсполненияЗадачи);
	спсПарам.Вставить("users_id", СотрудникЗадачи);
	спсПарам.Вставить("конт", глВернутьКонтекст(Контекст));
	
	API_CRM = СоздатьОбъект("API_CRM");
	рез = API_CRM.ПоставитьЗадачу_API(спсПарам);
	Если рез <> 0 Тогда
		id_задачиВ_CRM = СокрЛП(id_задачиВ_CRM) + ?(ПустаяСтрока(id_задачиВ_CRM) = 1,"",",") + рез;
		Записать();
	КонецЕсли;
	Возврат рез;  //если о то задача не поставлена
КонецФункции // ПоставитьЗадачуВCRM()

//*****************************************************************************
// "служебные" функции и процедуры 
//======================================================================
//+ralex, 31-07-21 01:05
Функция показатьПодтвержденСМС()
	Если подтвержденСМС = 1 Тогда
		Возврат "клиент подтвержден через SMS";
	КонецЕсли;
	Возврат "";
КонецФункции // показатьПодтвержденСМС
//======================================================================
Процедура подтвердитьСМС()
	ОткрытьФормуМодально("Отчет.АвторизацияКлиента",Контекст);
КонецПроцедуры // подтвердитьСМС
//======================================================================
Процедура УстДоступностьКнСМС()
	Если ВидОперации = 0 Тогда
		форма.кнСмс.Видимость(0); //видна  только если возврат 
		Возврат;
	КонецЕсли;
	Если спрКонтрПрава.ПроверитьРазрешениеГруппыСМС(Контрагент) <> 0 Тогда
		Если подтвержденСМС = 0 Тогда
			форма.кнСмс.Видимость(1); 
		Иначе
			форма.кнСмс.Видимость(0); 
		КонецЕсли;
	Иначе
		форма.кнСмс.Видимость(0); //видна  только если возврат 
	КонецЕсли;
КонецПроцедуры // УстДоступностьКнСМС
//+/------------------------

//======================================================================
Процедура ВывестиКартинку(ОбъектКартинка)
	работаСКартинками = СоздатьОбъект("РаботаСКартинками");
	ПутьКФайлуКартинки = "C:\WORK\1cbases\Update\TestBase\image_tools\7777.png";
	работаСКартинками.ПоказатьКартинкуНаФорме_GFlax(объектКартинка,ПутьКФайлуКартинки,,1);
КонецПроцедуры // ВывестиКартинку(ОбъектКартинка)

//======================================================================
//*ralex, 14-08-22 21:10
//Процедура УстКомандыОК()
//	Если (НазваниеНабораПрав() <> "Администратор") и (НазваниеНабораПрав() <> "МенеджерСклад") Тогда 
//		Если((проведен()=1) ИЛИ (ПометкаУдаления()=1)) и (ОжидаемыеПоступления = 0) Тогда
//			СтрокаДействийФормы = "Закрыть";
//		КонецЕсли;
//	ИначеЕсли НазваниеНабораПрав() = "МенеджерСклад" Тогда
//		СтрокаДействийФормы = "#Записать Закрыть";
//	КонецЕсли;
//КонецПроцедуры // УстКомандОК() #Записать Провести? Закрыть
// -------- заменено на:
Процедура УстКомандыОК()
	Если ВидОперации = 0 Тогда //приход
		Если (НазваниеНабораПрав() <> "Администратор") и (НазваниеНабораПрав() <> "МенеджерСклад") Тогда 
			Если((проведен()=1) ИЛИ (ПометкаУдаления()=1)) и (ОжидаемыеПоступления = 0) Тогда
				СтрокаДействийФормы = "Закрыть";
			КонецЕсли;
		ИначеЕсли (НазваниеНабораПрав() = "МенеджерСклад")  и (ОжидаемыеПоступления = 0) Тогда
			СтрокаДействийФормы = "#Записать Закрыть";
		КонецЕсли;
	Иначе
		Если (НазваниеНабораПрав() <> "Администратор") Тогда 
			Если((проведен()=1) ИЛИ (ПометкаУдаления()=1)) и (ОжидаемыеПоступления = 0) Тогда
				СтрокаДействийФормы = "Закрыть";
			Иначе
				СтрокаДействийФормы = "#Записать Закрыть";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // УстКомандОК() #Записать Провести? Закрыть
//*/------------------------

Процедура УстКомандыПровести()
	//Если (НазваниеНабораПрав() <> "Администратор") и (ВидОперации = 1) Тогда
	//	СтрокаДействийФормы = "Записать?";
	//КонецЕсли;
	Если ВидОперации = 0 Тогда
		Если (НазваниеНабораПрав() <> "Администратор") и (НазваниеНабораПрав() <> "МенеджерСклад") Тогда 
			Если((проведен()=1) ИЛИ (ПометкаУдаления()=1)) и (ОжидаемыеПоступления = 0) Тогда
				СтрокаДействийФормы = "";
			КонецЕсли;
		ИначеЕсли НазваниеНабораПрав() = "МенеджерСклад" Тогда
			СтрокаДействийФормы = "#Записать";
		КонецЕсли;
	Иначе
		Если (НазваниеНабораПрав() <> "Администратор") Тогда 
			Если((проведен()=1) ИЛИ (ПометкаУдаления()=1)) и (ОжидаемыеПоступления = 0) Тогда
				СтрокаДействийФормы = "";
			Иначе
				СтрокаДействийФормы = "#Записать";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // УстКомандОК() #Записать Провести? Закрыть

//======================================================================
Функция тхтМоментОстатка()
	Если (ВидОперации = 1) и (ПустоеЗначение(ДокументОснование) = 0) Тогда
		Возврат "остатки на начало документа " + ДокументОснование.НомерДок + " " + ДокументОснование.ДатаДок;
	Иначе
		Возврат "";
	КонецЕсли;
КонецФункции // тхтМоментОстатка

//+ralex, 07-04-19 13:16
Функция КонтрольОстаткаВсего()
	//*ralex, 10-08-22 22:47
	//// Вычислим, сколько всего данного товара
	//выбСорт = КондиционныйТовар;
	//Если (ВидОперации = 1) и (тбОстаткиВсего <> 0) Тогда // это возврат
	//	стр = 0; ОстатокТовара = 0;
	//	Если тбОстаткиВсего.НайтиЗначение(Товар,стр,"Товар") = 1 Тогда
	//		ПолныйОстаток = тбОстаткиВсего.ПолучитьЗначение(стр,"ОстатокТовара");
	//		Если Коэффициент > 0 Тогда
	//			ПолныйОстаток =  ПолныйОстаток/Коэффициент;
	//		Иначе
	//			Возврат 0;
	//		КонецЕсли;
	//		ПолныйОстаток = Формат(ПолныйОстаток,"Ч012.2") + " " + Единица;
	//	Иначе
	//		ПолныйОстаток = "товара нет в РН!";
	//	КонецЕсли;
	//	Возврат ПолныйОстаток;
	//Иначе
	//	ПолныйОстаток= Регистр.ОстаткиТоваров.СводныйОстаток(?(ТипУчета = Фин,Фирма,глПустаяФирма),Товар,,выбСорт,"ОстатокТовара");
	//	Если Коэффициент>0 Тогда
	//		Возврат Формат(ПолныйОстаток/Коэффициент,"Ч012.2") + " " + Единица;
	//	Иначе
	//		Возврат 0;
	//	КонецЕсли;
	//КонецЕсли;
	// -------- заменено на:
	// Вычислим, сколько всего данного товара
	Возврат глКонтрольОстатка(Контекст,,,0);	//*/------------------------
КонецФункции

//+ralex, 07-08-22 12:27
Процедура ОстаткиПоСкладам()
	спрМХ = СоздатьОбъект("Справочник.МестаХранения");
	спрМХ.ВыбратьЭлементы();
	спсОстатки = СоздатьОбъект("СписокЗначений");
	//выбСорт = ?(неликвид = 1,Сорт,КондиционныйТовар);
	Пока спрМХ.ПолучитьЭлемент() = 1 Цикл
		Если (спрМХ.ЭтоГруппа() = 1) или (спрМХ.флОстаткиПоФОП = 1) Тогда
			Продолжить;
		КонецЕсли;
		// Вычислим, сколько всего данного товара
		ПолныйОстаток= Регистр.ОстаткиТоваров.СводныйОстаток(?(ТипУчета = Фин,Фирма,глПустаяФирма),Товар,спрМХ.ТекущийЭлемент(),КондиционныйТовар,"ОстатокТовара");
		Если ПолныйОстаток <>  0 Тогда
			Если Коэффициент>0 Тогда
				ПолнОст = ПолныйОстаток/Коэффициент;
			Иначе
				ПолнОст = ПолныйОстаток;
			КонецЕсли;
			спсОстатки.ДобавитьЗначение(спрМХ.ТекущийЭлемент(),"" + спрМХ.ТекущийЭлемент() + " = " + ПолнОст + " ");
		КонецЕсли;
	КонецЦикла;
	
	Резерв= 0;
	// проверяем резерв товара
	Если Константа.РазрешитьПродаватьРезерв=Перечисление.ДаНет.Нет Тогда
		// Вычислим, сколько зарезервировано всего данного товара
		Резерв= Регистр.РезервыТоваров.СводныйОстаток(Товар,,"РезервТовара");
		Если Резерв <> 0 Тогда
			Если Коэффициент>0 Тогда
				Резерв = Резерв/Коэффициент;
			КонецЕсли;
			спсОстатки.ДобавитьЗначение(Резерв," общий резерв товара = " + Резерв + " ");
		КонецЕсли;
	КонецЕсли;
	спсОстатки.ВыбратьЗначение(,,,,1);
КонецПроцедуры // ОстаткиПоСкладам
//+/------------------------

//*****************************************************************************
Функция ЗаголовокФормы() 
	Перем Заголовок, Название;
	
	Если ВидОперации = 0  Тогда
		Заголовок = "Приходная накладная ";
		Название ="Накладная №";
	Иначе
		Заголовок = "Приходная накладная  (возврат)";
		Название = "Накладная (возврат) №";
	КонецЕсли;
	
	
	Заголовок = Заголовок + глЗаголовок(Контекст);
	
	Форма.Заголовок(Заголовок);     
	Возврат Название;
КонецФункции //ЗаголовокФормы

//******************************************************************************
Процедура ОбновитьНадписи()
	Форма.ТекстВалюты.Заголовок(глСтрокаВалюты(Контекст));
	Форма.ТекстОснования.Заголовок(СокрП(Основание));
	Форма.ТекстПорядокОплаты.Заголовок(глСтрокаПорядокОплаты(Контекст));
	Форма.ТекстВалютыПересчета.Заголовок(глСтрокаВалютыПересчета(Контекст));
КонецПроцедуры

//======================================================================
Процедура ввестиКомментарийСклад()
	стр = комментарийСклад;
	Если ВвестиСтроку(стр,,100,0)= 1 Тогда
		комментарийСклад = стр;
	КонецЕсли;
КонецПроцедуры // ввестиКомментарийСклад

// ===============================
Процедура УстДоступностьКнопок()
	Если ВидОперации = 1 Тогда //возврат
		Форма.кнПодбор.Доступность(0);
		Если (НазваниеНабораПрав() <> "Администратор") Тогда
			Форма.кнОК.Доступность(0);
			форма.кнПровести.Доступность(0);
			Если (ПравоПользователяПроводитьПНВозвр = 1) и (Проведен() = 0) Тогда
				разрешенСкладВозврата = спрКонтрПрава.ПолучитьПравоПользователя(,"стрСпсСкладыВозврат",Склад);
				Форма.кнОК.Доступность(разрешенСкладВозврата);
				форма.кнПровести.Доступность(разрешенСкладВозврата);
			КонецЕсли;
		КонецЕсли;
		
		Если НазваниеНабораПрав() = "МенеджерСклад" Тогда
			Форма.кнОК.Доступность(0);
			форма.кнПровести.Доступность(0);
			Если ПравоПользователяПроводитьПНВозвр = 1 Тогда
				разрешенСкладВозврата = спрКонтрПрава.ПолучитьПравоПользователя(,"стрСпсСкладыВозврат",Склад);
				Форма.кнОК.Доступность(разрешенСкладВозврата);
				форма.кнПровести.Доступность(разрешенСкладВозврата);
			КонецЕсли;
		КонецЕсли;
	Иначе                      
		Форма.кнПодбор.Доступность(1);
		Форма.кнПоСкладам.Видимость(0); //+ralex, 24-05-20 11:04
		
		Если (НазваниеНабораПрав() <> "Администратор") и (ОжидаемыеПоступления = 0) Тогда
			//+ralex, 14-12-20 22:18
			складЗаказ = гл_ПолучитьЗначениеДопКонстанты("складЗаказ");
			Если Склад<> складЗаказ Тогда
				//+/ralex, 14-12-20 22:18
				Форма.кнОК.Доступность(0);
				форма.кнПровести.Доступность(0);
			Иначе
				Форма.кнОК.Доступность(1);
				форма.кнПровести.Доступность(1);
			КонецЕсли;
			//-ralex, 06-07-20 20:55
			//Форма.кнПодбор.Доступность(0);
			//-/ralex, 06-07-20 20:55
			
			Если (ПравоПользователяПроводитьПН = 1) и (Проведен() = 0) Тогда
				Форма.кнОК.Доступность(1);
				форма.кнПровести.Доступность(1);
			КонецЕсли;
		КонецЕсли;
		
		Если НазваниеНабораПрав() = "МенеджерСклад" Тогда
			Форма.кнОК.Доступность(0);
			форма.кнПровести.Доступность(0);
			Если ПравоПользователяПроводитьПН = 1 Тогда
				Форма.кнОК.Доступность(1);
				форма.кнПровести.Доступность(1);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	//+ralex, 24-05-20 11:39
	дост = 0;
	Если НазваниеНабораПрав() = "МенеджерСклад" Тогда
		дост = 1;
	КонецЕсли;
	форма.кнКомментСклада.Видимость(дост);
	//+/ralex, 24-05-20 11:39
	
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.кнОК.Доступность(0);
		Форма.кнПровести.Доступность(0);
		Форма.кнПодбор.Доступность(0);
		Форма.кнОснование.Доступность(0);
		
		//+ralex, 24-05-20 11:01
		Если форма.кнОК.Доступность() = 0 Тогда
			Форма.кнОК.Доступность(дост);
		КонецЕсли;
		//+/ralex, 24-05-20 11:01
	КонецЕсли;
	
	текЗакладка = Форма.Закладки.ПолучитьЗначение(Форма.Закладки.ТекущаяСтрока(),);
	Если текЗакладка = "Основной" Тогда
		ЕСЛИ (ИмяПользователя() = "ОЛЕГ") ИЛИ (ИмяПользователя() = "ОЛЬГА") ИЛИ (ИмяПользователя() = "1САдм")тогда
			форма.кнПересчитать.Видимость(1);
		ИначеЕсли Проведен() = 1 Тогда
			форма.кнПересчитать.Доступность(1);
		Иначе
			//*ralex, 28-07-20 00:23
			//форма.кнПересчитать.Доступность(0);
			// -------- заменено на:
			форма.кнПересчитать.Доступность(1);
			//*/ralex, 28-07-20 00:23
		КонецЕсли;	
		Форма.кнЗаполнить.Видимость(ОжидаемыеПоступления - Проведен()); //+ralex, 24-05-20 10:45
		Форма.кнЗаполнить.Доступность(ОжидаемыеПоступления - Проведен()); //+ralex, 24-05-20 10:45
		
		Если ВидОперации = 1 Тогда
			Форма.кнСформироватьПартии.Видимость(0); //+ralex, 24-05-20 10:45
		Иначе
			Форма.кнСформироватьПартии.Видимость(1-ОжидаемыеПоступления); //+ralex, 24-05-20 10:45
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

// ===============================
Функция УстДоступность()
	Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
		ДостКасса = 1;
	Иначе
		ДостКасса = 0;
	КонецЕсли;
	
	//менеджерПН имеет право менять документ до тех пор пока он не проведен.
	//*ralex, 25-01-20 01:32
	//Если (НазваниеНабораПрав()<>"Администратор") и (распечатан = 1) Тогда
	//	Если НазваниеНабораПрав() <> "МенеджерПН" Тогда
	//		форма.толькопросмотр(1);
	//	ИначеЕсли Проведен() = 1 Тогда
	//		форма.толькопросмотр(1);
	//	КонецЕсли;
	//КонецЕсли;
	// -------- заменено на:
	
	Если (НазваниеНабораПрав() <> "Администратор") Тогда
		Если распечатан = 1 Тогда
			Если (ВидОперации = 0) и (ОжидаемыеПоступления = 0) Тогда
				Если ПравоПользователяПроводитьПН = 0 Тогда //приход
					форма.толькопросмотр(1);
				КонецЕсли;
			ИначеЕсли ВидОперации = 1 Тогда
				Если ПравоПользователяПроводитьПНВозвр = 0 Тогда
					форма.толькопросмотр(1);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Если (Проведен() = 1) и (ОжидаемыеПоступления = 0) и (НазваниеНабораПрав() <> "МенеджерСклад") Тогда
			Попытка
				Если Форма.Закладки.ПолучитьЗначение(Форма.Закладки.текущаяСтрока(),) = "Основной" Тогда
					форма.толькопросмотр(1);
				КонецЕсли;
			Исключение
				форма.толькопросмотр(1);
			КонецПопытки;
		КонецЕсли;
		Если (ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.ошибка) или 
		(ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.ошибкаМенеджера) или 
		(ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.ошибкаСклада) Тогда 
			
			Форма.спсПричины.Доступность(0);
			форма.квоОшибок.Доступность(0);
			форма.тКомментОшибки.Доступность(0);
		КонецЕсли;
		
		Форма.Склад.Доступность(ПустоеЗначение(Контрагент.Склад)); //+ralex, 09-12-20 22:51
	КонецЕсли;
	//*/ralex, 25-01-20 01:32
	
	Форма.Касса.Видимость(ДостКасса);
	Форма.тКассы.Видимость(ДостКасса);
	УстДоступностьКнопок();
	Если ВидОперации = 1 Тогда
		Форма.ОжидаемыеПоступления.Видимость(0);
	КонецЕсли;
КонецФункции

//======================================================================
Функция показатьТел()
	//*ralex, 31-01-23 10:01
	//Если (ВидОперации = 0) и (ОжидаемыеПоступления = 0) и (Склад.флСкладЗаказной = 1) Тогда
	// -------- заменено на:
	Если (ВидОперации = 0) и (Склад.флСкладЗаказной = 1) Тогда
		//*/------------------------
		Форма.тхтПодтвержденСМС.Видимость(0);
		Форма.тхтТелефоны.Видимость(1);
		СчетФактура = "";
		Если ПустоеЗначение(ДокументОснование) = 0 Тогда
			Если ДокументОснование.Вид() = "ЗаказПоставщику" Тогда
				СчетФактура = ДокументОснование.ДокументОснование;
				Если ПустоеЗначение(СчетФактура) = 0 Тогда
					заказчик = СчетФактура.контрагент; 
					тел2 = "";
					Если ПустаяСтрока(Заказчик.Телефон2) = 0 Тогда
						тел2 = ", " + Заказчик.Телефон2;
					КонецЕсли;
					
					Возврат	"заказчик: " + заказчик + ", тел. " + заказчик.Телефон1 + тел2; 
					//Возврат	"заказчик: " + заказчик + ", тел. " + заказчик.Телефон1 + ?(ПустаяСтрока(заказчик.Телефон2) = 1,"",", " + заказчик.Телефон2); 
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Иначе
		Форма.тхтПодтвержденСМС.Видимость(1);
		Форма.тхтТелефоны.Видимость(0);
	КонецЕсли;
КонецФункции // показатьТел
//================================
Процедура УстДоступностьГлубина()
	// нет кредита - нет глубины
	Если ВидОперации = 1 Тогда
		Если Контрагент.Глубина.Получить(ДатаДок) = 0 тогда
			Форма.ДатаОплПодпись.Видимость(0);
			Форма.ДатаОпл.Видимость(0);			
			Форма.ГлубинаПодпись.Видимость(0);
			Форма.Глубина.Видимость(0);			
		Иначе	
			Форма.ГлубинаПодпись.Видимость(1);
			Форма.Глубина.Видимость(1);			           
			Форма.ДатаОплПодпись.Видимость(1);
			Форма.ДатаОпл.Видимость(1);			
		КонецЕсли;	
	Иначе                        
		Если Контрагент.ГлубинаКредитаПоставщика.Получить(ДатаДок) = 0 тогда
			Форма.ДатаОплПодпись.Видимость(0);
			Форма.ДатаОпл.Видимость(0);			
			Форма.ГлубинаПодпись.Видимость(0);
			Форма.Глубина.Видимость(0);			
		Иначе
			Форма.ДатаОплПодпись.Видимость(1);
			Форма.ДатаОпл.Видимость(1);			
			Форма.ГлубинаПодпись.Видимость(1);
			Форма.Глубина.Видимость(1);			
		КонецЕсли;	
	КонецЕсли; 
КонецПроцедуры        

//*****************************************************************************
Процедура ИзмГлубина()
	Если ПустоеЗначение(Глубина) = 1 Тогда              
		Глубина = 0;
	КонецЕсли;	
	ДатаОплаты=глБанковскаяДата(ДатаДок,Глубина);	
КонецПроцедуры

//*****************************************************************************
Процедура УстГлубина() 
	// Формирует и показывает дату оплаты и глубину кредита
	Если ВидОперации = 1 Тогда
		Если Контрагент.Глубина.Получить(ДатаДок) <> 0 тогда
			Глубина=Контрагент.Глубина.Получить(ДатаДок);  		
		КонецЕсли;	
	Иначе                        
		Если Контрагент.ГлубинаКредитаПоставщика.Получить(ДатаДок) <> 0 тогда
			Если Глубина <> Контрагент.ГлубинаКредитаПоставщика.Получить(ДатаДок) тогда
				Глубина=Контрагент.ГлубинаКредитаПоставщика.Получить(ДатаДок);
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;	
	ИзмГлубина();
КонецПроцедуры //Выбор Глубины

//******************************************************************************
Процедура ИзмДатаДок()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата); 
	ИзмГлубина();                     
	ОбновитьНадписи();
КонецПроцедуры

//******************************************************************************
Функция Итого()
	// Показ итоговых сумм по документу
	Перем Результат,СуммаБезНДС, СуммаСНДС, СуммаНДС;
	итСуммаБезНДС = Итог("СуммаБезНДС");
	итСуммаСНДС = Итог("СуммаСНДС");
	СуммаНДС = СуммаСНДС - СуммаБезНДС;
	Результат = ?(итСуммаБезНДС =0,"","Сумма="+ глФРМ(итСуммаБезНДС, Валюта, 1))+
	?(СуммаНДС = 0,""," НДС=" + глФРМ(СуммаНДС, Валюта, 1))+ 
	?(итСуммаСНДС = 0,""," Всего=" + глФРМ(итСуммаСНДС, Валюта, 1));
	Возврат Результат;
КонецФункции

//======================================================================
Функция ИмяДокумента()
	Если ОжидаемыеПоступления = 0 Тогда
		Возврат "Прибуткова накладна" + ?(ВидОперации=1," (повернення)","");
	Иначе
		Возврат "Очікуване надхождення";
	КонецЕсли;
КонецФункции // ИмяДокумента

// ===============================
Процедура ВыбранВидТорговли()
	Если ВидТорговли = Перечисление.ВидыТорговли.Бартер тогда
		Если Договор.Выбран() = 1 тогда
			Если Договор.Вид()="Договор" Тогда
				Если Договор.ВидТорговли <> ВидТорговли тогда
					глТрассировка(Шаблон("Вид торговли не сответствует договору - должен быть [Договор.ВидТорговли]!!!"),1);					
					ВидТорговли = Договор.ВидТорговли; 
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;	
	спВидТорговли.ТекущаяСтрока(спВидТорговли.НайтиЗначение(ВидТорговли));
КонецПроцедуры

//======================================================================
//+ralex, 17-05-21 23:58
Процедура ИзмКвоПартияПост()
	Если квоПартияПост1 + квоПартияПост2 + квоПартияПост3 + квоПартияПост4+ квоПартияПост5+ квоПартияПост6 > Количество Тогда
		Предупреждение("Количество по партиям больше чем количество всего.",3);
	КонецЕсли;
КонецПроцедуры // ИзмКвоПартияПост()
//+/------------------------

// ===============================
Процедура ИзмВидТорговли()
	Если (спВидТорговли.ПолучитьЗначение(спВидТорговли.ТекущаяСтрока()) = Перечисление.ВидыТорговли.Бартер) и (ВидОперации = 1) тогда
		глТрассировка("Возврат по бартеру...",1);
	Иначе
		ВидТорговли = спВидТорговли.ПолучитьЗначение(спВидТорговли.ТекущаяСтрока());
	КонецЕсли;	
	ВыбранВидТорговли();
	//	УстДоступность(); //-ralex, 14-12-20 22:21
КонецПроцедуры   

//======================================================================
Процедура ИзмСклад()
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(складскоеМесто) = 0 Тогда
			Если ПустоеЗначение(складскоеМесто.Склад) = 0  Тогда
				Если складскоеМесто.Склад <> Склад Тогда
					Сообщить("Складское место в строке " + НомерСтроки + " принадлежит другому складу. выберите складское место.");
					складскоеМесто = 0;
				КонецЕсли;
			Иначе
				Сообщить("У складского места " + складскоеМесто + " в строке " + НомерСтроки + " не указан склад!");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры // ИзмСклад()

//======================================================================
Процедура проверитьСкладТовара(выбТовар = 0)
	Если выбТовар = 0 Тогда
		выбТовар = Товар;
	КонецЕсли;
	
	//выбСсклад = дополненияТорговля.ПолучитьСвойствоНоменклатуры(выбТовар,Перечисление.КлассификаторСвойствНоменклатуры.Склад);
	выбСсклад = дополненияТорговля.ПолучитьПараметрЛюбогоТипаГруппыСправочника(выбТовар,"Склад");
	
	Если ПустоеЗначение(выбСсклад) = 1 Тогда
		Возврат;
	КонецЕсли;
	
	Если выбСсклад.флСкладЗаказной = 1 Тогда
		Склад = выбСсклад;
		ИзмСклад();
		Сообщить("Товар " + выбТовар.Наименование + " заказной! Склад изменен.");
	ИначеЕсли выбСсклад <> Склад Тогда
		Сообщить("У товара " + выбТовар.Наименование + "основной склад = " + выбСсклад);
	КонецЕсли;
КонецПроцедуры // проверитьСклад

// ===============================
Процедура ЗаполнитьСпВидТорговли()
	
	спВидТорговли.ДобавитьЗначение(Перечисление.ВидыТорговли.Нал,Строка(Перечисление.ВидыТорговли.Нал));
	спВидТорговли.ДобавитьЗначение(Перечисление.ВидыТорговли.Предоплата,Строка(Перечисление.ВидыТорговли.Предоплата));
	спВидТорговли.ДобавитьЗначение(Перечисление.ВидыТорговли.Бартер,Строка(Перечисление.ВидыТорговли.Бартер));
	спВидТорговли.ДобавитьЗначение(Перечисление.ВидыТорговли.Кредит,Строка(Перечисление.ВидыТорговли.Кредит));
	
КонецПроцедуры

Процедура ЗаполнитьСпсПричиныВозврата()
	спсПричины.УдалитьВсе();
	Если ВидОперации = 1 Тогда
		спсПричины.ДобавитьЗначение("не выбрана","не выбрана");
		спсПричины.ДобавитьЗначение(перечисление.ПричиныВозвратаПокупателем.лишнее,Строка(перечисление.ПричиныВозвратаПокупателем.лишнее));	
		спсПричины.ДобавитьЗначение(перечисление.ПричиныВозвратаПокупателем.обменДоОтгрузки ,Строка(перечисление.ПричиныВозвратаПокупателем.обменДоОтгрузки));	
		спсПричины.ДобавитьЗначение(перечисление.ПричиныВозвратаПокупателем.обменПослеОтгрузки ,Строка(перечисление.ПричиныВозвратаПокупателем.обменПослеОтгрузки));	
		спсПричины.ДобавитьЗначение(перечисление.ПричиныВозвратаПокупателем.отказ,Строка(перечисление.ПричиныВозвратаПокупателем.отказ));	
		спсПричины.ДобавитьЗначение(перечисление.ПричиныВозвратаПокупателем.неНайдено,Строка(перечисление.ПричиныВозвратаПокупателем.неНайдено));	
		спсПричины.ДобавитьЗначение(перечисление.ПричиныВозвратаПокупателем.ошибкаМенеджера,Строка(перечисление.ПричиныВозвратаПокупателем.ошибкаМенеджера));	
		спсПричины.ДобавитьЗначение(перечисление.ПричиныВозвратаПокупателем.ошибкаСклада,Строка(перечисление.ПричиныВозвратаПокупателем.ошибкаСклада));	
		спсПричины.ДобавитьЗначение(перечисление.ПричиныВозвратаПокупателем.бракПоставщика,Строка(перечисление.ПричиныВозвратаПокупателем.бракПоставщика));	
		спсПричины.ДобавитьЗначение(перечисление.ПричиныВозвратаПокупателем.бракНаш,Строка(перечисление.ПричиныВозвратаПокупателем.бракНаш));	
	Иначе
		спсПричины.ДобавитьЗначение("не выбрана","не выбрана");
		спсПричины.ДобавитьЗначение(перечисление.ПричиныВозвратаПокупателем.ошибкаМенеджера,Строка(перечисление.ПричиныВозвратаПокупателем.ошибкаМенеджера));	
		спсПричины.ДобавитьЗначение(перечисление.ПричиныВозвратаПокупателем.ошибкаСклада,Строка(перечисление.ПричиныВозвратаПокупателем.ошибкаСклада));	
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмДоговор()
	Если ПустоеЗначение(Договор)=0 Тогда
		Если Договор.Вид()="Договор" Тогда
			Если спВидТорговли.Принадлежит(Договор.ВидТорговли)=0 Тогда
				глТрассировка(Шаблон("Нельзя выбирать Договор с видом торговли [Договор.ВидТорговли]!!!"),1);
				Договор=0;
			Иначе
				ВидТорговли = Договор.ВидТорговли;
				ВыбранВидТорговли();
			КонецЕсли;    
		ИначеЕсли глДополнениеДоговораКонсигнации(Договор)=Да Тогда
			ВидТорговли = Перечисление.ВидыТорговли.Предоплата;
			ВыбранВидТорговли();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//======================================================================
Функция ПроведениеДокумента() Экспорт
	рф = 0; //отключили обработку ожидания
	структура = СоздатьОбъект("Структура");
	структура.Вставить("сканер",0);
	структура.Вставить("Пользователь",глПользователь);
	Если Провести(3,структура) = 0 Тогда //не провели
		ОжидаемыеПоступления = стЗнОжидаемыеПоступления;
		Предупреждение("Документ не проведен. Статус ""Ожидаемое поступление"" не изменен ! ");  
	КонецЕсли;
	Возврат 0;
КонецФункции // ПроведениеДокумента

//======================================================================
Процедура измФлОжидаемые()
	рф = СоздатьОбъект("РасширениеФормы");
	//рф.УстановитьФорму(Форма);
	рез = рф.ОбработкаОжидания("ПроведениеДокумента",1000);
	Сообщить(" - " + рез);
	Форма.кнЗаполнить.Доступность(ОжидаемыеПоступления);
	УстВидимостьПартийПост();
КонецПроцедуры // измФлОжидаемые

//======================================================================
Функция УстановитьНадписьРаспечатанОтгружен()
	Возврат дополненияТорговля.УстановитьНадписьРаспечатанОтгружен(Контекст);
КонецФункции

//======================================================================
//Процедура измПричинаВозврата()
//	Если ПричинаВозврата > 0 Тогда
//		ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.ЗначениеПоНомеру(ПричинаВозврата);
//	КонецЕсли;
//	текВидимость = 0;
//	Если ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.ошибкаСклада Тогда
//		текВидимость = 1;
//	КонецЕсли;
//	Форма.Виновный.видимость(текВидимость);
//	Форма.тВиновный.видимость(текВидимость);
//КонецПроцедуры // измПричинаВозврата

//======================================================================
Процедура Заполнить()
	флНужнаСортировка = 0;
	Если КоличествоСтрок() <> 0 Тогда
		Если Вопрос("Удалить строки?",4,5) = 6 Тогда
			УдалитьСтроки();
		Иначе
			флНужнаСортировка = 1;
		КонецЕсли;
	КонецЕсли;
	Если Контрагент.Выбран() = 0 Тогда
		Предупреждение("Не выбран поставщик.",2);
		Возврат;
	КонецЕсли;
	Дата1 = ДатаДок - 7;
	Если ВвестиДату(Дата1,"Укажите начальную дату просмотра документов ""Заказ поставщику""",10) <> 1 Тогда
		Возврат;
	КонецЕсли;
	тз = глПолучитьТЗЗаказов(Дата1,ДатаДок,Контрагент);
	тз.Сортировать("Товар");
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		НоваяСтрока();
		Товар = тз.Товар;
		Количество = тз.Количество;
		Единица = тз.единица;
		Коэффициент = Единица.Коэффициент;
	КонецЦикла;
	
	тз = СоздатьОбъект("ТаблицаЗначений");
	Если флНужнаСортировка = 1 Тогда
		ВыгрузитьТабличнуюЧасть(тз);
		тз.Свернуть("Товар,Единица","Количество");
		тз.Сортировать("Товар");
		тз.ВыбратьСтроки();
		Пока тз.ПолучитьСтроку() = 1 Цикл
			тз.коэффициент = тз.единица.Коэффициент;
		КонецЦикла;
		ЗагрузитьТабличнуюЧасть(тз);
	КонецЕсли;
КонецПроцедуры // Заполнить

// ===============================
Процедура Печать() 
	Если (ВидОперации = 1) и (НазваниеНабораПрав() <> "Администратор") Тогда //возврат
		Если ПустоеЗначение(ПричинаВозвратаПок) = 1 Тогда
			Предупреждение("Не указана причина возврата.");
			Возврат;
		КонецЕсли; 
		Если спрКонтрПрава.ПроверитьРазрешениеГруппыСМС(Контрагент) <> 0 Тогда
			Если подтвержденСМС = 0 Тогда
				Предупреждение("Для клиента " + Контрагент + " требуется sms подтверждение.");
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ВЫб = 0;
	Если (ВидОперации = 1) Тогда 
		//*ralex, 15-10-23 22:24
		//Если (Проведен() = 1) и (ЧекРаспечатан = 0) и (глПользователь.КассирРРО = 1) и (ПустаяСтрока(ДокументОснование.ФискальныйНомерЧека) = 0) Тогда // при возарте добавляем  печать на ПРРО
		//	Меню = СоздатьОбъект("СписокЗначений");
		//	Меню.ДобавитьЗначение(1,"Друкувати на принтер");
		//	Меню.ДобавитьЗначение(2,"Друкувати на ПРРО");
		//	Если Меню.ВыбратьЗначение(Выб,"Вкажіть куди друкувати",,,1) <> 1 Тогда
		//		Возврат;
		//	КонецЕсли;
		//КонецЕсли;
		// -------- заменено на:
		Если (Проведен() = 1) и (ДокументОснование.ЧекРаспечатан = 1)  и (глПользователь.КассирРРО = 1) Тогда
			Меню = СоздатьОбъект("СписокЗначений");
			Меню.ДобавитьЗначение(1,"Друкувати на принтер");
			Меню.ДобавитьЗначение(2,"Друкувати на ПРРО");
			Если Меню.ВыбратьЗначение(Выб,"Вкажіть куди друкувати",,,1) <> 1 Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		//*/------------------------
	КонецЕсли;
	
	текРаспечатан = дополненияТорговля.ПолучитьСостояниеДокумента(Контекст,"распечатан"); //+ralex, 19-12-21 23:02
	Если ВЫб <> 2 Тогда
		Если ШтрКод = 0 Тогда
			ШтрКод = СформироватьШтрихКодДокумента(Контекст,ТекущийДокумент());
			Записать();
		КонецЕсли;
		Если Выбран() = 0 Тогда
			Записать();
		КонецЕсли;
		Если Выбран() = 0 Тогда //если не записался то возврат
			Возврат;
		КонецЕсли;
		
		Таб = СоздатьОбъект("Таблица");  
		
		ВП = Валюта;  
		КурсПечати = Курс;                     
		ДатаКурса = Дата_Курса;
		
		Если ПустоеЗначение(Контрагент) = 0 Тогда
			Если Контрагент.ВидКонтрагента <> Перечисление.ВидыКонтрагентов.Нерезидент Тогда
				Если ТипУчета > 0 Тогда
					ВП = Гривня;  
					КурсПечати = глКурсДляВалюты(ВП,ДатаДок);                     
					ДатаКурса = ДатаДок;
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	
		
		
		ПечФорма = "Накладная";
		Язык = глЯзык(ПечФорма); 	
		номерКопии = "";
		текРаспечатан = дополненияТорговля.ПолучитьСостояниеДокумента(Контекст,"распечатан"); //+ralex, 19-12-21 23:02
		Если текРаспечатан > 1 Тогда
			ПечФорма = ПечФорма+"_Дубликат";
			номерКопии = "копия " + текРаспечатан;
		Иначе
			ИмяФайлаПечатнойФормы = КаталогИБ()+"ExtForms\PrnForms\PN_Vozvrat.mxl";		
			Если ФС.СуществуетФайл(ИмяФайлаПечатнойФормы) = 1 Тогда
				ПечФорма = ИмяФайлаПечатнойФормы;
			КонецЕсли;
		КонецЕсли;
		
		Таб.ИсходнаяТаблица(ПечФорма);
		глУстПропись(Валюта,Язык);
		
		ПечШтрихКод=Строка(ШтрКод);
		
		//+ralex, 21-01-20 23:45
		симвДА = 254; симвНЕТ = 111;
		симвОтказ = симвНЕТ;
		симвБракНаш = симвНЕТ;
		симвБракПоставщика = симвНЕТ;
		симвЛишнее = симвНЕТ;
		симвНеНайдено = симвНЕТ;
		симвОбмен = симвНЕТ;
		симвБокМен = симвНЕТ;
		симвБокСклад = симвНЕТ;
		
		Фирма.ИспользоватьДату(ДатаДок,1);
		
		Если ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.лишнее Тогда
			симвЛишнее = симвДА;
		ИначеЕсли ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.обмен Тогда
			симвОбмен = симвДА;
			//+ralex, 29-05-21 23:53
		ИначеЕсли ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.обменДоОтгрузки Тогда
			симвОбмен = симвДА;
		ИначеЕсли ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.обменПослеОтгрузки Тогда
			симвОбмен = симвДА;
			//+/------------------------
		ИначеЕсли ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.бракНаш Тогда
			симвБракНаш = симвДА;
		ИначеЕсли ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.бракПоставщика Тогда
			симвБракПоставщика = симвДА;
		ИначеЕсли ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.отказ Тогда
			симвОтказ = симвДА;
		ИначеЕсли ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.неНайдено Тогда
			симвНеНайдено = симвДА;
		ИначеЕсли ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.ошибкаМенеджера Тогда
			симвБокМен = симвДА;
		ИначеЕсли ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.ошибкаСклада Тогда
			симвБокСклад = симвДА;
		КонецЕсли;
		//+/ralex, 21-01-20 23:45
		
		тхтКоммент = ?(ВидОперации = 1,"" + ПричинаВозвратаПок +", склад:" + СокрЛП(Склад) + " :: " + СокрЛП(Комментарий),"");
		Если ВидОперации = 1 Тогда //возврат
			Таб.ВывестиСекцию("Шапка");
		Иначе
			Таб.ВывестиСекцию("Шапка<");
			Таб.ВывестиСекцию("Шапка>");
		КонецЕсли;
		спрЕд = СоздатьОбъект("Справочник.Единицы");
		
		Ном = 1;
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл  
			КоэффМ2 = 0; КвоМ2 = 0; ЦенаМ2 = 0; ЕдиницаМ2 = ""; ПечЦенаM2 = 0;
			ПечЦена = глФРМ(глПересчет(ЦенаБезНДС,Валюта,Курс,ВП,ДатаДок),ВП,0);
			ПечСумма = глФРМ(глПересчет(СуммаБезНДС,Валюта,Курс,ВП,ДатаДок),ВП,0);
			//м2
			спрЕд.ИспользоватьВладельца(Товар);
			спрЕд.ВыбратьЭлементы();
			Пока спрЕд.ПолучитьЭлемент() = 1 Цикл
				Если спрЕд.Единица = Константа.едИзмМетр2 Тогда
					КоэффМ2 = спрЕд.Коэффициент;
					КвоМ2 = Окр(Количество*Коэффициент/КоэффМ2,3);
					//ПечКвоМ2 = ?(КвоМ2 = 0,"",КвоМ2);
					ЦенаМ2 = Окр(СуммаБезНДС/КвоМ2,3);
					ПечЦенаM2 = глПересчет(ЦенаМ2,Валюта,Курс,ВП,ДатаДок);		
					Если ПечЦенаM2 = 0 Тогда
						ПечЦенаM2 = "";
					Иначе
						ПечЦенаM2 = СокрЛП(Формат(ПечЦенаM2,"Ч012.2"));
					КонецЕсли;
					ЕдиницаМ2 = ""+Константа.едИзмМетр2;
				КонецЕсли;
			КонецЦикла;
			
			имяТовара = Товар.ПолнНаименование;
			тхтПартия = "";
			Если ПустоеЗначение(ПартияПост1) = 0 Тогда
				тхтПартия = ПартияПост1;
			КонецЕсли;
			
			Если ЦенаМ2 = 0 Тогда
				Таб.ВывестиСекцию("Строка_1");
			Иначе
				Таб.ВывестиСекцию("Строка");
			КонецЕсли;
			Если тхтПартия <> "" Тогда
				Таб.ВывестиСекцию("Партия");
			КонецЕсли;
			Ном = Ном+1;
		КонецЦикла;
		ПечБезНДС = глФРМ(глПересчет(Итог("СуммаБезНДС"),Валюта,Курс,ВП,ДатаДок),ВП,0);
		ПечНДС = глФРМ(глПересчет(Итог("СуммаСНДС") - Итог("СуммаБезНДС"),Валюта,Курс,ВП,ДатаДок),ВП,0);
		ПечСНДС = глФРМ(глПересчет(Итог("СуммаСНДС"),Валюта,Курс,ВП,ДатаДок),ВП,0);	
		ПечНДСПропись = " "+Формат(глПересчет(Итог("СуммаСНДС") - Итог("СуммаБезНДС"),Валюта,Курс,ВП,ДатаДок),"Ч12.2")+" "+ВП.Кратко;
		ПечСНДСПропись = глСуммаПрописью(глПересчет(Итог("СуммаСНДС"),Валюта,Курс,ВП,ДатаДок),ВП);  
		
		Если ВидОперации = 1 Тогда
			Таб.ВывестиСекцию("Дно_Возврат");
		Иначе
			Таб.ВывестиСекцию("Дно");
		КонецЕсли;
		
		Таб.ТолькоПросмотр(1);
		Таб.Защита(Константа.ФлагЗащитыТаблиц);
		Таб.Опции(0,0,,);
		//-ralex, 28-06-20 22:12
		//Распечатан=1;
		//Если НазваниеНабораПрав() <> "Администратор" Тогда
		//	ЗаписьЖурналаРегистрации("Автопроведение при печати документа");
		//	Если Провести() = 0 Тогда
		//		СтатусВозврата(0);
		//		Возврат;
		//	КонецЕсли;  
		//КонецЕсли;
		//-/ralex, 28-06-20 22:12
		Таб.Показать("ПЕЧАТЬ: Приходная накладная","");
		
		дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"распечатан",текРаспечатан + 1);
		
		Если спрКонтрПрава.ПроверитьРазрешениеГруппыСМС(Контрагент) <> 0 Тогда
			Если подтвержденСМС = 1 Тогда
				//*ralex, 15-02-23 11:34
				//Если (смсСуммаОтправлено <> 1) или (стСумма <> Итог("СуммаСНДС")) Тогда
				// -------- заменено на:
				отправленоСМССумма = дополненияТорговля.ПолучитьСостояниеДокумента(Контекст,"отправленоСМССумма"); 
				Если Окр(отправленоСМССумма,0) <> Окр(Итог("СуммаСНДС"),0) Тогда
					//*/------------------------
					смс = СоздатьОбъект("sms");
					текСообщение = "Ваш возврат № " + Прав(НомерДок,6) + " на сумму " + Окр(Итог("СуммаСНДС"),2) + " грн.";
					смс.ОтправитьТурбоСМС(Контрагент, текСообщение);
					//отладка
					Если НазваниеНабораПрав() = "Администратор" Тогда
						Сообщить("СМС отправлено: " + текСообщение);
					КонецЕсли;
					дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"отправленоСМССумма",Окр(Итог("СуммаСНДС"),2));
					//смсСуммаОтправлено = 1; //-ralex, 15-02-23 12:11
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;	
	Иначе  ///печать на РРО
		Если Проведен() = 0 Тогда
			Предупреждение("Документ должен быть проведен.");
			Возврат;
		КонецЕсли;
		спрПРРО = СоздатьОбъект("Справочник.ПРРО");
		спрПРРО.ВыбратьЭлементыПоРеквизиту("Фирма",Фирма);
		ФН = "";
		Пока спрПРРО.ПолучитьЭлемент() = 1 Цикл
			Если спрПРРО.Рабочий = Перечисление.ДаНет.Да Тогда
				ФН = спрПРРО.ФискальныйНомер;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ПустоеЗначение(ФН) = 1 Тогда
			Предупреждение("Для фірми "+Фирма+" не вказаний ПРРО");
			Возврат;
		КонецЕсли;
		спПарам = СоздатьОбъект("СписокЗначений");
		спПарам.Установить("Конт",ТекущийДокумент());
		спПарам.Установить("ЧтоДелать","ПечатьЧека");
		спПарам.Установить("ПродажаВозврат",2);
		спПарам.Установить("ФискальныйНомер",ФН);
		ОткрытьФормуМодально("Обработка.ОбслуживаниеЭККА_ВчасноКасса",спПарам);
	
		ошибка = спПарам.Получить("Ошибка");
		ФискальныйНомерЧека = спПарам.Получить("ФискальныйНомерЧека");
		ДатаВремяЧека = спПарам.Получить("ДатаВремя");
		НомерПРРО = спПарам.Получить("ФН");
		дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"ФискальныйНомерЧека",ФискальныйНомерЧека);
		дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"ДатаВремяЧека",ДатаВремяЧека);
		дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"кассирЧека",глПользователь);
		дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"НомерПРРО",глПользователь);
		Если ошибка = 0 Тогда
			ЧекРаспечатан = 1;
		КонецЕсли;
		Провести();
		Форма.Закрыть(0);
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПечатьНаСкладЗаказной() 
	текРаспечатан = дополненияТорговля.ПолучитьСостояниеДокумента(Контекст,"распечатан"); //+ralex, 19-12-21 23:02
	
	Если ШтрКод = 0 Тогда
		ШтрКод = СформироватьШтрихКодДокумента(Контекст,ТекущийДокумент());
		Записать();
	КонецЕсли;
	Если Выбран() = 0 Тогда
		Записать();
	КонецЕсли;
	Если Выбран() = 0 Тогда //если не записался то возврат
		Возврат;
	КонецЕсли;
	
	СчетФактура = "";
	Если ПустоеЗначение(ДокументОснование) = 0 Тогда
		Если ДокументОснование.Вид() = "ЗаказПоставщику" Тогда
			СчетФактура = ДокументОснование.ДокументОснование;
			Если ПустоеЗначение(СчетФактура) = 0 Тогда
				ПечШтрихКодСчетПокупателя = Строка(ДокументОснование.ДокументОснование.ШтрКод);
				заказчик = СчетФактура.контрагент; 
				тхтЗаказчик = заказчик.Наименование;
			Иначе
				СчетФактура = ДокументОснование;
				ПечШтрихКодСчетПокупателя = Строка(ДокументОснование.ШтрКод);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ПечШтрихКод=Строка(ШтрКод);
	
	Таб = СоздатьОбъект("Таблица");  
	ПечФорма = "ПриходСкладЗаказной";
	Язык = глЯзык(ПечФорма); 	
	Таб.ИсходнаяТаблица(ПечФорма);
	глУстПропись(Валюта,Язык);
	
	Таб.ВывестиСекцию("Шапка1");
	Таб.ВывестиСекцию("Шапка2");
	
	спрЕд = СоздатьОбъект("Справочник.Единицы");
	
	Ном = 1;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл  
		Коэфф2 = 0; Кво2 = 0; Цена2 = 0; Единица2 = ""; ПечЦена2 = 0;
		Коэфф3 = 0; Кво3 = 0; Цена3 = 0; Единица3 = ""; ПечЦена3 = 0;
		//уп.
		спрЕд.ИспользоватьВладельца(Товар);
		спрЕд.ВыбратьЭлементы();
		Пока спрЕд.ПолучитьЭлемент() = 1 Цикл
			Если спрЕд.Единица = Константа.едИзмУпаковка Тогда
				Если Кво2 = 0 Тогда
					Коэфф2 = спрЕд.Коэффициент;
					Кво2 = Окр(Количество*Коэффициент/Коэфф2,3);
					Единица2 = ""+Константа.едИзмУпаковка;
				ИначеЕсли Кво3 = 0 Тогда
					Коэфф3 = спрЕд.Коэффициент;
					Кво3 = Окр(Количество*Коэффициент/Коэфф3,3);
					Единица3 = ""+Константа.едИзмУпаковка;
				КонецЕсли;
				
			ИначеЕсли спрЕд.Единица = Константа.едИзмМетр2 Тогда
				Если Кво2 = 0 Тогда
					Коэфф2 = спрЕд.Коэффициент;
					Кво2 = Окр(Количество*Коэффициент/Коэфф2,3);
					Единица2 = ""+Константа.едИзмМетр2;
				ИначеЕсли Кво3 = 0 Тогда
					Коэфф3 = спрЕд.Коэффициент;
					Кво3 = Окр(Количество*Коэффициент/Коэфф3,3);
					Единица3 = ""+Константа.едИзмМетр2;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Если (Кво2 = 0) и (Кво3 = 0) Тогда
			Таб.ВывестиСекцию("Строка_1");
		ИначеЕсли Кво3 = 0 Тогда
			Таб.ВывестиСекцию("Строка_2");
		Иначе
			Таб.ВывестиСекцию("Строка_3");
		КонецЕсли;
		Ном = Ном+1;
	КонецЦикла;
	
	Если ВидОперации = 1 Тогда
		Таб.ВывестиСекцию("Дно_Возврат");
	Иначе
		Таб.ВывестиСекцию("Дно");
	КонецЕсли;
	
	Таб.ТолькоПросмотр(1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.Опции(0,0,,);
	Таб.Показать("ПЕЧАТЬ: ПН на склад " + Склад,"");
	
	дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"распечатан",текРаспечатан + 1);
КонецПроцедуры

//======================================================================
Процедура ВыборВариантаПечати()
	Перем выбЗн;
	Если (ВидОперации = 0) и (ОжидаемыеПоступления = 0) и (Склад.флСкладЗаказной = 1) Тогда
		ПечатьНаСкладЗаказной();
	Иначе
		Печать();
	КонецЕсли;
КонецПроцедуры // гл

//******************************************************************************
Процедура ПриВводеНаОсновании(ДокОснование)
	Перем ВидОсн;
	
	Если ПустоеЗначение(ДокОснование) = 1 Тогда
		Возврат;
	КонецЕсли;
	
	ВидОсн = ДокОснование.Вид();
	
	Если  глЕстьРеквизитШапки("Валюта", ВидОсн) = Да Тогда
		Валюта = ДокОснование.Валюта;
		//*ralex, 04-11-20 18:44
		//Дата_Курса = ДокОснование.Дата_Курса;
		//Курс = ДокОснование.Курс;
		// -------- заменено на:
		Дата_Курса = ДатаДок;
		Курс = глКурсДляВалюты(Валюта,ДатаДок);
		//*/ralex, 04-11-20 18:44
	КонецЕсли;	
	
	глЗаполнитьШапкуНаОсн(Контекст,ДокОснование); 
	
	Если ДокОснование.Вид() = "ЗаказПоставщику" Тогда
		Контрагент = ДокОснование.Контрагент;
		ИзмКонтрагент();
	КонецЕсли;
	ВыбранВидТорговли();
	
	ИзмДоговор();
	УстГлубина();
	УстДоступностьГлубина();
	
	Если ВидОсн <> "Договор" Тогда
		глСкопироватьТовСостав(Контекст,ДокОснование);    
	КонецЕсли;
	
	Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
		Касса = глНайтиКассу(Фирма,Валюта);
	КонецЕсли;
	
КонецПроцедуры

//*****************************************************************************
// функции и процедуры, вызываемые из формул элементов диалога

//******************************************************************************
Процедура Взаиморасчеты()
	глПоказатьДолг(Контекст, Контрагент, "Закупка");
КонецПроцедуры

//*****************************************************************************
Процедура ВыборФирмы()
	// по кнопке редактирования параметров фирмы в докумнете
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ИнформацияОфирме", КонтекстДокумента);
	ОбновитьНадписи();
КонецПроцедуры	

//*****************************************************************************
Процедура ВыборОплаты()
	// Процедура по кнопке редактирования параметров оплаты в докумнете
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ИнформацияОценах", КонтекстДокумента);
	ОбновитьНадписи();
КонецПроцедуры	

//*****************************************************************************
Процедура ИзмКонтрагент(флПодтвержден = 0) // Процедура при выборе Контрагента в докумнете
	Если Контрагент.Выбран()=1 Тогда   
		//+ralex, 2018-04-29 21:50:38
		Если спрКонтрПрава.ПроверитьРазрешение(Контрагент) = 0 Тогда
			Контрагент = СтарыйКонтрагент;
			Предупреждение("Вам запрещено создавать документы для этого контрагента",10);
			Возврат;
		КонецЕсли;
		//+/ralex, 2018-04-29 21:50:38
		подтвержденСМС = ?(подтвержденСМС = 1,1,флПодтвержден); //+ralex, 16-05-21 15:31
		
		Если СтарыйКонтрагент <> Контрагент Тогда
			подтвержденСМС = 0;
			// изменили Контрагента
			// очистим договор
			Договор = ПолучитьПустоеЗначение("Документ.Договор");
			Если Константа.ПодставлятьОсновнойДоговор = Да Тогда
				// подставим договор по умолчанию                                 
				Если ПустоеЗначение(Контрагент.ОсновнойДоговорТорг) = 0 Тогда
					Если Фирма = Контрагент.ОсновнойДоговорТорг.Фирма Тогда
						Договор = Контрагент.ОсновнойДоговорТорг;
					КонецЕсли;	
				КонецЕсли;	
			КонецЕсли;
			спрКонтрПрава.ПроверитьСтопПечать(Контекст);
		КонецЕсли;
	Иначе
		//Не выбран Контрагент - не имеет смысла показывать глубину и дату оплаты и договор
		Договор = ПолучитьПустоеЗначение("Документ.Договор");
	КонецЕсли;                           
	СтарыйКонтрагент = Контрагент;
	//	УстДоступность();
	ОбновитьНадписи();
	УстГлубина();
	УстДоступностьГлубина();  
	Если ВидОперации = 0 Тогда
		КатегорияЦен = Контрагент.КатегорияЦенПоставщика;
	Иначе
		КатегорияЦен = Контрагент.КатегорияЦен;
	КонецЕсли;
	
	Дата_Курса = ДатаДок;
	Если Валюта <> Контрагент.ВалютаВзаиморасчетов Тогда
		Валюта = Контрагент.ВалютаВзаиморасчетов;
		Курс=глКурсДляВалюты(Валюта,Дата_Курса);
		ВыборОплаты();
	КонецЕсли;
	//+ralex, 09-12-20 22:47
	Если ПустоеЗначение(Контрагент.Склад) = 0 Тогда
		Склад = Контрагент.Склад;
	КонецЕсли;
	//+/ralex, 09-12-20 22:47
	// Формирует и показывает дату оплаты
	УстДоступностьКнСМС(); //+ralex, 31-07-21 01:07
КонецПроцедуры	

// ===============================
Процедура Подбор()
	Варианы= СоздатьОбъект("СписокЗначений");
	Варианы.ДобавитьЗначение("по каталогу");
	Варианы.ДобавитьЗначение("по прайсу");
	Результат = 0;
	Если Варианы.ВыбратьЗначение(,,Результат,,1)=1 Тогда
		Если Результат = 1 Тогда
			глПодбор(Контекст,"номенклатура","ДляПодбора")
		ИначеЕсли Результат = 2 Тогда
			глПодбор(Контекст,"прайс_лист","ДляПодбора")
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//*****************************************************************************
Процедура ВыборОснования()
	// Процедура по кнопке редактирования основания в докумнете
	Перем КонтекстДокумента;
	СтарОснование = ДокументОснование;
	СтарДоговор = Договор;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", КонтекстДокумента);
	Если ((ДокументОснование <> СтарОснование) и (ПустоеЗначение(ДокументОснование) = 0)) тогда
		ПриВводеНаОсновании(ДокументОснование);	
	ИначеЕсли Договор<>СтарДоговор тогда
		ПриВводеНаОсновании(Договор);			
	КонецЕсли;	
	ИзмДоговор();
	глУстДостСумм(Контекст);
	ОбновитьНадписи();
КонецПроцедуры	

//*****************************************************************************
// Предопределенные процедуры

//******************************************************************************
Процедура ВводНового(Скопирован) //Предопределенная процедура
	распечатан=0;
	ШтрКод = "";
	глЗаполнитьШапку(Контекст);
	
	флПровСклад = 1;
	Если Скопирован=1 Тогда	//копирование документа
		//+ralex, 31-07-21 01:21
		Если спрКонтрПрава.ПроверитьРазрешение(Контрагент) = 0 Тогда
			Предупреждение("Вам запрещено создавать документы для этого контрагента",10);
			СтатусВозврата(0); Возврат;
		КонецЕсли;
		//+/------------------------
		
		Комментарий = "";
		ПричинаВозвратаПок = "";
		квоОшибок = 0;
		комментОшибки = "";
		КомментарийАдм = "";
		подтвержденСМС = 0;
		смсСуммаОтправлено = 0;
		СтарыйКонтрагент = Контрагент;
		комментарийСклад = "";
		ЧекРаспечатан = 0;
		Для сч = 1 по 8 Цикл
			УстановитьАтрибут("Грузчик" + сч,"");
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ДатаДок=РабочаяДата();
	
	Если Форма.Параметр="Возврат" Тогда                          
		ВидОперации = 1;
		
		Если ПустоеЗначение(Контрагент) = 1 Тогда
			Контрагент=Константа.ОсновнойПокупатель;
			Валюта=Константа.ОсновнаяВалютаПродажи;
		КонецЕсли;
		
		
		Если ПустоеЗначение(Контрагент) = 0 Тогда
			КатегорияЦен = Контрагент.КатегорияЦен;
			Валюта=Константа.ОсновнаяВалютаЗакупки;
		КонецЕсли;
	Иначе
		ВидОперации = 0;
		Если ПустоеЗначение(Контрагент) = 1 Тогда
			Контрагент=Константа.ОсновнойПоставщик;
			Валюта=Константа.ОсновнаяВалютаЗакупки;
		КонецЕсли;
		
		
		Если ПустоеЗначение(Контрагент) = 0 Тогда
			КатегорияЦен = Контрагент.КатегорияЦенПоставщика;
			Валюта = Контрагент.ВалютаВзаиморасчетов;
		КонецЕсли;
	КонецЕсли;   
	//+ralex, 2018-04-29 21:50:38
	Если спрКонтрПрава.ПроверитьРазрешение(Контрагент) = 0 Тогда
		Предупреждение("Вам запрещено создавать документы для этого контрагента",10);
		СтатусВозврата(0); Возврат;
	КонецЕсли;
	//+/ralex, 2018-04-29 21:50:38
	СтарыйКонтрагент = Контрагент;
	ИзмКонтрагент();
	
	Дата_Курса = ДатаДок;
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта = Гривня;
	КонецЕсли;
	Курс=глКурсДляВалюты(Валюта,Дата_Курса);
	
	Если ПустоеЗначение(КатегорияЦен) = 1 Тогда
		КатегорияЦен = Автор.КатегорияЦен;
	КонецЕсли;      
	
	ВидТорговли = Перечисление.ВидыТорговли.Предоплата;
	ВыбранВидТорговли();
	
	Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
		Касса = глНайтиКассу(Фирма,Валюта);
	КонецЕсли;	
	
	УстГлубина();
	УстДоступностьГлубина();
	
	ИзмДоговор();
	попытка
		СпрКатЦен=создатьобъект("Справочник.КатегорииЦен");
		СпрКатЦен.НайтиПоНаименованию("склад");
		КатегорияЦен = СпрКатЦен.ТекущийЭлемент();   
	исключение
	конецпопытки;	
	Комментарий = "";
КонецПроцедуры

//******************************************************************************
Процедура ВводНаОсновании(ДокОснование)
	Перем ВидОсн;
	распечатан=0;
	флПровСклад = 1;
	ВидОсн = ДокОснование.Вид();
	Если ВидОсн = "РасходнаяНакладная"  Тогда
		Если ДокОснование.ВидОперации = 1 Тогда
			СтатусВозврата(0);
			Предупреждение("Приходную накладную нельзя выписывать"+РазделительСтрок+
			"на основании возвратной расходной накладной !");
			Возврат;
		КонецЕсли;
		ВидОперации=1;
	ИначеЕсли ВидОсн = "РасходнаяРозничная" Тогда
		ВидОперации=1;
	Иначе
		ВидОперации=0;
	КонецЕсли;
	
	Если ВидОсн = "ЗаказПоставщику" Тогда
		ОжидаемыеПоступления = 1;
	КонецЕсли;
	Автор = глПользователь;
	ДатаДок=РабочаяДата();
	
	ПриВводеНаОсновании(ДокОснование);
	//+ralex, 2018-04-29 21:50:38
	Если спрКонтрПрава.ПроверитьРазрешение(Контрагент) = 0 Тогда
		Контрагент = СтарыйКонтрагент;
		Предупреждение("Вам запрещено создавать документы для этого контрагента",10);
		СтатусВозврата(0); Возврат;
	КонецЕсли;
	//+/ralex, 2018-04-29 21:50:38
	
	// проверяем сколько уже возвращено 	
	РегВозвратыПартий = СоздатьОбъект("Регистр.ВозвратыПартий");
	Если ВидОперации = 1 тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 цикл
			КвоВозвр = Регистр.ВозвратыПартий.СводныйОстаток(,,Товар,,,,,ДокументОснование,"ОстатокТовара"); 
			Количество = Количество + КвоВозвр; 
		КонецЦикла;	
	КонецЕсли;	     
	
	// проверяем сколько уже возвращено	по рег "партии поставщика"
	//РегВозвратыПартийПост = СоздатьОбъект("Регистр.ВозвратыПартийПоставщика");
	Если ВидОперации = 1 тогда  //при возврате используем только "ПартияПост1"
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 цикл
			КвоВозвр = Регистр.ВозвратыПартийПоставщика.СводныйОстаток(Товар,,ДокументОснование,ПартияПост1,,,,"ОстатокТовара"); 
			квоПартияПост1 = квоПартияПост1 + КвоВозвр; 
		КонецЦикла;	
	КонецЕсли;	     
	
	Если ПустоеЗначение(КатегорияЦен)=1 Тогда
		Если ПустоеЗначение(Контрагент)=0 Тогда
			КатегорияЦен = Контрагент.КатегорияЦен;    
		КонецЕсли;	    
	КонецЕсли;          
	
	Если ПустоеЗначение(КатегорияЦен)=1 Тогда
		КатегорияЦен = Автор.КатегорияЦен;
	КонецЕсли;
	Комментарий = "";
	СтарыйКонтрагент = Контрагент;
	спрКонтрПрава.ПроверитьСтопПечать(Контекст);
КонецПроцедуры

//======================================================================
Процедура ПриВыбореПричиныВозврата()
	Причина = спсПричины.ПолучитьЗначение(спсПричины.ТекущаяСтрока(),);
	//Если ТипЗначенияСтр(Причина) <> "Строка" Тогда
	ПричинаВозвратаПок = Причина;
	//КонецЕсли;
	текВидимость = 0;
	Если (ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.ошибкаСклада) или 
	(ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.бракНаш)  Тогда
		текВидимость = 1;
	КонецЕсли;
	Форма.Виновный.видимость(текВидимость);
	Форма.тВиновный.видимость(текВидимость);
	
	дос = 1;
	Если (Причина = Перечисление.ПричиныВозвратаПокупателем.ошибкаСклада) или 
	(Причина = Перечисление.ПричиныВозвратаПокупателем.бракНаш) Тогда
		дос = 0;
	КонецЕсли;
	
	Форма.Виновный.Доступность(ПравоПользователяПричинаВозврата - дос);
	Если (ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.ошибка) или 
	(ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.ошибкаМенеджера) Тогда
		Если квоОшибок = 0 Тогда
			квоОшибок = 1;
		КонецЕсли;
		Форма.тКвоОшибок.видимость(1);
		Форма.КвоОшибок.видимость(1);
		Форма.тКомментОшибки.видимость(1);
		Форма.КомментОшибки.видимость(1);
	ИначеЕсли (ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.ошибкаСклада) Тогда	
		Форма.тКвоОшибок.видимость(0);
		Форма.КвоОшибок.видимость(0);
		Форма.тКомментОшибки.видимость(1);
		Форма.КомментОшибки.видимость(1);
	Иначе
		Форма.тКвоОшибок.видимость(0);
		Форма.КвоОшибок.видимость(0);
		Форма.тКомментОшибки.видимость(0);
		Форма.КомментОшибки.видимость(0);
	КонецЕсли;
КонецПроцедуры // ПриВыбореПричиныВозврата

Процедура ПриВыбореЗакладки(Ном,Зн)
	Форма.Закладки.ТекущаяСтрока(Ном);
	Форма.ИспользоватьСлой("Общий,"+Зн,2);
	Если ЗН = "Основной" Тогда
		Форма.спсПричины.Доступность(ПравоПользователяПричинаВозврата);
		ПриВыбореПричиныВозврата();
		Если ВидОперации <> 1 Тогда
			Форма.тПричинаВозврата.Заголовок("ошибка менеджера:");
		КонецЕсли;
	КонецЕсли;
	Если НазваниеНабораПрав() = "МенеджерСклад" Тогда
		Если Зн = "Дополнительный" Тогда
			Форма.ТолькоПросмотр(0);
			Форма.кнПодбор.Доступность(0);
			//Форма.Распечатан.Доступность(0);
		Иначе
			Форма.ТолькоПросмотр(ЗначениеТолькоПросмотрПриОткрытии);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ПриВыбореЗакладки

//======================================================================
Процедура УстановитьДоступыСклад()
	
КонецПроцедуры // УстановитьДоступыСклад

//======================================================================
Процедура УстВидимостьПартийПост()
	текВидимость = 0;
	//Если ОжидаемыеПоступления = 0 Тогда
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если дополненияТорговля.ПолучитьПараметрГруппыСправочника(Товар,"разрешеныПартииПост") = 1 Тогда
			текВидимость = 1;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	//КонецЕсли;
	
	Форма.ПартияПост1.Видимость(текВидимость);
	форма.квоПартияПост1.Видимость(текВидимость);
	//*ralex, 26-06-23 21:47
	//Если ((ВидОперации = 1)  и (ПустоеЗначение(ДокументОснование) = 0)) или (ОжидаемыеПоступления = 1) Тогда //возврат, используем только партию1, если есть док. основание
	//	текДоступность = 0;
	//	текВидимость = 0;
	//Иначе
	//	текДоступность = 1;
	//	текВидимость = 1;
	//КонецЕсли;
	// -------- заменено на:
	Если ((ВидОперации = 1)  и (ПустоеЗначение(ДокументОснование) = 0)) Тогда //возврат, используем только партию1, если есть док. основание
		текДоступность = 0;
		текВидимость = 0;
	Иначе
		текДоступность = текВидимость;
		//текВидимость = 1;
	КонецЕсли;
	//*/------------------------
	Форма.ПартияПост2.Доступность(текДоступность);
	форма.квоПартияПост2.Доступность(текДоступность);
	Форма.ПартияПост3.Доступность(текДоступность);
	форма.квоПартияПост3.Доступность(текДоступность);
	Форма.ПартияПост4.Доступность(текДоступность);
	форма.квоПартияПост4.Доступность(текДоступность);
	Форма.ПартияПост5.Доступность(текДоступность);
	форма.квоПартияПост5.Доступность(текДоступность);
	Форма.ПартияПост6.Доступность(текДоступность);
	форма.квоПартияПост6.Доступность(текДоступность);
	
	Форма.ПартияПост2.Видимость(текВидимость);
	форма.квоПартияПост2.Видимость(текВидимость);
	Форма.ПартияПост3.Видимость(текВидимость);
	форма.квоПартияПост3.Видимость(текВидимость);
	Форма.ПартияПост4.Видимость(текВидимость);
	форма.квоПартияПост4.Видимость(текВидимость);
	Форма.ПартияПост5.Видимость(текВидимость);
	форма.квоПартияПост5.Видимость(текВидимость);
	Форма.ПартияПост6.Видимость(текВидимость);
	форма.квоПартияПост6.Видимость(текВидимость);
КонецПроцедуры // УстВидимостьПартийПост

Процедура ЗакрытьДокумент()
	Форма.Закрыть(0);
КонецПроцедуры // ЗакрытьДокумент

//======================================================================
Процедура послеОткрытия()
	Если этоКладовщикШК = 1 Тогда
		расшФормы = СоздатьОбъект("РасширениеФормы");
		расшФормы.ОбработкаОжидания("ЗакрытьДокумент",180000); //1 сек = 1000 миллисекунд 
	Иначе
		ПриВыбореЗакладки(1,"Основной");
		УстДоступностьКнСМС();
		спрКонтрПрава.ПроверитьСтопПечать(Контекст,0);
	КонецЕсли;
КонецПроцедуры // послеОткрітия

//*****************************************************************************
Процедура ПриОткрытии() //Предопределенная процедура
	//Если Константа.Отладка = Нет Тогда
	//	Форма.кнШКСотрудник.Видимость(0);
	//КонецЕсли;
	АвторКратко = Врег(Лев(Автор,2));
	стЗнОжидаемыеПоступления  = ОжидаемыеПоступления;
	ЗаполнитьСпсПричиныВозврата(); //+ralex, 21-07-20 22:17
	текРаспечатан = дополненияТорговля.ПолучитьСостояниеДокумента(Контекст,"распечатан"); //+ralex, 19-12-21 23:02
	//УстановитьНадписьРаспечатанОтгружен();
	
	НачальнаяДатаДокумента = ДатаДок;
	глПроверкаРазрешенияРедактирования(Контекст);
	глУстановкаРеквизитаТип(Контекст);
	
	УстВидимостьПартийПост();
	Если (ВидОперации = 1)  и (ПустоеЗначение(ДокументОснование) = 0) Тогда //возврат, используем только партию1, если есть док. основание
		текВидимость2 = 0;
	КонецЕсли;
	Форма.ПартияПост2.Видимость(текВидимость2);
	форма.квоПартияПост2.Видимость(текВидимость2);
	Форма.ПартияПост3.Видимость(текВидимость2);
	форма.квоПартияПост3.Видимость(текВидимость2);
	
	Если (НазваниеНабораПрав()="Продавець") ИЛИ (Найти( Нрег(НазваниеНабораПрав()),"менеджер") <> 0) Тогда
		//Если (названиенабораправ()="Продавець") ИЛИ (Найти(Нрег(НазваниеНабораПрав()),"менеджер") <> 0) ИЛИ(названиенабораправ()="Менеджер") ИЛИ (названиенабораправ()="МенеджерТоварищ") ИЛИ (названиенабораправ()="МенеджерПН") Тогда
		//+ralex, 06-02-19 20:37
		//форма.ЦеныПрибыль.видимость(0);
		форма.СуммаПрибыль.видимость(0);
		форма.кнПрибыль.видимость(0);
		//+/ralex, 06-02-19 20:37
		
		форма.КомментарийАдм.видимость(0);
		форма.КомментарийАдм.доступность(0);
		форма.КПР.видимость(0);
		Если текРаспечатан <> 0 Тогда
			форма.кнподбор.доступность(0);			
		КонецЕсли;								
		ЕСли ((проведен()=1) ИЛИ (ПометкаУдаления()=1)) и (ОжидаемыеПоступления = 0) тогда		
			форма.толькопросмотр(1);
			Форма.кнВалюта.Доступность(0);
		КонецЕсли;		
		Форма.ОжидаемыеПоступления.Доступность(0);
		Форма.КатегорияЦен.Доступность(0);
		Если Проведен() = 0 Тогда
			Форма.ОжидаемыеПоступления.Доступность(1);
		КонецЕсли;	
	ИначеЕсли этоКладовщикШК = 1  Тогда
		Форма.кнДействия.Доступность(0);
		Форма.кнПечать.Доступность(0);
		Форма.кнКонтроль.Доступность(0);
		Форма.кнДействия.Видимость(0);
		Форма.кнПечать.Видимость(0);
		Форма.кнКонтроль.Видимость(0);
	Иначе
		Если ВидОперации = 0 Тогда //это приходная
			форма.СуммаПрибыль.видимость(0);
			форма.кнПрибыль.видимость(0);
		КонецЕсли;	
	КонецЕсли;
	ЗначениеТолькоПросмотрПриОткрытии = Форма.ТолькоПросмотр(); //+ralex, 02-07-20 23:12
	
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		СписокДействий = глПолучитьСписокДействий("
		|СтруктураПодчиненности,
		|ДвиженияДокумента,
		|ОткрытьВЖурнале,
		|Подчиненные");
		
	Иначе
		Форма.КнопкаПоУмолчанию("кнОК");
	КонецЕсли;
	
	глУстВидимостьЦен(Контекст);
	глУстДостСумм(Контекст);
	
	ОбновитьНадписи(); 
	СтараяДата = ДатаДок;
	стСумма = Итог("СуммаСНДС"); //+ralex, 30-07-21 22:54
	СтарыйКонтрагент = Контрагент; //+ralex, 31-07-21 01:26
	УстДоступностьГлубина();
	Если ПустоеЗначение(ВидТорговли)=1 Тогда
		ВидТорговли = Константа.ОсновнойВидТорговли;
		ВыбранВидТорговли();
	КонецЕсли;	
	
	тбОстатки = 0; тбОстаткиВсего = 0;
	Если (ВидОперации = 1) и (ПустоеЗначение(ДокументОснование) = 0) Тогда
		спТовары = СоздатьОбъект("СписокЗначений");
		ДокументОснование.ВыбратьСтроки();
		Пока ДокументОснование.ПолучитьСтроку() = 1 Цикл
			спТовары.ДобавитьЗначение(ДокументОснование.Товар);
		КонецЦикла;
		
		Регистры=СоздатьОбъект("Регистры");
		Рег=Регистры.ОстаткиТоваров;
		Рег.УстановитьЗначениеФильтра("Фирма",?(ТипУчета = Фин,Фирма,глПустаяФирма),1);
		
		Рег.УстановитьЗначениеФильтра("Товар",спТовары,2);
		//Рег.УстановитьЗначениеФильтра("Склад",Склад,1);
		Рег.УстановитьЗначениеФильтра("Сорт",КондиционныйТовар,1);
		Рег.ВременныйРасчет(1);
		Регистры.РассчитатьРегистрыНа(ДокументОснование);
		Рег.ВыгрузитьИтоги(тбОстаткиВсего,1,1);
		тбОстаткиВсего.Свернуть("Товар","ОстатокТовара");
		Рег.ВыгрузитьИтоги(тбОстатки,1,1);
		Рег = 0;
	КонецЕсли;
	
	Если ПустоеЗначение(причинаВозвратаПок) = 0 Тогда
		ПричинаВозврата = ПричинаВозвратаПок.ПорядковыйНомер();
		Если ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.ошибка Тогда
			ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.ошибкаМенеджера;
		КонецЕсли;
		Если ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.брак Тогда
			ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.бракНаш;
			Комментарий =  Комментарий + "причина ""брак"" заменена на ""брак наш""";
		КонецЕсли;
		Если ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.обмен Тогда
			ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.обменДоОтгрузки;
			Комментарий =  Комментарий + "причина ""обмен"" заменена на ""обмен до отгрузки""";
		КонецЕсли;
		поз = спсПричины.НайтиЗначение(ПричинаВозвратаПок);
		спсПричины.ТекущаяСтрока(поз);
	Иначе
		спсПричины.ТекущаяСтрока(1);
	КонецЕсли;
	
	Форма.ИспользоватьЗакладки(1);
	Если (НазваниеНабораПрав() = "МенеджерСклад") или (НазваниеНабораПрав() = "Администратор") Тогда
		Форма.Закладки.ДобавитьЗначение("Основной","Основное");
		Форма.Закладки.ДобавитьЗначение("Дополнительный","Дополнительно");
		Если НазваниеНабораПрав() = "Администратор" Тогда
			Форма.Закладки.ДобавитьЗначение("CRM","CRM");
		КонецЕсли;
		ПриВыбореЗакладки(1,"Основной");
		//Форма.ИспользоватьСлой("Общий,Основной");
	ИначеЕсли этоКладовщикШК = 1  Тогда
		Форма.Закладки.ДобавитьЗначение("Основной","Основное");
		Форма.Закладки.ДобавитьЗначение("Дополнительный","Дополнительно");
		ПриВыбореЗакладки(2,"Дополнительный");
		//Форма.ИспользоватьСлой("Общий,Дополнительный");
	Иначе
		Форма.Закладки.ДобавитьЗначение("Основной","Основное");
		Форма.ИспользоватьСлой("Общий,Основной");
	КонецЕсли;
	стКомментарийСклад = комментарийСклад;
	
КонецПроцедуры //При открытии

// ===============================
Процедура ВыборКассы()
	спКассы = глЗаполнитьСпКассы(Фирма,Валюта);
	спКассы.ВыбратьЗначение(Касса,,,,2);
КонецПроцедуры

//======================================================================
Функция ОткрытьПодборСкладскогоМеста()	
	выбМесто = "";
	//+ralex, 08-11-23 00:54
	использоватьСкладскиеМеста = дополненияТорговля.ПолучитьПараметрЛюбогоТипаГруппыСправочника(Товар,"флСкладскоеМесто",РабочаяДата());
	Если использоватьСкладскиеМеста <> 1 Тогда
		Возврат 0;
	КонецЕсли;
	//+/------------------------
	Если ВидОперации = 1 Тогда
		спсМест = дополненияТорговля.получитьСписокСкладскихМест(Товар,Склад,Единица,КондиционныйТовар,Контекст); //+ralex, 08-11-23 00:54
		Если спсМест.размерСписка() <> 0 Тогда
			Если спсМест.ВыбратьЗначение(выбМесто,,,15,1) = 1 Тогда
				складскоеМесто = выбМесто;
				Возврат 1;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	спсПарам = СоздатьОбъект("СписокЗначений");
	спсПарам.ДобавитьЗначение(Склад,"Склад");
	ОткрытьПодбор("Справочник.складскоеМесто",,спсПарам,0);
	//Если ввестиЗначение(складскоеМесто,,"Справочник.СкладскоеМесто") <> 1 Тогда
	//	Возврат 0;
	//КонецЕсли;
	Возврат 1;
КонецФункции // ОткрытьПодборПартииПоставщика

//*****************************************************************************
Процедура ПриНачалеВыбораЗначения(Рекв,Флаг)
	Флаг=0;
	Если (Рекв="Фирма") или (Рекв="Склад") Тогда
		стСклад = Склад;
		ВыборФирмы();
		Если стСклад <> Склад Тогда
			ИзмСклад();
		КонецЕсли;
	ИначеЕсли Рекв="КатегорияЦен" Тогда
		ВыборОплаты();
	ИначеЕсли Рекв="Касса" Тогда
		ВыборКассы();
	ИначеЕсли (Рекв = "ПартияПост1") или (Рекв = "ПартияПост2") или (Рекв = "ПартияПост3") или (Рекв = "ПартияПост4") 
	или (Рекв = "ПартияПост5") или (Рекв = "ПартияПост6") Тогда
		Если дополненияТорговля.ПолучитьПараметрГруппыСправочника(Товар,"разрешеныПартииПост") = 0 Тогда
			Флаг = 0; Возврат;
		КонецЕсли;
		конт = глВернутьКонтекст(Контекст);
		ОткрытьПодбор("ПартииТоваровПоставщика","ДляПодбора",конт);
		Флаг = 0;
	ИначеЕсли Рекв="Контрагент" Тогда
		Флаг = 1;
		СтарыйКонтрагент = Контрагент;
		
	ИначеЕсли Рекв="Товар" Тогда
		Флаг = 0;
		стТовар = Товар;
		ОткрытьФормуМодально("Справочник.Номенклатура.ДляВыбора",Контекст);
		Если Товар.Выбран() = 1 Тогда
			глПриИзмененииТовара(Контекст); 
			УстВидимостьПартийПост(); 
			ПроверитьСкладТовара();
		КонецЕсли;
	ИначеЕсли Найти(рекв,"складскоеМесто") <> 0 Тогда
		ОткрытьПодборСкладскогоМеста();
	Иначе
		Флаг=1;
	КонецЕсли;
КонецПроцедуры

Процедура УстановитьПартиюПоставщика()
	Если ПустоеЗначение(ПартияПост1) = 1 Тогда
		спрПартии = СоздатьОбъект("Справочник.ПартииТоваровПоставщика");
		спрПартии.ИспользоватьВладельца(Товар);
		Если спрПартии.НайтиПоРеквизиту("ДатаПартии",ДатаДок,0) = 0 Тогда
			//создаем партию
			ПриЗаписиПерепроводить(0);	
			Записать();
			спрПартии.Новый();
			спрПартии.Наименование = Формат(ДатаДок,"ДДММГГ");
			спрПартии.Док = ТекущийДокумент();
			спрПартии.Примечание = "";
			спрПартии.датаПартии = ДатаДок;
			спрПартии.Записать();
		КонецЕсли;
		ПартияПост1 = спрПартии.ТекущийЭлемент();
	КонецЕсли;
	ПриЗаписиПерепроводить(1);	
КонецПроцедуры

//======================================================================
Процедура СформироватьПартии()
	Если Выбран() = 0 Тогда
		Предупреждение("Документ должен быть записан.");
		Возврат;
	КонецЕсли;
	
	Если Вопрос("Будут сформированы партии для дверей с датой прихода" + РазделительСтрок + ДатаДок,4) <> 6  Тогда
		Возврат;
	КонецЕсли;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если дополненияТорговля.ПолучитьПараметрГруппыСправочника(Товар,"флЭтоГруппаДвери") = 0 Тогда
			Продолжить;
		КонецЕсли;
		УстановитьПартиюПоставщика();
		Если квоПартияПост1 = 0 Тогда
			квоПартияПост1 = Количество;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры // СформироватьПартии()

//*****************************************************************************
Процедура ОбработкаПодбора(Выб) //Предопределенная процедура
	//+ralex, 03-01-24 21:14
	Если ТипЗначения(Выб) = 11 Тогда
		Если Выб.Вид() = "СкладскоеМесто" Тогда
			складскоеМесто = Выб;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	//+/------------------------
	квоСтрок = КоличествоСтрок();
	глПриОбработкеПодбора(Выб,Контекст);
	
	
	новКвоСтр = КоличествоСтрок();
	флИзмСклад = 0;
	Для сч = квоСтрок + 1 по новКвоСтр Цикл
		проверитьСкладТовара(Товар);
	КонецЦикла;
	
	Если (дополненияТорговля.ПолучитьПараметрГруппыСправочника(Товар,"разрешеныПартииПост") = 1) 
	и (дополненияТорговля.ПолучитьПараметрГруппыСправочника(Товар,"флЭтоГруппаДвери") = 1) и (ВидОперации = 0) 
	и (ОжидаемыеПоступления = 0) Тогда
		УстановитьПартиюПоставщика();
	КонецЕсли;
КонецПроцедуры //Обработка подбора

Процедура Пересчитать()
	Пересчитан=1;
	выбратьстроки();
	пока получитьстроку()=1 цикл
		стЦена = ЦенаСНДС;
		ЦенаТовара = 0; валютаЦеныТовара = 0;
		ДатаЦены = Дата_Курса;
		глПолучитьЦенуТовара(категорияцен,Товар,Единица,ДатаЦены,ЦенаТовара,валютаЦеныТовара);
		Если ЦенаТовара = 0 тогда
			сообщить("Не указана "+сокрлп(категорияцен)+" цена!!! "+товар);
		Иначе	
			ЦенаЦены = глПересчет(ЦенаТовара,
			валютаЦеныТовара,
			Дата_Курса,
			Валюта,
			Курс);
			
			ЦенаСНДС=ЦенаЦены;
			глВыч_суммы_накл(Контекст);
			Если ЦенаСНДС <> стЦена Тогда
				
			КонецЕсли;
		КонецЕсли;	
	конеццикла;	
КонецПроцедуры	  

//+ralex, 06-02-19 20:44
Функция ИтогоПрибыль()
	Если (названиенабораправ()="Менеджер") ИЛИ (названиенабораправ()="МенеджерТоварищ") Тогда
		возврат "";
	Иначе	
		Возврат итог("СуммаПрибыль"); 
	КонецЕсли;
КонецФункции 
//+/ralex, 06-02-19 20:44

//======================================================================
//+ralex, 16-07-19 23:28
функция ПроверитьКоличество()
	Если Итог("квоШК") = 0 Тогда //полагаем что со сканера данные вообще не вводили. отменяем проверку.
		//Сообщить("Нет данных о сканировании");
		Возврат 0;
	КонецЕсли;
	результат = 1;	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Количество <> КвоШК Тогда
			текстСообщения = "Количество указанное в документе в строке " + НомерСтроки + " не соответствует количеству в колонке ШК";
			Предупреждение(текстСообщения,5);
			Сообщить(текстСообщения);
			результат = 0;
		КонецЕсли;
	КонецЦикла;
	Сообщить("Выполнено.");
	Возврат результат;
КонецФункции // ПроверитьКоличество
//+/ralex, 16-07-19 23:28

//======================================================================
Процедура откорректироватьКоличество()
	Если Итог("квоШК") = 0 Тогда //полагаем что со сканера данные вообще не вводили. отменяем проверку.
		//Сообщить("Нет данных о сканировании");
		Возврат ;
	КонецЕсли;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Количество <> КвоШК Тогда
			Количество = КвоШК;
			текстСообщения = "Откорректировано количество в строке " + НомерСтроки;
			Сообщить(текстСообщения);
		КонецЕсли;
	КонецЦикла;
	Сообщить("Выполнено.");
КонецПроцедуры // откорректироватьКоличество

//======================================================================
Процедура МенюКонтроль()
	Меню = СоздатьОбъект("СписокЗначений");
	Меню.ДобавитьЗначение(1,"Контроль");
	Меню.ДобавитьЗначение(2,"корректировка");
	выбЗн = 0;
	Если Меню.ВыбратьЗначение(выбЗн,,,10,1) <> 1 Тогда
		Возврат;
	КонецЕсли;
	Если выбЗн = 1 Тогда
		ПроверитьКоличество();
	ИначеЕсли выбЗн = 2 Тогда
		откорректироватьКоличество();
	КонецЕсли;
КонецПроцедуры // МенюКонтроль

//*****************************************************************************
Процедура ПриЗаписи() //Предопределенная процедура
	Если глМожноЗаписатьДокумент(Контекст)=0 Тогда
		СтатусВозврата(0);                        
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	ПроверитьКоличество();
	Если ВидОперации <> 0 Тогда //возвратная
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			ЦенаПрибыль = 0; СуммаПрибыльВР = 0; //переменные не используются, но нужны для совместимости
			РассчитатьПрибыль(Контекст,1,ЦенаПрибыль,СуммаПрибыльВР);
		КонецЦикла;
	КонецЕсли;
	ГруппаПользователей = Автор.Родитель;
	
	ПричинаВозвратаПок = спсПричины.ПолучитьЗначение(спсПричины.ТекущаяСтрока());
	Если НЕ((ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.ошибка) или
	(ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.ошибкаМенеджера)) Тогда
		квоОшибок = 0;
	КонецЕсли;
	
	//для особо одаренных проверим и предупредим.
	Если (ВидОперации = 0) и (ОжидаемыеПоступления = 0) Тогда
		Если ПустоеЗначение(Склад) = 0 Тогда
			Если Склад.флСкладЗаказной = 1 Тогда
				Если ДокументОснование.Вид() <> "ЗаказПоставщику" Тогда
					Сообщить("Приход на склад заказного товара вводится только на основании документа ""Заказ поставщику"".");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ШтрКод = СформироватьШтрихКодДокумента(Контекст,ТекущийДокумент());
	флПровСклад = ?(ПустаяСтрока(комментарийСклад) = 1,1,2);
	
	Если стКомментарийСклад <> КомментарийСклад Тогда
		комментарийСклад = комментарийСклад + " (" + глПользователь + ")";
	КонецЕсли;
	
	Если ПустаяСтрока(id_задачиВ_CRM) = 1 Тогда
		СтатусЗадачиВCRM = 0;
	ИначеЕсли ЗадачаВCRMВыполнена = 0 Тогда
		СтатусЗадачиВCRM = 1;
	ИначеЕсли ЗадачаВCRMВыполнена = 1 Тогда
		СтатусЗадачиВCRM = 2;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ПриЗакрытии()
КонецПроцедуры	

//*** ШК ***
Процедура ЗагрузитьСоСканера(Данные)
	// Определение типа штрих-кода
	Лев2 = Лев(Данные,2);
	Если Лев2 = "50" Тогда//сотрудник
		//Если ОжидаемыеПоступления = 1 Тогда
		//	Возврат;
		//КонецЕсли;
		
		текОтгружен = дополненияТорговля.ПолучитьСостояниеДокумента(Контекст,"отгружен");
		Если текОтгружен = 1 Тогда
			Предупреждение("по документу уже было получение товара.");
			Возврат;
		КонецЕсли;
		спрСотр = СоздатьОбъект("Справочник.Сотрудники");
		Если спрСотр.НайтиПоРеквизиту("ШтрихКод",Данные,1) = 0 Тогда
			Сообщить("Сотрудник с ШК " + Данные + " не найден.");
			Форма.Закрыть(0);
			Возврат;
		КонецЕсли;
		
		текСотр = спрСотр.ТекущийЭлемент();
		//ищем пользователя
		объектПользователь = дополненияТорговля.ПолучитьПользователяПоСотруднику(текСотр);
		Если ПустоеЗначение(объектПользователь) = 1 Тогда
			Сообщить("Не найден пользователь для сотрудника " + текСотр);
			Возврат;
		КонецЕсли;
		
		Если объектПользователь.флКладовщик = 1 Тогда
			Если текОтгружен = 1 Тогда
				текДатаОтгрузки = дополненияТорговля.ПолучитьСостояниеДокумента(Контекст,"датаОтгрузки");
				Предупреждение("По документу " + номерДок + " уже было получение " + текДатаОтгрузки + " !!!");
				Возврат;
			Иначе
				структураПарам = СоздатьОбъект("Структура");		
				структураПарам.Вставить("пользователь",объектПользователь);
				структураПарам.Вставить("сканер",1);
				Если Провести(,структураПарам) = 1 Тогда
					Форма.Закрыть(0);
				Иначе
					Предупреждение("ПРИЗНАК ПОЛУЧЕНИЯ НЕ УСТАНОВЛЕН. ПОВТОРИТЕ ПОПЫТКУ.");
					Возврат;
				КонецЕсли;
			КонецЕсли;
			Возврат;
		КонецЕсли;
		
		Для сч = 1 по 8 Цикл
			текЗн = ПолучитьАтрибут("грузчик" + сч);
			Если ПустоеЗначение(текЗн) = 1 Тогда
				УстановитьАтрибут("грузчик" + сч,текСотр);
				Записать();
				Форма.Закрыть(0);
				Возврат;
			ИначеЕсли текЗн = текСотр Тогда
				Сообщить("Сотрудник " + текСотр + " уже указан.");
				Форма.Закрыть(0);
				Возврат;
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли Данные = Строка(ШтрКод) Тогда	//этот документ. показываем Основную закладку
		Если Форма.Закладки.ПолучитьЗначение(Форма.Закладки.ТекущаяСтрока(),) <> "Дополнительный" Тогда  //для кладовщиков работа со сканера
			Значение = "Дополнительный";
		Иначе
			Значение = "Основной";
		КонецЕсли;
		поз = Форма.Закладки.найтиЗначение(Значение);
		Форма.Закладки.ТекущаяСтрока(поз);
		ПриВыбореЗакладки(поз,Значение);
		Возврат;
		
	Иначе
		Если ШтрихКодИмеетПрефикс=1 Тогда
			Если Найти("MPJS",Лев(Данные,1))<>0 Тогда
				// Штрих-код определяет товар
				Данные=Сред(Данные,2,СтрДлина(Данные)-1);
			Иначе
				Сообщить("Формат считанного штрих-кода не предназначен для товаров");
			КонецЕсли;
		КонецЕсли;
		
		Тов=СоздатьОбъект("Справочник.Номенклатура");
		Упак=СоздатьОбъект("Справочник.Единицы");
		
		нашлиШК = 0;
		
		// Используется основной штрих-код товара
		// или свой внутренний штрих-код товара с префиксом "20,21"
		Если Упак.НайтиПоРеквизиту("ШтрихКод",Данные,1) <> 0 Тогда
			нашлиШК = 1;
			Упаковка=Упак.ТекущийЭлемент();
			Тов=Упаковка.Владелец;
			Сообщить("" + Данные + " " + Тов.Код + " " + Тов.Наименование);
		КонецЕсли;
		
		Если нашлиШК = 0 Тогда
			//Лев2 = Лев(Данные,2);
			//Если Лев2 = "22" Тогда
			//	//вероятно Используется свой внутренний штрих-код товара
			//	//хотя уже нарвались что поставщик на свой товар поставил такие коды :(
			//	// Штрих-код построен по коду товара и весу
			//	Если Тов.НайтиПоКоду(Сред(Данные,3,5))=0 Тогда
			//		Сообщить("Товар с кодом "+Сред(Данные,3,5)+" не найден");
			//		Возврат;
			//	Иначе
			//		Упаковка = Тов.ЕдиницаПоУмолчанию;
			//		Сообщить("" + Данные + " " + Тов.Код + " " + Тов.Наименование);
			//	КонецЕсли;
			//Иначе
			Сообщить("Товар со штрих кодом "+Данные+" не найден");
			Возврат;
			//КонецЕсли;
		КонецЕсли;
		
		тзТЧ = СоздатьОбъект("ТаблицаЗначений");
		ВыгрузитьТабличнуюЧасть(тзТЧ);
		
		стр = 0;
		Если тзТЧ.НайтиЗначение(Тов,стр,"Товар") = 1 Тогда
			тзТЧ.ПолучитьСтрокуПоНомеру(стр);
			//проверяем единицу измерения
			Если тзТЧ.Единица = Упаковка Тогда
				тзТЧ.КвоШК = тзТЧ.КвоШК + 1;
			Иначе
				//пересчет
				врКво =  1/тзТЧ.Единица.Коэффициент * Упаковка.Коэффициент;
				тзТЧ.КвоШК = тзТЧ.КвоШК + врКво;
			КонецЕсли;
		Иначе
			//не нашли
			Сообщить("товар " + Тов.Код + " " + Тов +" не найден в документе!","!!!");
		КонецЕсли;
		ЗагрузитьТабличнуюЧасть(тзТЧ);
		Если стр <> 0 Тогда
			АктивизироватьСтроку(стр);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаВнешнегоСобытия(Источник,Событие,Данные)	// Предопределенная процедура
	//Сообщить(Данные);
	Если РаботаСоСканеромШтрихКода<>2 Тогда
		Возврат;
	КонецЕсли;
	Если Событие="BarCodeValue"	Тогда
		
		Если Scaner <> 0 Тогда
			Если Scaner.OldVersion<>0 Тогда
				//Работа драйвера совместима с предыдущей версиией
				// Источник="BarCodeScaner" (для других устройств свои названия)
				//Событие="BarCodeValue", Данные=ПолученныеДанные
				//Сообщить("Old Version <> 0");
				//Сообщить("Источник: "+Строка( Источник ));
				//Сообщить("Событие: "+Строка( Событие ));
				//Сообщить(Строка("Данные от устройства: "+ Данные));
			Иначе
				//Работа драйвера не совместима с предыдущей версиией
				// Источник="BarCodeScaner" (для других устройств свои названия)
				////Событие="BarCodeValue", Данные=НомерСобытия
				//Сообщить("Old Version = 0");
				Scaner.EventNumber=Число(Данные);
				//Сообщить("Данные от устройства: "+Scaner.ScanData);
				//Сообщить("Порт: "+Scaner.PortDescription);
				//Сообщить("Модель: "+Scaner.DeviceDescription);
				//Сообщить("Лог. устройство: " + Строка(Scaner.CurrentDeviceNumber) + " | " + Scaner.CurrentDeviceName);
				Scaner.DeleteEvent();
			КонецЕсли;
			Scaner.DataEventEnabled = 1;
			//Сообщить("Количество сообщений "+Строка(Scaner.DataCount));
			Если константа.Отладка <> Да Тогда
				Данные = Scaner.Данные; //отключить для отладки эмулятором
			КонецЕсли;
		ИначеЕсли СканерШтрихКода <> 0 Тогда
			СканерШтрихКода.ПосылкаДанных = 1;
		КонецЕсли;
		
		ЗагрузитьСоСканера(Данные);
	КонецЕсли;
КонецПроцедуры

//Для отладки
////======================================================================
//Процедура ГенерироватьСобытие()
//	Источник = "";
//	спсВрем = СоздатьОбъект("СписокЗначений");
//	спсВрем.ИзСтрокиСРазделителями("4823065814308");
//	//спсВрем.ИзСтрокиСРазделителями("4823065814308, 4823065814315, 4823065813882, 4823065813899, 4823065813905");
//	Для сч = 1 По спсВрем.РазмерСписка() Цикл
//		Сервис.ВнешнееСобытие(Источник,"BarCodeValue",спсВрем.ПолучитьЗначение(сч,));
//	КонецЦикла;
//КонецПроцедуры // ГенерироватьСобытие
//######################################################################################


//*** конец ШК ***

Функция Раскраска()
	стр = "";
	Если (Товар.Акция.Получить(ДатаДок) = 1) и (Товар.Распродажа.Получить(ДатаДок) = 1) Тогда
		стр = "(BRUSH[" + цветАкция +"])()(BRUSH[" + цветРаспродажа + "])(BRUSH[NONE])";
	ИначеЕсли Товар.Акция.Получить(ДатаДок) = 1 Тогда
		стр = "(BRUSH[" + цветАкция + "])()()(BRUSH[NONE])";
	ИначеЕсли Товар.Распродажа.Получить(ДатаДок) = 1 Тогда
		стр = "(BRUSH[" + цветРаспродажа + "])()()(BRUSH[NONE])";
	КонецЕсли;
	Возврат стр;
КонецФункции

//Функция ПоказатьДатуОтгрузки()
//	Если датаОтгрузки = Дата(0) Тогда
//		Возврат "товар не отгружен";
//	Иначе
//		Возврат "Отгружено  "+ ДатаОтгрузки + " в " + времяОтгрузки;
//	КонецЕсли;
//КонецФункции

этоКладовщикШК = ?(НазваниеНабораПрав() = "КладовщикШК",1,0);
Форма.Товар.ВыполнятьФормулуТолькоПриИзменении(1);

//*****************************************************************************
//Инициализирум список действий по кнопке "Действия"

ЗаполнитьСпВидТорговли();	                         
ВыбранВидТорговли();

спрКонтрПрава = СоздатьОбъект("КонтрагентыПрава");
измЦены = спрКонтрПрава.ПолучитьПравоПользователя(,"флГрупповоеИзмЦен");
ПравоПользователяПроводитьПНВозвр = спрКонтрПрава.ПолучитьПравоПользователя(,"флПроводитьПНВозвр"); 
ПравоПользователяПроводитьПН = спрКонтрПрава.ПолучитьПравоПользователя(,"флПроводитьПН"); 
ПравоПользователяПричинаВозврата = спрКонтрПрава.ПолучитьПравоПользователя(,"флПричинаВозврата"); 

дополненияТорговля = СоздатьОбъект("дополненияТорговля");	
измЦены = ?(Проведен() = 0,0,измЦены);
СписокДействий = глПолучитьСписокДействий("
|ТоварныйСостав," + ?(измЦены = 1,"ОбновлениеЦен,","") + "
|СтруктураПодчиненности,
|ДвиженияДокумента,
|ВводНаОсновании,
|ОткрытьВЖурнале,
|Подчиненные,
|ИзмКомментария");
