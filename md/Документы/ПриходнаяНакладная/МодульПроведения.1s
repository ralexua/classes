Перем спФирмы;
перем этоГрупповаяОбработка;
перем спрКонтрПрава;

// ===============================
Функция ПроверкаШапки()
	глВсеВыбрано = 1;
	глВыбранЛи(Фирма,"Фирма");  
	глВыбранЛи(Контрагент,"Контрагент");
	глВыбранЛи(ВидТорговли,"Вид торговли");
	глВыбранЛи(КатегорияЦен,"Категория цен");	
	глВыбранЛи(Склад,"Склад");		
	глВыбранЛи(Валюта,"Валюта");    
	Если ВидТорговли = Перечисление.ВидыТорговли.Нал тогда
		глВыбранЛи(Касса,"Касса");    
	КонецЕсли;	

	Если НЕ((НазваниеНабораПрав() = "Администратор") и (ДатаДок < '10.10.2022')) Тогда
		Если (ВидОперации = 0) и (ОжидаемыеПоступления = 0) Тогда
			Если ПустоеЗначение(Склад) = 0 Тогда
				Если Склад.флСкладЗаказной = 1 Тогда
					глВыбранЛи(ДокументОснование,"Документ - основание");
					Если глВсеВыбрано = 1 Тогда
						Если ДокументОснование.Вид() <> "ЗаказПоставщику" Тогда
							Сообщить("Приход на склад заказного товара вводится только на основании документа ""Заказ поставщику"".");
							глВсеВыбрано = 0;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат глВсеВыбрано;
КонецФункции
	
//======================================================================
Процедура ОтправитьСообщениеОтвМенеджеру(выбТов,тхтСообщения)
	КонтрагентыПрава = СоздатьОбъект("КонтрагентыПрава");
	Менеджер = КонтрагентыПрава.ПолучитьОтветственногоМенеджераГруппы(выбТов);
	глРазослатьСообщение(Менеджер,тхтСообщения);
КонецПроцедуры // ОтправитьСообщениеОтвМенеджеру
//======================================================================
Функция проверитьОтклонениеЦены()
	Если этоГрупповаяОбработка = 1 Тогда
		Возврат 1;
	КонецЕсли;
	Если (ВидОперации = 0) и (Константа.ПроцентОтклоненияЗакупочнойЦены <> 0) Тогда //приход
		//проверка цены товара
		ВалютаЦены = 0; Цена = 0;
		рез = глПолучитьЦенуТовара(КатегорияЦен,Товар,Единица,ДатаДок,Цена,ВалютаЦены);
		Если (рез <> 0) и (ВалютаЦены <> валюта) Тогда
			Цена = глПересчет(Цена,ВалютаЦены,ДатаДок,Валюта,Курс);
		КонецЕсли;
		Если (ЦенаСНДС > Цена) и (Цена <> 0) Тогда
			процент = (ЦенаСНДС/Цена * 100) - 100;
			Если Процент > Константа.ПроцентОтклоненияЗакупочнойЦены Тогда
				тхтСообщения = "Внимание : цена товара " + Товар.Код + " " + Товар + " в строке " + НомерСтроки + 
				" выше чем в справочнике 1с! СРОЧНО связаться с поставщиком, разобраться и если необходимо поменять цену!";
				Предупреждение(тхтСообщения);
				Сообщить(тхтСообщения);
				флПлохаяЦена = флПлохаяЦена + 1;
				ОтправитьСообщениеОтвМенеджеру(Товар,"Внимание : цена товара " + Товар.Код + " " + Товар  + " в док. "+ ТекущийДокумент() + " выше чем в справочнике 1с! СРОЧНО связаться с поставщиком, разобраться и если необходимо поменять цену!")
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	флПлохаяЦена = ?(флПлохаяЦена > 0,1,0);
КонецФункции // проверитьОтклонениеЦены

Функция ПолучитьСкладскоеМестоПоКоличеству(выбТовар,кво)
	выбМесто = ""; тзМест = 0;
	Сорт= Константа.КондиционныйТовар; 
	спсМест = дополненияТорговля.получитьСписокСкладскихМест(Товар,Склад,Единица,Сорт,ТекущийДокумент(),тзМест);
	Возврат тзМест.Итог("ОстатокТовара");
КонецФункции // ПолучитьСкладскоеМестоПоКоличеству

// ===============================
Функция ПроверкаСтроки()
    глВсеВыбрано = 1;
	глВыбранЛи(Товар,"Товар",НомерСтроки);
	глВыбранЛи(Единица,"Единица",НомерСтроки);
	//+ralex, 18-12-20 03:15
	Если ЭтоГрупповаяОбработка = 0 Тогда
		Если ПустоеЗначение(Товар) = 0 Тогда
			Если Товар.тмцЗаблокирован = 1 Тогда
				Сообщить("В строке "+НомерСтроки+" выбран товар, заблокированный для отгрузки!","!");
				глВсеВыбрано = 0;
			КонецЕсли;
		КонецЕсли;
		проверитьОтклонениеЦены();
		
		//+ralex, 11-05-21 23:26
		Если ВидОперации = 0 Тогда
			Если (ПартияПост1.Выбран() = 0) и (ПартияПост2.Выбран() = 0) и (ПартияПост3.Выбран() = 0) и (ПартияПост4.Выбран() = 0) и (ПартияПост5.Выбран() = 0) и (ПартияПост6.Выбран() = 0)Тогда
				дополненияТорговля = СоздатьОбъект("дополненияТорговля");
				Если дополненияТорговля.ПолучитьПараметрГруппыСправочника(Товар,"разрешеныПартииПост") = 1 Тогда
					спрПартииПост = СоздатьОбъект("Справочник.ПартииТоваровПоставщика");
					спрПартииПост.ИспользоватьВладельца(Товар);
					спрПартииПост.ВыбратьЭлементы();
					Пока спрПартииПост.ПолучитьЭлемент() = 1 Цикл
						Если спрПартииПост.ПометкаУдаления() = 1 Тогда
							Продолжить;
						КонецЕсли;
						Сообщить("В строке "+НомерСтроки+" у товара, имеющего партии поставщика не указана партия поставщика.","!!!");
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;

	Если ВидОперации = 0 Тогда
		//*ralex, 08-09-23 22:09
		//Если (ПолучитьСкладскоеМестоПоКоличеству(Товар,Количество * Коэффициент) <> 0) или (ДополненияТорговля.ПолучитьПараметрГруппыСправочника(Товар,"флСкладскоеМесто",ДатаДок) = 1) Тогда
		// -------- заменено на:
		Если (ДополненияТорговля.ПолучитьПараметрГруппыСправочника(Товар,"флСкладскоеМесто",ДатаДок) = 1) Тогда
		//*/------------------------
			Если (ПустоеЗначение(складскоеМесто) = 1) Тогда
				Сообщить("В строке "+НомерСтроки+" не указано складское место.","!!!");
				глВсеВыбрано = 0;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат глВсеВыбрано;
КонецФункции                 

// ===============================
Процедура ДвиженияВзаиморасчеты()
    
	ФлагОтгрузки = 1;	
	
	спДоговора = глПолучитьСписокКредДоговоров(Контекст);
	
	Если (ВидОперации = 1) Тогда
		ЗнакОплаты = -1; 
		ФлагВозврата = 1;
	КонецЕсли;
	Если ВидОперации <> 1 Тогда
		ЗнакОплаты = +1; 
		ФлагВозврата = 0;
	КонецЕсли;
	
	ВремРег = СоздатьОбъект("Регистры");	
	глРассчитатьИтогиВзаиморасчетов(Контекст,ВремРег,спФирмы,?(ВидТорговли = Перечисление.ВидыТорговли.Бартер,-ЗнакОплаты,ЗнакОплаты), Контрагент, спДоговора);
			
	Для Инд=1 по спФирмы.РазмерСписка() Цикл
		текФирма = спФирмы.ПолучитьЗначение(Инд);
		тбСуммыПогашения = глПолучитьСуммыДляПогашения(Контекст, текФирма);		
		тбДолги = глПолучитьИтогиВзаиморасчетов(Контекст,ВремРег, текФирма,?(ВидТорговли = Перечисление.ВидыТорговли.Бартер,-ЗнакОплаты,ЗнакОплаты),Контрагент, спДоговора);
		глПровестиПоВзаиморасчетам(Контекст,  ФлагОтгрузки, ЗнакОплаты, ФлагВозврата, текФирма, тбДолги, тбСуммыПогашения, Контрагент, спДоговора, ВидТорговли, ДокументОснование);
	КонецЦикла;
КонецПроцедуры

// ===============================
Процедура ДвиженияДеньги()
	
	Если ВидТорговли <> Перечисление.ВидыТорговли.Нал Тогда
	    Возврат;
	КонецЕсли;
	
	Если Константа.ПроводкиПоКассеТолькоОрдерами = Да тогда
	    Возврат;
	КонецЕсли;	
	
	Для Инд=1 по спФирмы.РазмерСписка() Цикл
		текФирма = спФирмы.ПолучитьЗначение(Инд);
		
		Регистр.Деньги.Фирма = текФирма;
		Регистр.Деньги.Валюта = Валюта;
		
		Если ПустоеЗначение(текФирма)=0 Тогда
			Регистр.Деньги.Счет = Касса;
		Иначе	
			Регистр.Деньги.Счет = 0;
		КонецЕсли;
		
		Регистр.Деньги.БезНал = 0; // Наличные
		
		Если ВидОперации = 1 Тогда // Возврат
			Регистр.Деньги.Сумма = - Итог("СуммаСНДС");
			Регистр.Деньги.ДвижениеПриходВыполнить();
		Иначе 
			Регистр.Деньги.Сумма = Итог("СуммаСНДС");
			Регистр.Деньги.ДвижениеРасходВыполнить();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры        

    
// ===============================
Процедура ДвиженияОстатки()

	ФлагПрихода = 1;
	
	ФлагВозврата = ВидОперации;
	
	глИзменитьОстатки(Контекст, спФирмы, Склад, ФлагВозврата, ФлагПрихода);
	
КонецПроцедуры
                           
// ===============================
Процедура ДвиженияРеализация(ФлагВозврата,текФирма,тбРеализация);
    
	// только при возврате !!!
	
	ДокументОснованиеРеализация = ДокументОснование;
	
	глЗаполнитьСтавкиВознаграждения(Контекст, текФирма,ДокументОснованиеРеализация, тбРеализация);
	
	ФлагОтгрузки = 1;
	ЗнакОплаты = +1;
	
	спДоговора = СоздатьОбъект("СписокЗначений");
	спКонтрагенты = СоздатьОбъект("СписокЗначений");   
	
	//составляем список договоров и дополнений,
	тбРеализация.ВыбратьСтроки();
	Пока тбРеализация.ПолучитьСтроку()=1 Цикл
		Если спДоговора.Принадлежит(тбРеализация.ДоговорКомм)=0 Тогда
			Дог = тбРеализация.ДоговорКомм;
			спДоговора.ДобавитьЗначение(Дог);
			спДоговора.ДобавитьЗначение(глПолучитьДополнениеДоговора(Дог,Перечисление.ВидыДополненийДоговоров.Консигнация, ДокументОснованиеРеализация.ДатаДок));
			//список контрагентов
			Если спКонтрагенты.Принадлежит(Дог.Контрагент)=0 Тогда
				спКонтрагенты.ДобавитьЗначение(Дог.Контрагент);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ВремРегРеализация = СоздатьОбъект("Регистры");
	
	глРассчитатьИтогиВзаиморасчетов(Контекст, ВремРегРеализация, текФирма, ЗнакОплаты, спКонтрагенты, спДоговора);
	тбДолги = глПолучитьИтогиВзаиморасчетов(Контекст, ВремРегРеализация, текФирма, ЗнакОплаты, спКонтрагенты, спДоговора);
	
	
	тбСуммыПогашения = СоздатьОбъект("ТаблицаЗначений");
	тбСуммыПогашения.НоваяКолонка("СтавкаНДС");
	тбСуммыПогашения.НоваяКолонка("СтавкаВознаграждения");
	тбСуммыПогашения.НоваяКолонка("СуммаСНДС");
	
	// сторно долга поставщику
	стДоговор = 0;				
	тбРеализация.ВыбратьСтроки();
	Пока тбРеализация.ПолучитьСтроку()=1 Цикл
		Если стДоговор <> тбРеализация.ДоговорКомм Тогда
			Если ПустоеЗначение(стДоговор)=0 Тогда					    	
				глПровестиПоВзаиморасчетам(Контекст,  ФлагОтгрузки, ЗнакОплаты, ФлагВозврата, 
				текФирма, тбДолги, тбСуммыПогашения, стДоговор.Контрагент, стДоговор, Перечисление.ВидыТорговли.Консигнация,ДокументОснованиеРеализация);
			КонецЕсли;
			стДоговор=тбРеализация.ДоговорКомм;
			тбСуммыПогашения.УдалитьСтроки();
		КонецЕсли;
		тбСуммыПогашения.НоваяСтрока();
		Вознаграждение = тбРеализация.СуммаСНДС*(1 - тбРеализация.СтавкаВознаграждения/100); 
		Если ПустоеЗначение(текФирма)=0 Тогда
			тбСуммыПогашения.СтавкаНДС = тбРеализация.СтавкаНДС;
			ВВ = Гривня;
		Иначе
			ВВ = глВалютаВзаиморасчетов(стДоговор.Контрагент);
		КонецЕсли;
		тбСуммыПогашения.СуммаСНДС = глПодготовитьСумму(Вознаграждение,Валюта,Курс,ВВ,Дата_Курса);
		тбСуммыПогашения.СтавкаВознаграждения = тбРеализация.СтавкаВознаграждения;
	КонецЦикла;
	Если ПустоеЗначение(стДоговор)=0 Тогда
		глПровестиПоВзаиморасчетам(Контекст,  ФлагОтгрузки, ЗнакОплаты, ФлагВозврата, 
		текФирма, тбДолги, тбСуммыПогашения, стДоговор.Контрагент, стДоговор,Перечисление.ВидыТорговли.Консигнация,ДокументОснованиеРеализация);
	КонецЕсли;          
	
	ФлагОтгрузки = 0;
	ЗнакОплаты = -1;
	
	глРассчитатьИтогиВзаиморасчетов(Контекст, ВремРегРеализация, текФирма, ЗнакОплаты, спКонтрагенты, спДоговора);
	тбДолги = глПолучитьИтогиВзаиморасчетов(Контекст, ВремРегРеализация, текФирма, ЗнакОплаты, спКонтрагенты, спДоговора);
	
	// сторно вознаграждения от поставщика
	стДоговор = 0;
	тбСуммыПогашения.УдалитьСтроки();
	тбРеализация.ВыбратьСтроки();
	Пока тбРеализация.ПолучитьСтроку()=1 Цикл
		Если стДоговор <> тбРеализация.ДоговорКомм Тогда
			Если ПустоеЗначение(стДоговор)=0 Тогда
				глПровестиПоВзаиморасчетам(Контекст,  ФлагОтгрузки, ЗнакОплаты, ФлагВозврата, 
					текФирма, тбДолги, тбСуммыПогашения, стДоговор.Контрагент, стДоговор,Перечисление.ВидыТорговли.Консигнация,ДокументОснованиеРеализация);
			КонецЕсли;
			стДоговор=тбРеализация.ДоговорКомм;
			тбСуммыПогашения.УдалитьСтроки();
		КонецЕсли;
		тбСуммыПогашения.НоваяСтрока();
		Вознаграждение = тбРеализация.СуммаСНДС*тбРеализация.СтавкаВознаграждения/100;
		Если ПустоеЗначение(текФирма)=0 Тогда
			тбСуммыПогашения.СтавкаНДС = тбРеализация.СтавкаНДС;
			ВВ = Гривня;
		Иначе
			ВВ = глВалютаВзаиморасчетов(стДоговор.Контрагент);
		КонецЕсли;
		тбСуммыПогашения.СуммаСНДС = глПодготовитьСумму(Вознаграждение,Валюта,Курс,ВВ,Дата_Курса);
		тбСуммыПогашения.СтавкаВознаграждения = тбРеализация.СтавкаВознаграждения;
	КонецЦикла;
	Если ПустоеЗначение(стДоговор)=0 Тогда
		глПровестиПоВзаиморасчетам(Контекст,  ФлагОтгрузки, ЗнакОплаты, ФлагВозврата, текФирма,
			тбДолги, тбСуммыПогашения, стДоговор.Контрагент, стДоговор,Перечисление.ВидыТорговли.Консигнация,ДокументОснованиеРеализация);
	КонецЕсли;          
	
КонецПроцедуры

// ===============================
Процедура ДвиженияПартии() 
	
	Для Инд=1 по спФирмы.РазмерСписка() Цикл
		текФирма = спФирмы.ПолучитьЗначение(Инд);
		
		Если ПустоеЗначение(текФирма)=1 Тогда
			МетодРасчетаСебестоимости = Константа.МетодРасчетаСебестоимостиУправленческогоУчета;
		Иначе
			текФирма.ИспользоватьДату(ДатаДок);
			МетодРасчетаСебестоимости = текФирма.МетодРасчетаСебестоимостиФинансовогоУчета;
		КонецЕсли;                  
		
		Если (ВидОперации = 0) или 
		((ВидОперации = 1) и (ДокументОснование.Выбран()=0)) Тогда
			// Приходуем не проверяя:
			
			// Рассчитать сумму услуг в табличной части
			ИСуммаСНДСУслуг = 0;
			ИСуммаБезНДСУслуг = 0;
			ИСуммаСНДСТоваров = 0;
			ИСуммаБезНДСТоваров = 0;
			НомерСтрокиПоследнегоТовара = 1;
			
			ВыбратьСтроки();
			Пока ПолучитьСтроку()=1 Цикл
				Если Товар.УслугиНаСебестоимость = 1 Тогда
					ИСуммаСНДСУслуг = ИСуммаСНДСУслуг + СуммаСНДС;
					ИСуммаБезНДСУслуг = ИСуммаБезНДСУслуг + СуммаБезНДС;
				Иначе
					ИСуммаСНДСТоваров = ИСуммаСНДСТоваров + СуммаСНДС;
					ИСуммаБезНДСТоваров = ИСуммабезНДСТоваров + СуммаБезНДС;
					НомерСтрокиПоследнегоТовара = НомерСтроки;
				КонецЕсли;
			КонецЦикла;
			
			Если (ИСуммаСНДСУслуг = Итог("СуммаСНДС")) и (ИСуммаСНДСУслуг <> 0) Тогда
				глНеПроводить(Контекст,"Отсутствуют товары в табличной части.");
				Возврат;
			КонецЕсли;		
			
			НераспрИСуммаСНДСУслуг = ИСуммаСНДСУслуг;
			НераспрИСуммаБезНДСУслуг = ИСуммаБезНДСУслуг;
			
			Регистр.ПартииТоваров.Фирма = текФирма;
			
			Если МетодРасчетаСебестоимости = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
				Регистр.ПартииТоваров.Контрагент = 0;
				Регистр.ПартииТоваров.Поставщик = 0;
				Регистр.ПартииТоваров.Поставка = 0;
				Регистр.ПартииТоваров.ПрихДокумент = 0;
			Иначе
				Регистр.ПартииТоваров.Контрагент = Контрагент;
				Регистр.ПартииТоваров.Поставщик = Контрагент;
				Регистр.ПартииТоваров.Поставка = ТекущийДокумент();
				Регистр.ПартииТоваров.ПрихДокумент = ТекущийДокумент();
			КонецЕсли;
			
			ВыбратьСтроки();
			Пока ПолучитьСтроку()=1 Цикл
				    
				Если Товар.УслугиНаСебестоимость = 1 Тогда
				    Продолжить;
				КонецЕсли;
				
				Если Товар.ВидТовара = Перечисление.ВидыТоваров.Услуга Тогда
					Регистр.ПартииТоваров.Статус = Услуга;
				Иначе
					Регистр.ПартииТоваров.Статус = Купленный;
				КонецЕсли;
				
				Регистр.ПартииТоваров.ПривязыватьСтроку(НомерСтроки);
				Регистр.ПартииТоваров.Товар = Товар;
				Регистр.ПартииТоваров.ОстатокТовара = Количество * Единица.Коэффициент;
				
				Если НомерСтроки = НомерСтрокиПоследнегоТовара Тогда
					ДопСуммаСНДС = НераспрИСуммаСНДСУслуг;
					ДопСуммаБезНДС = НераспрИСуммаБезНДСУслуг;
				Иначе
					//*ralex, 22-12-18 12:49
					//ДопСуммаСНДС = СуммаСНДС / ИСуммаСНДСТоваров *  ИСуммаСНДСУслуг;
					// -------- заменено на:
					ДопСуммаСНДС = ?(ИСуммаСНДСТоваров = 0,0,СуммаСНДС / ИСуммаСНДСТоваров *  ИСуммаСНДСУслуг);
					//*/ralex, 22-12-18 12:49
					НераспрИСуммаСНДСУслуг = НераспрИСуммаСНДСУслуг  - ДопСуммаСНДС;
					//*ralex, 22-12-18 12:50
					//ДопСуммаБезНДС = СуммаБезНДС / ИСуммаБезНДСТоваров *  ИСуммаБезНДСУслуг;
					// -------- заменено на:
					ДопСуммаБезНДС = ?(ИСуммаБезНДСТоваров = 0,0,СуммаБезНДС / ИСуммаБезНДСТоваров *  ИСуммаБезНДСУслуг);
					//*/ralex, 22-12-18 12:50
					НераспрИСуммаБезНДСУслуг = НераспрИСуммаБезНДСУслуг  - ДопСуммаБезНДС; 
				КонецЕсли;
				
				Если ПустоеЗначение(текФирма)=1 Тогда
					ВалютаУчета = Товар.ВалютаУчета;
				Иначе
					ВалютаУчета = Гривня;
				КонецЕсли;
				
				Регистр.ПартииТоваров.Стоимость = глПересчет(СуммаБезНДС + ДопСуммаБезНДС,Валюта,Курс,ВалютаУчета,Дата_Курса);
				Регистр.ПартииТоваров.ПродСтоимость = 0;
				Регистр.ПартииТоваров.НДС = глПересчет(СуммаСНДС - СуммаБезНДС + ДопСуммаСНДС - ДопСуммаБезНДС,Валюта,Курс,ВалютаУчета,Дата_Курса);
				Регистр.ПартииТоваров.Оборот =0;
				Регистр.ПартииТоваров.НДСРасхода = 0;
				
				Если ВидОперации = 1 Тогда // Возврат
					Регистр.ПартииТоваров.КодОперации = ВозвратТовараОтПокупателя;
					Регистр.ПартииТоваров.ОстатокТовара = - Регистр.ПартииТоваров.ОстатокТовара;
					Регистр.ПартииТоваров.Стоимость = - Регистр.ПартииТоваров.Стоимость;
					Регистр.ПартииТоваров.ПродСтоимость = - Регистр.ПартииТоваров.ПродСтоимость;
					Регистр.ПартииТоваров.НДС = - Регистр.ПартииТоваров.НДС;
					Регистр.ПартииТоваров.Оборот = - Регистр.ПартииТоваров.Оборот;
					Регистр.ПартииТоваров.НДСРасхода = - Регистр.ПартииТоваров.НДСРасхода;
					Регистр.ПартииТоваров.ДвижениеРасходВыполнить();
				Иначе
					Если Товар.ВидТовара = Перечисление.ВидыТоваров.Услуга Тогда
						Регистр.ПартииТоваров.КодОперации = ПокупкаУслуги;
						Регистр.ПартииТоваров.ДвижениеПриходВыполнить();
						Регистр.ПартииТоваров.ДвижениеРасходВыполнить();
					Иначе     
						Регистр.ПартииТоваров.КодОперации = ЗакупкаТовара;
						Регистр.ПартииТоваров.ДвижениеПриходВыполнить();
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
		Иначе // Если ВидОперации = Возврат и ДокументОснование выбран
			// Возврат товара, проданного обычному покупателю по ДокументуОснованию
			ФлагВозврата = 1;
			тбРеализация = СоздатьОбъект("ТаблицаЗначений");
			тбРеализация.НоваяКолонка("ДоговорКомм");
			тбРеализация.НоваяКолонка("СтавкаНДС");
			тбРеализация.НоваяКолонка("СуммаСНДС","Число",19,5);
			
			спОтбор = СоздатьОбъект("СписокЗначений");
			спСтатус = СоздатьОбъект("СписокЗначений");
			спСтатус.ДобавитьЗначение( Купленный );
			спСтатус.ДобавитьЗначение( Принятый );
			спСтатус.ДобавитьЗначение( ПринятыйБезПраваПередачи );
			спОтбор.Установить("Статус",спСтатус);
			спОтбор.Установить("ТекущийДокумент",ДокументОснование);
			Предпочтение = 0;
			тбПартии = 0;
			тбОстатки = 0;
			ИнвСтартегияПредпочтения  = 1;
			ИнвСтратегияПродажи = 1;
			ВремРег = СоздатьОбъект("Регистры");
			
			глСформироватьТаблицуПартий(Контекст, ВремРег ,текФирма, ФлагВозврата, спОтбор, Предпочтение, 
			тбПартии, тбОстатки, ИнвСтартегияПредпочтения, ИнвСтратегияПродажи);
			
			ВыбратьСтроки();
			Пока ПолучитьСтроку()=1 Цикл
				
				Если ПустоеЗначение(текФирма)=1 Тогда
					ВУ = Товар.ВалютаУчета;
				Иначе	
					ВУ = Гривня;
				КонецЕсли;
				
				ОсталосьСписать =  Количество * Коэффициент;
				
				Если Товар.ВидТовара = Перечисление.ВидыТоваров.Услуга Тогда
					
					ОсталосьСуммаСНДС = глПересчет(СуммаСНДС,Валюта,ДатаДок,ВУ,ДатаДок);
					ОсталосьСуммаБезНДС = глПересчет(СуммаБезНДС,Валюта,ДатаДок,ВУ,ДатаДок);
					
					КодОперации = СторноПродажаУслуги;
					
					СписываемыйОборот = ОсталосьСуммаСНДС;
					СписываемыйНДСРасхода = ОсталосьСуммаСНДС - ОсталосьСуммаБезНДС;
					
					глПровестиПартию(Контекст, 0, ФлагВозврата, текФирма, Товар, Услуга,
						0,0, ТекущийДокумент(), ТекущийДокумент(), ОсталосьСписать, ОсталосьСуммаБезНДС, 
						0, ОсталосьСуммаСНДС - ОсталосьСуммаБезНДС,  СписываемыйОборот,СписываемыйНДСРасхода,КодОперации, 0, -СписываемыйОборот);
					
					Продолжить;
				КонецЕсли;
				
				НС=0;
				Если тбПартии.НайтиЗначение(Товар,НС,"Товар")=1 Тогда
					тбПартии.ПолучитьСтрокуПоНомеру(НС);
				Иначе
					тбПартии.ВыбратьСтроки();
					тбПартии.ПолучитьСтроку();
				КонецЕсли;
				
				Пока тбПартии.Товар = Товар Цикл			
					
					КонтрагентП = тбПартии.Контрагент;
					ПоставщикП = тбПартии.Поставщик;
					ПоставкаП = тбПартии.Поставка;
					ПрихДокументП = тбПартии.ПрихДокумент;
					СтатусП = тбПартии.Статус;
					
					НС =0;
					Если тбОстатки.НайтиЗначение(глПолучитьКлючТбОстатков(ПрихДокументП,ПоставкаП,Товар.Код),НС,"Ключ")=1 Тогда
						тбОстатки.ПолучитьСтрокуПоНомеру(НС);
						
						ОстатокТовара = тбОстатки.ОстатокТовара;
						
						Если ОстатокТовара = 0 Тогда
							Если тбПартии.ПолучитьСтроку()=0 Тогда
								Прервать;
							КонецЕсли;
							Продолжить;
						КонецЕсли;
						
						СписываемыйОстатокТовара = Мин(ОсталосьСписать, ОстатокТовара);
						
						КоэфСписания = СписываемыйОстатокТовара / ОстатокТовара;
						
						СписываемаяСтоимость = тбОстатки.Стоимость * КоэфСписания;
						СписываемаяПродСтоимость = тбОстатки.ПродСтоимость * КоэфСписания;
						СписываемыйНДС = тбОстатки.НДС * КоэфСписания;
						
						СписываемыйОборот = тбОстатки.Оборот * КоэфСписания;
						СписываемыйНДСРасхода = тбОстатки.НДСРасхода * КоэфСписания;
						
						СписываемаяПрибыль = тбОстатки.Прибыль * КоэфСписания;							
						
						Если СтатусП = Принятый Тогда
							КодОперации = ВозвратПринятогоТовараОтПокупателя;
						Иначе
							КодОперации = ВозвратТовараОтПокупателя;
						КонецЕсли;						
						
						СуммаРеализации = глПересчет(СписываемыйОборот,ВУ,Дата_курса,Валюта,Курс);
						                                  
						глПровестиПартию(Контекст, 1, ФлагВозврата, текФирма, Товар, СтатусП, КонтрагентП, ПоставщикП, 
							ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
							СписываемыйНДС, СписываемыйОборот, СписываемыйНДСРасхода, КодОперации,ДокументОснование, СписываемаяПрибыль);
						
						глУчестьСписание(тбОстатки,СписываемыйОстатокТовара,СписываемаяСтоимость,СписываемаяПродСтоимость,СписываемыйНДС,СписываемыйОборот,СписываемыйНДСРасхода,СписываемаяПрибыль);
						
						Если (СтатусП = Принятый) или (СтатусП = ПринятыйБезПраваПередачи) Тогда
							тбРеализация.НоваяСтрока();
							тбРеализация.ДоговорКомм = ПоставкаП.Договор;
							тбРеализация.СтавкаНДС = Товар.СтавкаНДС.Получить(ДатаДок);
							тбРеализация.СуммаСНДС = СуммаРеализации;
						КонецЕсли;
						
						ОсталосьСписать = ОсталосьСписать - СписываемыйОстатокТовара;
					КонецЕсли;
					
					Если ОсталосьСписать = 0 Тогда
						Прервать;
					КонецЕсли;   
					
					Если тбПартии.ПолучитьСтроку()=0 Тогда
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
				Если ОсталосьСписать > 0 Тогда
					//*ralex, 07-02-22 17:11
					//глСообщитьОбОтсутствииПартии(Контекст,ФлагВозврата, текФирма, Товар, НомерСтроки);
					//глНеПроводить(Контекст);
					//Возврат;
					//Если (Константа.РазрешитьОтрицательныеОстаткиТоваров = Нет) и (НазваниеНабораПрав() <> "Администратор") Тогда
					//	глНеПроводить(Контекст);
					//	Возврат;
					//Иначе
					// -------- заменено на:
					Если (Константа.РазрешитьОтрицательныеОстаткиТоваров = Нет) и (НазваниеНабораПрав() <> "Администратор") Тогда
						глСообщитьОбОтсутствииПартии(Контекст,ФлагВозврата, текФирма, Товар, НомерСтроки);
						глНеПроводить(Контекст);
						Возврат;
					Иначе
						//*/------------------------
						ОстатокТовара = Количество * Коэффициент;
						СписываемыйОстатокТовара = ОсталосьСписать;
						КоэфСписания = СписываемыйОстатокТовара / ОстатокТовара;
						
						СписываемаяСтоимость = глПересчет(СуммаБезНДС * КоэфСписания,Валюта,Курс,ВУ,Дата_курса);
						СписываемаяПродСтоимость = 0;
						СписываемыйНДС = глПересчет((СуммаСНДС - СуммаБезНДС) * КоэфСписания,Валюта,Курс,ВУ,Дата_курса);
						
						СписываемыйОборот =  глПересчет(СуммаСНДС * КоэфСписания,Валюта,Курс,ВУ,Дата_курса);
						СписываемыйНДСРасхода = глПересчет((СуммаСНДС - СуммаБезНДС) * КоэфСписания,Валюта,Курс,ВУ,Дата_курса);
												
						СтатусП = Купленный;
						КодОперации = ВозвратТовараОтПокупателя;
						
						Если МетодРасчетаСебестоимости = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
							КонтрагентП = 0;
							ПоставщикП = 0;
							ПоставкаП = 0;
							ПрихДокументП = 0;
						Иначе
							КонтрагентП = 0;
							ПоставщикП = 0;
							ПоставкаП = 0;
							ПрихДокументП = ТекущийДокумент();
						КонецЕсли;
						
						глПровестиПартию(Контекст, 1, ФлагВозврата, текФирма, Товар, СтатусП, КонтрагентП, ПоставщикП, 
							ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
							СписываемыйНДС, СписываемыйОборот, СписываемыйНДСРасхода, КодОперации,0,0);
						
						глСообщитьОСозданииПартии(Товар, СтатусП, СписываемыйОстатокТовара);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла; // строки документа
				
			// Реализация
			Если тбРеализация.КоличествоСтрок()>0 Тогда
				ДвиженияРеализация(ФлагВозврата,текФирма,тбРеализация);
			КонецЕсли; 
		КонецЕсли;
	КонецЦикла; // Фирмы
КонецПроцедуры

Функция ДвиженияПартииПоставщика() 
	текФирма = ПолучитьПустоеЗначение("Справочник.Фирмы");
	Если (ВидОперации = 0) Тогда //приход товара
		// Приходуем не проверяя:
		НомерСтрокиПоследнегоТовара = 1;
		
		Регистр.ПартииПоставщика.Поставщик = Контрагент;
		Регистр.ПартииПоставщика.ПрихДокумент = ТекущийДокумент();
			//ПолучитьАтрибут("ПартияПост1") - переписать когда-нибудь
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл
			Если ПустоеЗначение(ПартияПост1) = 0 Тогда
				Регистр.ПартииПоставщика.ПривязыватьСтроку(НомерСтроки);
				Регистр.ПартииПоставщика.Товар = Товар;
				Регистр.ПартииПоставщика.ПартияПост = ПартияПост1;	
				Регистр.ПартииПоставщика.Склад = Склад;	
				Регистр.ПартииПоставщика.ОстатокТовара = квоПартияПост1 * Единица.Коэффициент;
				Регистр.ПартииПоставщика.ДвижениеПриходВыполнить();
			КонецЕсли;
			Если ПустоеЗначение(ПартияПост2) = 0 Тогда
				Регистр.ПартииПоставщика.ПривязыватьСтроку(НомерСтроки);
				Регистр.ПартииПоставщика.Товар = Товар;
				Регистр.ПартииПоставщика.ПартияПост = ПартияПост2;	
				Регистр.ПартииПоставщика.Склад = Склад;	
				Регистр.ПартииПоставщика.ОстатокТовара = квоПартияПост2 * Единица.Коэффициент;
				Регистр.ПартииПоставщика.ДвижениеПриходВыполнить();
			КонецЕсли;
			Если ПустоеЗначение(ПартияПост3) = 0 Тогда
				Регистр.ПартииПоставщика.ПривязыватьСтроку(НомерСтроки);
				Регистр.ПартииПоставщика.Товар = Товар;
				Регистр.ПартииПоставщика.ПартияПост = ПартияПост3;	
				Регистр.ПартииПоставщика.Склад = Склад;	
				Регистр.ПартииПоставщика.ОстатокТовара = квоПартияПост3 * Единица.Коэффициент;
				Регистр.ПартииПоставщика.ДвижениеПриходВыполнить();
			КонецЕсли;
			Если ПустоеЗначение(ПартияПост4) = 0 Тогда
				Регистр.ПартииПоставщика.ПривязыватьСтроку(НомерСтроки);
				Регистр.ПартииПоставщика.Товар = Товар;
				Регистр.ПартииПоставщика.ПартияПост = ПартияПост4;	
				Регистр.ПартииПоставщика.Склад = Склад;	
				Регистр.ПартииПоставщика.ОстатокТовара = квоПартияПост4 * Единица.Коэффициент;
				Регистр.ПартииПоставщика.ДвижениеПриходВыполнить();
			КонецЕсли;
			Если ПустоеЗначение(ПартияПост5) = 0 Тогда
				Регистр.ПартииПоставщика.ПривязыватьСтроку(НомерСтроки);
				Регистр.ПартииПоставщика.Товар = Товар;
				Регистр.ПартииПоставщика.ПартияПост = ПартияПост5;	
				Регистр.ПартииПоставщика.Склад = Склад;	
				Регистр.ПартииПоставщика.ОстатокТовара = квоПартияПост5 * Единица.Коэффициент;
				Регистр.ПартииПоставщика.ДвижениеПриходВыполнить();
			КонецЕсли;
			Если ПустоеЗначение(ПартияПост6) = 0 Тогда
				Регистр.ПартииПоставщика.ПривязыватьСтроку(НомерСтроки);
				Регистр.ПартииПоставщика.Товар = Товар;
				Регистр.ПартииПоставщика.ПартияПост = ПартияПост6;	
				Регистр.ПартииПоставщика.Склад = Склад;	
				Регистр.ПартииПоставщика.ОстатокТовара = квоПартияПост6 * Единица.Коэффициент;
				Регистр.ПартииПоставщика.ДвижениеПриходВыполнить();
			КонецЕсли;
		КонецЦикла;	
	ИначеЕсли (ВидОперации = 1) и (ПустоеЗначение(ДокументОснование) = 1) Тогда // Возврат и документ основание не выбран
		// Приходуем не проверяя:
		//+ralex, 09-05-21 17:59
		Если ПустоеЗначение(ПартияПост1) = 0 Тогда
			ОстатокТовара = квоПартияПост1 * Единица.Коэффициент;
			глПровестиПартиюПост(Контекст,1,1,Товар,ПартияПост1,Контрагент,Контрагент, ТекущийДокумент(), ОстатокТовара,,Склад);
		КонецЕсли;
		Если ПустоеЗначение(ПартияПост2) = 0 Тогда
			ОстатокТовара = квоПартияПост2 * Единица.Коэффициент;
			глПровестиПартиюПост(Контекст,1,1,Товар,ПартияПост2,Контрагент,Контрагент, ТекущийДокумент(), ОстатокТовара,,Склад);
		КонецЕсли;
		Если ПустоеЗначение(ПартияПост3) = 0 Тогда
			ОстатокТовара = квоПартияПост3 * Единица.Коэффициент;
			глПровестиПартиюПост(Контекст,1,1,Товар,ПартияПост3,Контрагент,Контрагент, ТекущийДокумент(), ОстатокТовара,,Склад);
		КонецЕсли;
		Если ПустоеЗначение(ПартияПост4) = 0 Тогда
			ОстатокТовара = квоПартияПост4 * Единица.Коэффициент;
			глПровестиПартиюПост(Контекст,1,1,Товар,ПартияПост4,Контрагент,Контрагент, ТекущийДокумент(), ОстатокТовара,,Склад);
		КонецЕсли;
		Если ПустоеЗначение(ПартияПост5) = 0 Тогда
			ОстатокТовара = квоПартияПост5 * Единица.Коэффициент;
			глПровестиПартиюПост(Контекст,1,1,Товар,ПартияПост5,Контрагент,Контрагент, ТекущийДокумент(), ОстатокТовара,,Склад);
		КонецЕсли;
		Если ПустоеЗначение(ПартияПост6) = 0 Тогда
			ОстатокТовара = квоПартияПост6 * Единица.Коэффициент;
			глПровестиПартиюПост(Контекст,1,1,Товар,ПартияПост6,Контрагент,Контрагент, ТекущийДокумент(), ОстатокТовара,,Склад);
		КонецЕсли;
		//+/------------------------
	ИначеЕсли (ВидОперации = 1) и (ПустоеЗначение(ДокументОснование) = 0) Тогда // Если ВидОперации = Возврат и ДокументОснование выбран
		// Возврат товара, проданного обычному покупателю по ДокументуОснованию проверим отгружался ли такой товар по док. - основанию
		// при возврате на основании используется только партияПост1
		ФлагВозврата = 1;
		тбРеализация = СоздатьОбъект("ТаблицаЗначений");
		
		спОтбор = СоздатьОбъект("СписокЗначений");
		спОтбор.Установить("ТекущийДокумент",ДокументОснование);
		тбПартии = 0;
		тбОстатки = 0;
		ВремРег = СоздатьОбъект("Регистры");
		глСформироватьТаблицуПартийПоставщика(Контекст, ВремРег,ФлагВозврата, спОтбор,тбПартии);
		
		
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл
			Если ПартияПост1.Выбран() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			НС=0;
			Если тбПартии.НайтиЗначение(ПартияПост1,НС,"ПартияПост")=0 Тогда
				Сообщить("для товара " + Товар.Код + " партия поставщика " + ПартияПост1 + " по указанной РН не отгружалась.");
				Если НЕ ((ДокументОснование.ДатаДок < '16.09.2022') and (НазваниеНабораПрав() = "Администратор") 
				и (дополненияТорговля.ПолучитьПараметрГруппыСправочника(Товар,"флЭтоГруппаДвери") = 1)) Тогда
					Возврат 0;
				КонецЕсли;
			КонецЕсли;
			
			ОсталосьСписать =  Количество * Коэффициент;
			
			//*ralex, 13-02-23 22:50
			//НС=0;
			//Если тбПартии.НайтиЗначение(ПартияПост1,НС,"ПартияПост")=1 Тогда
			//	тбПартии.ПолучитьСтрокуПоНомеру(НС);
			//Иначе
			//	Сообщить("для товара " + Товар.Код + " партия поставщика " + ПартияПост1 + " по указанной РН не отгружалась.");
			//	Если НЕ ((ДокументОснование.ДатаДок < '16.09.2022') and (НазваниеНабораПрав() = "Администратор") 
			//		и (дополненияТорговля.ПолучитьПараметрГруппыСправочника(Товар,"флЭтоГруппаДвери") = 1)) Тогда
			//			Возврат 0;
			//	КонецЕсли;
			//КонецЕсли;
			//Если тбПартии.Товар <> Товар Тогда
			//	Сообщить("для товара " + Товар.Код + " указана неверная партия поставщика " + ПартияПост1);
			//	Если НЕ ((ДокументОснование.ДатаДок < '16.09.2022') and (НазваниеНабораПрав() = "Администратор") 
			//		и (дополненияТорговля.ПолучитьПараметрГруппыСправочника(Товар,"флЭтоГруппаДвери") = 1)) Тогда
			//		Возврат 0;
			//	КонецЕсли;
			//КонецЕсли;
			//
			//ОстатокТовара = Число(тбПартии.ОстатокТовара);
			//Если ОсталосьСписать > ОстатокТовара Тогда
			//	Сообщить(" по партии поставщика " + ПартияПост1 + " приходуем " + ОсталосьСписать + " а отгружалось " + ОстатокТовара);
			//	Если НЕ ((ДокументОснование.ДатаДок < '16.09.2022') and (НазваниеНабораПрав() = "Администратор") 
			//	и (дополненияТорговля.ПолучитьПараметрГруппыСправочника(Товар,"флЭтоГруппаДвери") = 1)) Тогда
			//		Возврат 0;
			//	Иначе
			//		ОстатокТовара = ОсталосьСписать;
			//	КонецЕсли;
			//КонецЕсли;
			//
			//СписываемыйОстатокТовара = Мин(ОсталосьСписать, ОстатокТовара);
			////*ralex, 09-05-21 14:01
			//глПровестиПартиюПост(Контекст, 1,1, Товар, ПартияПост1,Контрагент,тбПартии.Поставщик, тбПартии.ПрихДокумент, СписываемыйОстатокТовара,ДокументОснование,Склад);
			// -------- заменено на:
			тбПартии.ВыбратьСтроки();
			Пока тбПартии.ПолучитьСтроку() = 1 Цикл
				Если ОсталосьСписать <= 0 Тогда
					Прервать;
				КонецЕсли;
				Если тбПартии.ПартияПост <> ПартияПост1 Тогда
					Продолжить;
				КонецЕсли;
				Если тбПартии.Товар <> Товар Тогда
					Сообщить("для товара " + Товар.Код + " указана неверная партия поставщика " + ПартияПост1);
					Если НЕ ((ДокументОснование.ДатаДок < '16.09.2022') and (НазваниеНабораПрав() = "Администратор") 
						и (дополненияТорговля.ПолучитьПараметрГруппыСправочника(Товар,"флЭтоГруппаДвери") = 1)) Тогда
						Возврат 0;
					КонецЕсли;
				КонецЕсли;
				ОстатокТовара = Число(тбПартии.ОстатокТовара);
				СписываемыйОстатокТовара = Мин(ОсталосьСписать, ОстатокТовара);
				ОсталосьСписать = ОсталосьСписать - СписываемыйОстатокТовара;
				глПровестиПартиюПост(Контекст, 1,1, Товар, ПартияПост1,Контрагент,тбПартии.Поставщик, тбПартии.ПрихДокумент, СписываемыйОстатокТовара,ДокументОснование,Склад);
			КонецЦикла;
			
			Если ОсталосьСписать > ОстатокТовара Тогда
				Сообщить(" по партии поставщика " + ПартияПост1 + " приходуем " + ОсталосьСписать + " а отгружалось " + ОстатокТовара);
				Если НЕ ((ДокументОснование.ДатаДок < '16.09.2022') and (НазваниеНабораПрав() = "Администратор") 
				и (дополненияТорговля.ПолучитьПараметрГруппыСправочника(Товар,"флЭтоГруппаДвери") = 1)) Тогда
					Возврат 0;
				КонецЕсли;
			КонецЕсли;
		
			
			
			
			//*/------------------------
	//*/------------------------
		КонецЦикла; // строки документа
	КонецЕсли;
КонецФункции

//======================================================================
Функция ПроверкаВозврата()
	// проверяем сколько уже возвращено 	
	РегВозвратыПартий = СоздатьОбъект("Регистр.ВозвратыПартий");
	тз = СоздатьОбъект("ТаблицаЗначений");
	ДокументОснование.ВыгрузитьТабличнуюЧасть(тз);
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 цикл
		КвоВозвр = -1 * Регистр.ВозвратыПартий.СводныйОстаток(,,Товар,,,,,ДокументОснование,"ОстатокТовара"); //в регистре значение с минусом
		стр = 0;
		Если тз.НайтиЗначение(Товар,стр,"Товар") <> 0 Тогда
			врКво = тз.ПолучитьЗначение(стр,"Количество");
			врКоэф = тз.ПолучитьЗначение(стр,"Коэффициент");
			КвоВсего = врКво * врКоэф;
		Иначе
			Продолжить; //товара нет в РН
		КонецЕсли;
		КвоТекущее = Количество * Коэффициент;
		Если КвоТекущее + КвоВозвр > КвоВсего Тогда
			Сообщить("Общее количество возвращаемого товара " + Товар + " = " + (КвоТекущее + КвоВозвр) + "превышает количество товара в расходной накладной = " + КвоВсего);
			Возврат 0;
		КонецЕсли;
	КонецЦикла;	
	Возврат 1;
КонецФункции // ПроверкаВозврата

//======================================================================
Функция ДвиженияЗаказПоставщику()
	клЗаказПоставщику = СоздатьОбъект("ЗаказыПоставщику");
	клЗаказПоставщику.ВыполнитьДвиженияПоЗаказуПоставщику(Контекст,перечисление.СтатусыЗаказа.заказн,перечисление.СтатусыЗаказа.получен);
КонецФункции // ДвиженияЗаказПоставщику

//-------------------------------------
Процедура ОбработкаПроведения(структураПарам = "")
	этоГрупповаяОбработка = Макс(ГрупповаяОбработка(),глГрупповоеПроведение);
	сканер = 0;
	Если ПустоеЗначение(структураПарам) = 1 Тогда
		текПользователь = глПользователь;
		сканер = 0;
	ИначеЕсли ТипЗначенияСтр(структураПарам) = "Структура" Тогда
		текПользователь = ?(структураПарам.ЕстьСвойство("пользователь") = 0,глПользователь,структураПарам.пользователь);
		сканер = ?(структураПарам.ЕстьСвойство("сканер") = 0,0,структураПарам.сканер);
	КонецЕсли;
	
	Если сканер = 1 Тогда
		ОжидаемыеПоступления = 0;
	КонецЕсли;
	
	флПлохаяЦена = 0;
	Если ПустоеЗначение(причинаВозвратаПок) = 0 Тогда
		Если ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.ошибка Тогда
			ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.ошибкаМенеджера;
		КонецЕсли;
		Если ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.брак Тогда
			ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.бракНаш;
			//Комментарий =  Комментарий + "причина ""брак"" заменена на ""брак наш""";
		КонецЕсли;
	КонецЕсли;
	
	Если этоГрупповаяОбработка = 0 Тогда
		Если ДатаДок>РабочаяДата() Тогда
			глНеПроводить(Контекст,"Нельзя проводить документ будущей датой!");
			Возврат;
		КонецЕсли;
		
		Если ВидОперации = 1 Тогда //возврат
			Если НазваниеНабораПрав() <> "Администратор" Тогда
				спрКонтрПрава = СоздатьОбъект("КонтрагентыПрава");
				Если спрКонтрПрава.ПроверитьРазрешениеГруппыСМС(Контрагент) <> 0 Тогда
					Если подтвержденСМС = 0 Тогда
						глНеПроводить(Контекст,"Для клиента " + Контрагент + " требуется sms подтверждение.");
						Возврат;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;		
		
		Если НЕ((НазваниеНабораПрав() = "Администратор") или (НазваниеНабораПрав() ="КладовщикШК") или (НазваниеНабораПрав() ="Менеджер")) и (ОжидаемыеПоступления = 0) Тогда
			Если сканер =0 Тогда
				Если ДатаДок <> ТекущаяДата() Тогда
					глНеПроводить(Контекст,"Нельзя проводить документ датой отличной от текущей!");
					Возврат;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;  
		Если ВидОперации = 0 Тогда //приход
			Если спрКонтрПрава.ПолучитьПравоПользователя(текПользователь,"флПроводитьПН") = 0 Тогда
				складЗаказ = гл_ПолучитьЗначениеДопКонстанты("складЗаказ");
				Если Склад<> складЗаказ Тогда
					глНеПроводить(Контекст,"Вам запрещено проводить приходные накладные.");
					Возврат;
				КонецЕсли;
			Иначе //разрешено проводить ПН. смотрим на какие склады
				Попытка
					Если спрКонтрПрава.ПолучитьПравоПользователя(текПользователь,"стрСпсСкладыПН",Склад) = 0 Тогда
						глНеПроводить(Контекст,"Вам запрещено проводить приход на склад " + Склад);
						Возврат;
					КонецЕсли;
				Исключение
				КонецПопытки;
			КонецЕсли;
			
			Если глПроверкаДублейСтрок(Контекст)=1 Тогда
				глНеПроводить(Контекст,"В документе строки с одинаковым товаром, но разной ценой!");
				Возврат;
			КонецЕсли;
			
		ИначеЕсли ВидОперации  = 1  Тогда //возврат
			Если спрКонтрПрава.ПолучитьПравоПользователя(текПользователь,"флПроводитьПНВозвр") = 0 Тогда
				глНеПроводить(Контекст,"Вам запрещено проводить возвратные накладные.");
				Возврат;
			Иначе
				Если спрКонтрПрава.ПолучитьПравоПользователя(текПользователь,"стрСпсСкладыВозврат",Склад) = 0 Тогда
					глНеПроводить(Контекст,"Вам запрещено проводить возвраты на склад " + Склад);
					Возврат;
				КонецЕсли;
				Если ПустоеЗначение(ПричинаВозвратаПок) = 1 Тогда
					глНеПроводить(Контекст,"Не заполнена причина возврата.");
					Возврат;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
		
	Если ОжидаемыеПоступления = 1 Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			проверитьОтклонениеЦены();
			Регистр.ОжидаемыеПоступления.ПривязыватьСтроку(НомерСтроки);
			Регистр.ОжидаемыеПоступления.ДвижениеПриход(Товар,ТекущийДокумент(),Контрагент,Количество*Коэффициент);
		КонецЦикла;
	Иначе
		Если этоГрупповаяОбработка = 0 Тогда
			Если ПроверкаШапки() = 0 Тогда
				глНеПроводить(Контекст); 
				Возврат;
			КонецЕсли;
			
			ВыбратьСтроки();
			Пока ПолучитьСтроку()=1 Цикл
				Если ПроверкаСтроки() = 0 Тогда
					глНеПроводить(Контекст); 
					Возврат;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		спФирмы = глПолучитьФирмы(Контекст);
		Если спФирмы.РазмерСписка()>0 Тогда
			ДвиженияВзаиморасчеты();
			ДвиженияДеньги();
			ДвиженияОстатки();
			ДвиженияПартии();
			Если ДвиженияПартииПоставщика()  = 0 Тогда
				глНеПроводить(Контекст); 
				Возврат;
			КонецЕсли;
		КонецЕсли; 
		ДвиженияЗаказПоставщику();
	КонецЕсли;
	
	Если этоГрупповаяОбработка = 0 Тогда
		АвторПровел = глПользователь;
		Если сканер = 1 Тогда
			дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"отгружен",1);
			дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"датаОтгрузки",ТекущаяДата());
			дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"времяОтгрузки",ТекущееВремя());
			СкладОтгрузки = Склад;
			СкладНеОтгрузки = 0;
			Отпустил = текПользователь.Сотрудник;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//======================================================================
Процедура ПриОтменеПроведенияДокумента()
	Если НЕ(НазваниеНабораПрав() = "Администратор") Тогда
		Если ВидОперации = 0 Тогда //приход
			Если спрКонтрПрава.ПолучитьПравоПользователя(,"флПроводитьПН") = 0 Тогда
				глНеПроводить(Контекст,"Вам запрещено отменять проведение приходных накладных.");
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
			
		ИначеЕсли ВидОперации  = 1  Тогда //возврат
			Если спрКонтрПрава.ПолучитьПравоПользователя(,"флПроводитьПНВозвр") = 0 Тогда
				глНеПроводить(Контекст,"Вам запрещено отменять проведение возвратных накладных.");
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
		КонецЕсли;
	конецЕсли;
КонецПроцедуры // ОтменаПроведения

спрКонтрПрава = СоздатьОбъект("КонтрагентыПрава");
