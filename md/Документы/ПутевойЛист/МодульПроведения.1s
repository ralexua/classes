Перем спФирмы;
// ===============================
Функция ПроверкаШапки()
	глВсеВыбрано = 1;
	глВыбранЛи(объектЗатрат,"Автомобиль");  
	Возврат глВсеВыбрано;
КонецФункции

// ===============================
Функция ПроверкаСтроки()
	глВсеВыбрано = 1;
	глВыбранЛи(РасхНакл ,"Накладная",НомерСтроки);
	Возврат глВсеВыбрано;
КонецФункции

Функция ПроверкаПрибыли()
	ДляПутевогоЛиста = СоздатьОбъект("ДляПутевогоЛиста");
	Прибыль = ДляПутевогоЛиста.ПолучитьПрибыльПоРнПутевогоЛиста(ТекущийДокумент());
	Если Прибыль < Маршрут.минимальнаяПрибыль Тогда
		Результат  = 0;
		Сообщить("Прибыль по РН путевого листа ниже минималльно допустимой.");
	Иначе
		Результат = 1;
	КонецЕсли;
	
	флПрибыльМеньшеНормы = Результат;

	Возврат Результат;
КонецФункции
  
//======================================================================
Функция ПолучитьВесРН(РН)
	масса = 0;	
	РН.ВыбратьСтроки();
	Пока РН.ПолучитьСтроку() = 1 Цикл
		текМасса = РН.Товар.Вес * РН.Коэффициент * РН.Количество;
		масса = масса + текМасса;
		Если РН.Товар.Вес = 0 Тогда
			Сообщить("У товара " + РН.Товар.Код + " " + РН.Товар +" не указан вес. Его вес не учтен в общей массе груза.");
		КонецЕсли;
	КонецЦикла;
	Возврат Окр(масса,2);
КонецФункции // ПолучитьВесРН

//======================================================================
Функция ПроверкаВеса()
	Если НазваниеНабораПрав() = "Администратор" Тогда
		Возврат 1;
	КонецЕсли;
	текРН = СоздатьОбъект("Документ." + РасхНакл.Вид());
	итогоВес = 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		текРН.НайтиДокумент(РасхНакл);
		итогоВес = итогоВес + ПолучитьВесРН(текРН.текущийДокумент());
	КонецЦикла;
	
	грузоподъемность = объектЗатрат.грузоподъемность * 1000; //в кг
	Если грузоподъемность = 0 Тогда
		тхт = "У автомобиля " + объектЗатрат + " не указана грузоподъемность.";
		Сообщить(тхт);
		спсМен = СоздатьОбъект("СписокЗначений");
		мен1 = гл_ПолучитьЗначениеДопКонстанты("отвПерегруз1");
		Если ПустоеЗначение(мен1) = 0 Тогда
			спсМен.ДобавитьЗначение(мен1);
		КонецЕсли;
		мен2 = гл_ПолучитьЗначениеДопКонстанты("отвПерегруз2");
		Если ПустоеЗначение(мен2) = 0 Тогда
			спсМен.ДобавитьЗначение(мен2);
		КонецЕсли;
		глРазослатьСообщение(спсМен,тхт + " " + ТекущийДокумент());
		Возврат 1;
	КонецЕсли;

	Если итогоВес - грузоподъемность > Константа.МаксимальныйПерегруз Тогда
		тхт = "Загрузка превышает максимально допустимую на " + (итогоВес - грузоподъемность);
		Предупреждение(тхт);
		спсМен = СоздатьОбъект("СписокЗначений");
		мен1 = гл_ПолучитьЗначениеДопКонстанты("отвПерегруз1");
		Если ПустоеЗначение(мен1) = 0 Тогда
			спсМен.ДобавитьЗначение(мен1);
		КонецЕсли;
		мен2 = гл_ПолучитьЗначениеДопКонстанты("отвПерегруз2");
		Если ПустоеЗначение(мен2) = 0 Тогда
			спсМен.ДобавитьЗначение(мен2);
		КонецЕсли;
		глРазослатьСообщение(спсМен,тхт + " " + ТекущийДокумент());
		//Возврат 0;
	КонецЕсли;
	Возврат 1;
КонецФункции // ПроверкаВеса

//-------------------------------------
Процедура ОбработкаПроведения()
	
	Если ДатаДок>РабочаяДата() Тогда
		глНеПроводить(Контекст,"Нельзя проводить документ будущей датой!");
		Возврат;
	КонецЕсли;
	
	Если ПроверкаШапки() = 0 Тогда
		глНеПроводить(Контекст); 
		Возврат;
	КонецЕсли;                      
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ПроверкаСтроки() = 0 Тогда
		КонецЕсли;
	КонецЦикла;	
	
	Если ПроверкаВеса() = 0 Тогда
		глНеПроводить(Контекст); 
		Возврат;
	КонецЕсли;
	
	
	Если ПроверкаПрибыли() = 0 Тогда
		//-ralex, 03-08-19 22:49
		//глНеПроводить(Контекст); 
		//Возврат;
		//-/ralex, 03-08-19 22:49
	КонецЕсли;                      
	
	
	РН = СоздатьОбъект("Документ");
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		РН.НайтиДокумент(РасхНакл);
		Если РН.Блокировка() = 1 Тогда
			Предупреждение("Документ " + РасхНакл + " открыт вами или другим пользователем. Необходимо закрыть " + РасхНакл +" и повторить попытку проведения.");
			глНеПроводить(Контекст); 
			Возврат;
		Иначе
			РН.флВклПутевойЛист = 1;
			РН.Записать();
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

//======================================================================
Процедура ОбработкаУдаленияПроведения()
	РН = СоздатьОбъект("Документ");
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		РН.НайтиДокумент(РасхНакл);
		Если РН.Блокировка() = 1 Тогда
			Предупреждение("Документ " + РасхНакл + " открыт вами или другим пользователем. Необходимо закрыть " + РасхНакл +" и повторить попытку проведения.");
			глНеПроводить(Контекст); 
			Возврат;
		Иначе
			РН.флВклПутевойЛист = 0;
			РН.Записать();
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры
