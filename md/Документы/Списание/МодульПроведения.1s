Перем спФирмы;
Перем ЭтоГрупповаяОбработка;
Перем тбОстРекл;
перем спсРекламация;

Функция ПолучитьСкладскоеМестоПоКоличеству(выбТовар,кво)
	выбМесто = ""; тзМест = 0;

	спсМест = дополненияТорговля.получитьСписокСкладскихМест(Товар,Склад,Единица,СортНач,ТекущийДокумент(),тзМест);
	Возврат тзМест.Итог("ОстатокТовара");
КонецФункции // ПолучитьСкладскоеМестоПоКоличеству

// ===============================
Функция ПроверкаШапки()
	глВсеВыбрано = 1;
	глВыбранЛи(Фирма,"Фирма");  
	глВыбранЛи(Склад,"Склад");
	
	//+ralex, 12-05-21 00:01
	Если ЭтоГрупповаяОбработка = 0 Тогда
		спОтбор = СоздатьОбъект("СписокЗначений");
		тбПартии = 0;
		ВремРег = СоздатьОбъект("Регистры");
		спОтбор.ДобавитьЗначение(Склад,"Склад");
		глРассчитатьОстаткиПартийПост(Контекст, ВремРег, спОтбор); 
		глСформироватьТаблицуПартийПоставщика(Контекст, ВремРег,0,спОтбор,тбПартии);
		
		Если флОткКонтрольПартийПоставщика = 0 Тогда
			ВыбратьСтроки();
			Пока ПолучитьСтроку()=1 Цикл
				стр = 0;
				Если тбПартии.найтиЗначение(Товар,стр,"Товар") = 1 Тогда
					
					Если ПартияПост.Выбран() = 0 Тогда
						Сообщить("в сторке " + НомерСтроки + " у товара не указана партия поставщика.","!!!");
						глВсеВыбрано = 0;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	Если ДокументОснование.Вид() = "Рекламация" Тогда 
			тбОстРекл = 0;
			спОтбор.ДобавитьЗначение(ДокументОснование.ДокументОснование,"ПрихДокумент");
			спОтбор.ДобавитьЗначение(ДокументОснование.Контрагент,"Поставщик");
			глРассчитатьОстаткиРекламаций(Контекст, ВремРег, спОтбор);
			глСформироватьТаблицуОстРекламации(Контекст, ВремРег ,спОтбор,тбОстРекл);
		КонецЕсли;
	КонецЕсли;
	//+/------------------------
	
	Возврат глВсеВыбрано;
КонецФункции

// ===============================
Функция ПроверкаСтроки()
	глВсеВыбрано = 1;
	глВыбранЛи(Товар,"Товар",НомерСтроки);
	Если глВсеВыбрано = 1 Тогда
		Если (Товар.ВидТовара = Перечисление.ВидыТоваров.Услуга) Тогда
			глТрассировка("В документе "+ПредставлениеВида() +" нельзя использовать услуги. Cтрока "+НомерСтроки+".",0);
			глВсеВыбрано = 0;
		КонецЕсли;		
	КонецЕсли;
	глВыбранЛи(Единица,"Единица",НомерСтроки);

	Если ЭтоГрупповаяОбработка = 0 Тогда
		Если ПустоеЗначение(Товар) = 0 Тогда
			Если Товар.тмцЗаблокирован = 1 Тогда
				Сообщить("В строке "+НомерСтроки+" выбран товар, заблокированный для отгрузки!","!");
				глВсеВыбрано = 0;
			КонецЕсли;
		КонецЕсли;

		Если (ПолучитьСкладскоеМестоПоКоличеству(Товар,Количество * Коэффициент) <> 0) или (ДополненияТорговля.ПолучитьПараметрГруппыСправочника(Товар,"флСкладскоеМесто",ДатаДок) = 1) Тогда
			Если (ПустоеЗначение(складскоеМесто) = 1) Тогда
				Сообщить("В строке "+НомерСтроки+" не указано складское место.","!!!");
				глВсеВыбрано = 0;
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;
	
	Возврат глВсеВыбрано;
КонецФункции
    
// ===============================
Процедура ДвиженияОстатки()

	ФлагПрихода = 0;
	ФлагВозврата = 0;
	ФлагПеремещения = 2;

	глИзменитьОстатки(Контекст, спФирмы, Склад, ФлагВозврата, ФлагПрихода, ,ФлагПеремещения,сортНач,сортКон);

КонецПроцедуры


                       
// ===============================
Процедура ДвиженияПартии()
	
	спОтбор = СоздатьОбъект("СписокЗначений");
	спСтатус = СоздатьОбъект("СписокЗначений");

	Если Склад.ВидСклада = Перечисление.ВидыСкладов.Розничный Тогда
		спСтатус.ДобавитьЗначение(РозницаКупленный);
		спСтатус.ДобавитьЗначение(РозницаПринятый);
	Иначе
		спСтатус.ДобавитьЗначение(Купленный);
		спСтатус.ДобавитьЗначение(Принятый);
		спСтатус.ДобавитьЗначение(ПринятыйБезПраваПередачи);
	КонецЕсли;
	спОтбор.Установить("Статус", спСтатус);
	
	ВремРег = СоздатьОбъект("Регистры");
	глРассчитатьОстаткиПартий(Контекст, ВремРег, спФирмы, 0, спОтбор);
	
	Для Инд=1 по спФирмы.РазмерСписка() Цикл
		текФирма = спФирмы.ПолучитьЗначение(Инд);
		
		Предпочтение = 0;
		тбПартии = 0;
		тбОстатки = 0;
		ИнвСтартегияПредпочтения  = 0;
		ИнвСтратегияПродажи = 0;
		
		глСформироватьТаблицуПартий(Контекст, ВремРег,текФирма, 0, спОтбор, Предпочтение, 
			тбПартии, тбОстатки, ИнвСтартегияПредпочтения, ИнвСтратегияПродажи);
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл
			
			Если ПустоеЗначение(текФирма)=1 Тогда
				ВУ = Товар.ВалютаУчета;
			Иначе	
				ВУ = Гривня;
			КонецЕсли;
			
			ВсегоСписать = Количество * Коэффициент;
			
			ОсталосьСписать = Количество * Коэффициент;
			
			НС=0;
			Если тбПартии.НайтиЗначение(НомерСтроки,НС,"НомерСтрокиДокумента")=1 Тогда
				тбПартии.ПолучитьСтрокуПоНомеру(НС);
			Иначе
				тбПартии.ВыбратьСтроки();
				тбПартии.ПолучитьСтроку();
			КонецЕсли;
			
			Пока тбПартии.НомерСтрокиДокумента = НомерСтроки Цикл			
				
				КонтрагентП = тбПартии.Контрагент;
				ПоставщикП = тбПартии.Поставщик;
				ПоставкаП = тбПартии.Поставка;
				ПрихДокументП = тбПартии.ПрихДокумент;
				СтатусП = тбПартии.Статус;
				
				НС =0;
				
				Если тбОстатки.НайтиЗначение(глПолучитьКлючТбОстатков(ПрихДокументП,ПоставкаП,Товар.Код),НС,"Ключ")=1 Тогда
					
					тбОстатки.ПолучитьСтрокуПоНомеру(НС);
					
					ОстатокТовара = тбОстатки.ОстатокТовара;
					
					Если ОстатокТовара = 0 Тогда
						Если тбПартии.ПолучитьСтроку()=0 Тогда
							Прервать;
						КонецЕсли;
						Продолжить;
					КонецЕсли;
					
					СписываемыйОстатокТовара = Мин(ОсталосьСписать, ОстатокТовара);
					
					КоэфСписания = СписываемыйОстатокТовара / ОстатокТовара;
					КоэфРеализации = СписываемыйОстатокТовара / ВсегоСписать;
					
					СписываемаяСтоимость = тбОстатки.Стоимость * КоэфСписания;
					СписываемаяПродСтоимость = тбОстатки.ПродСтоимость * КоэфСписания;
					СписываемыйНДС = тбОстатки.НДС * КоэфСписания;
					
					СписываемыйОборот = 0;
					СписываемыйНДСРасхода = 0;
					СписываемаяПрибыль = 0;
						                        					
					КодОперации = СписаниеИзлишков;
					
					Регистр.ПартииТоваров.ПривязыватьСтроку(НомерСтроки);
					
					// Списываем
					
					Регистр.ПартииТоваров.ДвижениеРасход(текФирма, Товар, СтатусП, КонтрагентП, ПоставщикП, 
						ПоставкаП, ПрихДокументП, СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость, 
						СписываемыйНДС, СписываемыйОборот, СписываемыйНДСРасхода, КодОперации, СписываемаяПрибыль);
					        						
					глУчестьСписание(тбОстатки,СписываемыйОстатокТовара,СписываемаяСтоимость,СписываемаяПродСтоимость,СписываемыйНДС,СписываемыйОборот,СписываемыйНДСРасхода,СписываемаяПрибыль);
					
					ОсталосьСписать = ОсталосьСписать - СписываемыйОстатокТовара;
				КонецЕсли;
				
				Если ОсталосьСписать = 0 Тогда
					Прервать;
				КонецЕсли;   
				
				Если тбПартии.ПолучитьСтроку()=0 Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла; 
			Если ОсталосьСписать > 0 Тогда
				глСообщитьОбОтсутствииПартии(Контекст,0, текФирма, Товар, НомерСтроки);
				//*ralex, 07-04-20 00:32
				//Если Константа.РазрешитьОтрицательныеОстаткиТоваров = Нет Тогда
				// -------- заменено на:
				Если (Константа.РазрешитьОтрицательныеОстаткиТоваров = Нет) и (НазваниеНабораПрав() <> "Администратор") Тогда
				//*/ralex, 07-04-20 00:32
					глНеПроводить(Контекст);
					Возврат;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла // строки документа
		
	КонецЦикла; // фирмы
КонецПроцедуры

Функция ДвиженияПартииПоставщика() 
	Если (сортКон <> КондиционныйТовар) Тогда
		спОтбор = СоздатьОбъект("СписокЗначений");
		тбПартии = 0;
		спОтбор.ДобавитьЗначение(Склад,"Склад");
		ВремРег = СоздатьОбъект("Регистры");
		глРассчитатьОстаткиПартийПост(Контекст, ВремРег, спОтбор); 
		глСформироватьТаблицуПартийПоставщика(Контекст, ВремРег,0,спОтбор,тбПартии);
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл
			Если ПартияПост.Выбран() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			ОсталосьСписать =  Количество * Коэффициент;
			
			НС=0;
			Если тбПартии.НайтиЗначение(ПартияПост,НС,"ПартияПост")=1 Тогда
				тбПартии.ПолучитьСтрокуПоНомеру(НС);
				Если тбПартии.Товар <> Товар Тогда
					Сообщить("Ошибка!!! В рег. ""Партии поставщика"" партия пост " + ПартияПост.Код + " " + ПартияПост.Владелец);
					Возврат 0;
				КонецЕсли;
			Иначе
				Сообщить("Для товара " + Товар + " нет остатка по партии поставщика " + ПартияПост);
				Возврат 0;
			КонецЕсли;
			
			Если ОсталосьСписать > тбПартии.ОстатокТовара Тогда
				Сообщить("Для товара " + Товар + " по партии поставщика остаток = " + тбПартии.Остаток + ". Не хватает " 
				+ (ОсталосьСписать - тбПартии.Остаток));
				Возврат 0;
			КонецЕсли;
			
			Регистр.ПартииПоставщика.Поставщик = тбПартии.Поставщик;
			Регистр.ПартииПоставщика.ПрихДокумент = тбпартии.ПрихДокумент;
			Регистр.ПартииПоставщика.ПривязыватьСтроку(НомерСтроки);
			Регистр.ПартииПоставщика.Товар = Товар;
			Регистр.ПартииПоставщика.ПартияПост = ПартияПост;	
			Регистр.ПартииПоставщика.ОстатокТовара = ОсталосьСписать;
			Регистр.ПартииПоставщика.ДвижениеРасходВыполнить();
		КонецЦикла;	
		Возврат 1;			
	ИначеЕсли (ВидСписания = Перечисление.ВидыСписания.ИзменениеСорта) и (сортКон = КондиционныйТовар) Тогда
		// Приходуем не проверяя:
		НомерСтрокиПоследнегоТовара = 1;
		
		Регистр.ПартииПоставщика.Поставщик = Контрагент;
		Регистр.ПартииПоставщика.ПрихДокумент = ТекущийДокумент();
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл
			Если ПустоеЗначение(ПартияПост) = 0 Тогда
				Регистр.ПартииПоставщика.ПривязыватьСтроку(НомерСтроки);
				Регистр.ПартииПоставщика.Товар = Товар;
				Регистр.ПартииПоставщика.ПартияПост = ПартияПост;	
				Регистр.ПартииПоставщика.Склад = Склад;	
				Регистр.ПартииПоставщика.ОстатокТовара =Количество * Единица.Коэффициент;
				Регистр.ПартииПоставщика.ДвижениеПриходВыполнить();
			КонецЕсли;
		КонецЦикла;	
		Возврат 1;			
	КонецЕсли;
КонецФункции

Процедура ДвиженияРекламации();
	Если ДокументОснование.Вид() <> "Рекламация" Тогда
		Возврат;
	КонецЕсли;
	спсРекламация = СоздатьОбъект("списокЗначений");

	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		НС = 0;
		тбОстРекл.ВыбратьСтроки();
		Пока тбОстРекл.ПолучитьСтроку() = 1 Цикл
			Если тбОстРекл.ДокРекламация = ДокументОснование Тогда
				Если тбОстРекл.Товар = Товар Тогда
					квоСписать = Мин(тбОстРекл.Кво, Количество*Коэффициент);
					тбОстРекл.Кво = тбОстРекл.Кво - квоСписать;
					Если квоСписать > 0 Тогда
						Регистр.Рекламации.Товар=Товар;
						Регистр.Рекламации.Поставщик = ДокументОснование.Контрагент;
						Регистр.Рекламации.ПриходнаяНакладная = ДокументОснование.ДокументОснование;
						Регистр.Рекламации.докРекламация = ДокументОснование;
						Регистр.Рекламации.Кво = квоСписать;
						Регистр.Рекламации.ДвижениеРасходВыполнить();
						Если спсРекламация.найтиЗначение(ДокументОснование) = 0 Тогда
							спсРекламация.ДобавитьЗначение(ДокументОснование);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры               


//-------------------------------------
Процедура ОбработкаПроведения()
	ЭтоГрупповаяОбработка = Макс(ГрупповаяОбработка(),глГрупповоеПроведение);
	Если ДатаДок>РабочаяДата() Тогда
		глНеПроводить(Контекст,"Нельзя проводить документ будущей датой!");
		Возврат;
	КонецЕсли;
	
	Если глПроверкаДублейСтрок(Контекст)=1 Тогда
		глНеПроводить(Контекст,"В документе строки с одинаковым товаром, но разной ценой!");
		Возврат;
	КонецЕсли;
	
	Если ПроверкаШапки() = 0 Тогда
		глНеПроводить(Контекст); 
		Возврат;
	КонецЕсли;                      
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ПроверкаСтроки() = 0 Тогда
			глНеПроводить(Контекст); 
			Возврат;
		КонецЕсли;
	КонецЦикла;		                                 
	
	спФирмы = глПолучитьФирмы(Контекст);
	
	Если спФирмы.РазмерСписка()>0 Тогда
		ДвиженияОстатки();
		Если ВидСписания <> Перечисление.ВидыСписания.ИзменениеСорта Тогда //при изм. сорта партию не списываем
			ДвиженияПартии();
		//*ralex, 01-03-23 00:41
		//ИначеЕсли СортНач = КондиционныйТовар Тогда //для некондици партии поставщика списали при переводе в неликвид.
		// -------- заменено на:
		Иначе //для некондици партии поставщика списали при переводе в неликвид.
		//*/------------------------
			Если ДвиженияПартииПоставщика() = 0 Тогда
				глНеПроводить(Контекст); 
				Возврат;
			КонецЕсли;
		КонецЕсли;		
		ДвиженияРекламации();
		ФабрикаСобытий.Событие_списаниеПоРегРекламация(спсРекламация);
	КонецЕсли;
	
КонецПроцедуры


