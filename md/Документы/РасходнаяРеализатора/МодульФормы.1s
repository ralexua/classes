//*****************************************************************************
// Описание переменных 
Перем СписокДействий,новый;
Перем СтарыйКонтрагент;
Перем СтараяДата;          
Перем НачальнаяДатаДокумента;
Перем ОстаткиТоваров, РезервыТоваров, ОбщРег;

Процедура УстДоступностьКнопок() Далее
//*****************************************************************************
// "служебные" функции и процедуры 

//======================================================================
Процедура УстКомандОК()
	Если НазваниеНабораПрав() = "Администратор" Тогда
		СтрокаДействийФормы = "Записать Провести? Закрыть";
	Иначе
		СтрокаДействийФормы = "Записать? Закрыть";
	КонецЕсли;
КонецПроцедуры // УстКомандОК() #Записать Провести? Закрыть

Процедура УстКомандыПровести()
	Если НазваниеНабораПрав() = "Администратор" Тогда
		СтрокаДействийФормы = "Записать Провести?";
	Иначе
		СтрокаДействийФормы = "Записать?";
	КонецЕсли;
КонецПроцедуры // УстКомандОК() #Записать Провести? Закрыть

//*****************************************************************************
Функция ЗаголовокФормы() 
	Перем Заголовок, Название;

	Если ВидОперации =0  Тогда
		Заголовок = "Расходная реализатора ";
		Название ="Накладная №";
	Иначе
		Заголовок = "Расходная реализатора  (возврат)";
		Название = "Накладная (возврат) №";
	КонецЕсли;
	
	Заголовок = Заголовок + глЗаголовок(Контекст);
	
	Форма.Заголовок(Заголовок);     
	Возврат Название;
КонецФункции //ЗаголовокФормы
                            
// ===============================
Процедура УстДоступность()
	Если Договор.Выбран()=1 Тогда
		Дост=0;
	Иначе
		Дост=1;
	КонецЕсли;   
	Если названиенабораправ()<>"Администратор" Тогда
	    Если распечатан=1 Тогда
	        форма.толькопросмотр(1);
	    КонецЕсли;
	КонецЕсли;	
	Форма.спВидТорговли.Доступность(Дост);
	Форма.тВидТорговли.Доступность(Дост);
КонецПроцедуры             

// ===============================
Процедура ИзмДоговор()
	Если ПустоеЗначение(Договор)=0 Тогда
		Если Договор.ВидТорговли<> Перечисление.ВидыТорговли.Консигнация Тогда
			глТрассировка("Можно выбирать только договор консигнации !!!",1);
			Договор=0;
		КонецЕсли;                              
	КонецЕсли;
КонецПроцедуры                        

//******************************************************************************
Процедура ОбновитьНадписи()
	Форма.ТекстВалюты.Заголовок(глСтрокаВалюты(Контекст));
	Форма.ТекстОснования.Заголовок(СокрП(Основание));
	Форма.ТекстПорядокОплаты.Заголовок(глСтрокаПорядокОплаты(Контекст));
КонецПроцедуры
                                       
// ===============================
Процедура ИзмВидТорговли()
	ВидТорговли = спВидТорговли.ПолучитьЗначение(спВидТорговли.ТекущаяСтрока());
КонецПроцедуры

                        
// ===============================
Процедура ВыбранВидТорговли()
	спВидТорговли.ТекущаяСтрока(спВидТорговли.НайтиЗначение(ВидТорговли));
КонецПроцедуры

//******************************************************************************
Процедура ИзмДатаДок()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
КонецПроцедуры

//******************************************************************************
Функция Итого()
	// Показ итоговых сумм по документу
	Перем Результат,СуммаБезНДС, СуммаСНДС, СуммаНДС;
	СуммаБезНДС = Итог("СуммаБезНДС");
	СуммаСНДС = Итог("СуммаСНДС");
	СуммаНДС = СуммаСНДС - СуммаБезНДС;
	Результат = ?(СуммаБезНДС =0,"","Сумма="+ глФРМ(СуммаБезНДС, Валюта, 1))+
	            ?(СуммаНДС = 0,""," НДС=" + глФРМ(СуммаНДС, Валюта, 1))+ 
	            ?(СуммаСНДС= 0,""," Всего=" + глФРМ(СуммаСНДС, Валюта, 1));
	Возврат Результат;
КонецФункции

//*****************************************************************************
// функции и процедуры, вызываемые из формул элементов диалога

//******************************************************************************
Процедура Взаиморасчеты()
	глПоказатьДолг(Контекст, Контрагент, "Продажа");
КонецПроцедуры
                             
// ===============================
Процедура Подбор()
	Варианы= СоздатьОбъект("СписокЗначений");
	Варианы.ДобавитьЗначение("по каталогу");
	Варианы.ДобавитьЗначение("по прайсу");
	Результат = 0;
	Если Варианы.ВыбратьЗначение(,,Результат,,1)=1 Тогда
	    Если Результат = 1 Тогда
			глПодбор(Контекст,"номенклатура","ДляПодбора")
		ИначеЕсли Результат = 2 Тогда
			глПодбор(Контекст,"прайс_лист","ДляПодбора")
	    КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

//*****************************************************************************
Процедура ВыборФирмы()
	// по кнопке редактирования параметров фирмы в докумнете
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ИнформацияОфирме", КонтекстДокумента);
	ОбновитьНадписи();
КонецПроцедуры	
	
//*****************************************************************************
Процедура ВыборОплаты()
	// Процедура по кнопке редактирования параметров оплаты в докумнете
	Перем КонтекстДокумента;
	Перем СтараяКатегорияЦен;
	СтараяКатегорияЦен = КатегорияЦен;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ИнформацияОценах", КонтекстДокумента);
	Если СтараяКатегорияЦен <> КатегорияЦен Тогда
	    // изменилась категория цен
		// перерисуем
		Если ПустоеЗначение(КонтекстПодбора) = 0 Тогда
		    КонтекстПодбора.Форма.Обновить();
		КонецЕсли;
	КонецЕсли;
	ОбновитьНадписи();
КонецПроцедуры	

//*****************************************************************************
Процедура ИзмКонтрагент() // Процедура при выборе Контрагента в докумнете
    Если Контрагент.Выбран()=1 Тогда                                      
		Если СтарыйКонтрагент <> Контрагент Тогда
			// изменили Контрагента
			// очистим договор
			Договор = ПолучитьПустоеЗначение("Документ.Договор");
			Если Константа.ПодставлятьОсновнойДоговор = Да Тогда
				// подставим договор по умолчанию                                 
				Если ПустоеЗначение(Контрагент.ОсновнойДоговорТорг) = 0 Тогда
					Если Фирма = Контрагент.ОсновнойДоговорТорг.Фирма Тогда
						Договор = Контрагент.ОсновнойДоговорТорг;
					КонецЕсли;	
				КонецЕсли;	
			КонецЕсли;
		    Если ПустоеЗначение(Контрагент.КатегорияЦен) = 0 Тогда
		    	КатегорияЦен = Контрагент.КатегорияЦен;
		    КонецЕсли;
		КонецЕсли;
	Иначе
		//Не выбран Контрагент - не имеет смысла показывать глубину и дату оплаты и договор
		Договор = ПолучитьПустоеЗначение("Документ.Договор");
	КонецЕсли;
	// Формирует и показывает дату оплаты
	СтарыйКонтрагент = Контрагент;
	УстДоступность();
	ОбновитьНадписи();
КонецПроцедуры	

//******************************************************************************
Процедура ПриВводеНаОсновании(ДокОснование)
	Перем ВидОсн;
	
	Перем ВремСклад, ВремВалюта;
	Перем ВремДата_Курса, ВремКурс;
	Перем ВремКонтрагент, ВремДоговор;
	
	Если ПустоеЗначение(ДокОснование) = 1 Тогда
		Возврат;
	КонецЕсли;
	
	ВидОсн = ДокОснование.Вид();
	
	Если (ВидОсн="ПриходнаяРеализатора") Тогда
		Валюта=ДокОснование.Валюта;
		Дата_Курса=ДокОснование.Дата_Курса;
		Курс=ДокОснование.Курс;
		Глубина = Контрагент.ГлубинаКредитаПоставщика.Получить(ДатаДок);
	КонецЕсли;

	
	глЗаполнитьШапкуНаОсн(Контекст,ДокОснование);     
	ВыбранВидТорговли();
	
	ИзмДоговор();
	                             
	Если ВидОсн <> "Договор" Тогда
		глСкопироватьТовСостав(Контекст,ДокОснование);    
		Если Константа.НачальноеЗаполнение = Да тогда	
			// проверяем, сколько товара у нас осталось  
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 цикл         
				Если Товар.ВидТовара = Перечисление.ВидыТоваров.Услуга Тогда
					Продолжить;
				КонецЕсли;
				Фрм = ?(ТипУчета = Упр,глПустаяФирма,Фирма);
				КвоОстПр = Регистр.ПартииТоваров.СводныйОстаток(Фрм,Товар,Принятый,,,,ДокументОснование,"ОстатокТовара"); 
				КвоОстПрБезПрПер = Регистр.ПартииТоваров.СводныйОстаток(Фрм,Товар,ПринятыйБезПраваПередачи,,,,ДокументОснование,"ОстатокТовара"); 
				Если Количество = КвоОстПр/Коэффициент+КвоОстПрБезПрПер/Коэффициент Тогда
					Продолжить;				
				Иначе
					Количество = КвоОстПр/Коэффициент+КвоОстПрБезПрПер/Коэффициент; 
				КонецЕсли;	
				глВыч_суммы_накл(Контекст);
			КонецЦикла;	
			// удаляем сторки с количеством 0
			ТаблЧ = СоздатьОбъект("ТаблицаЗначений");
			ВыгрузитьТабличнуюЧасть(ТаблЧ);
			КСтр = ТаблЧ.КоличествоСтрок();
			Пока КСтр <> 0 цикл
				ТаблЧ.ПолучитьСтрокуПоНомеру(КСтр);				
			Если (ТаблЧ.Количество = 0) И (ТаблЧ.Товар.ВидТовара <> Перечисление.ВидыТоваров.Услуга) Тогда
					ТаблЧ.УдалитьСтроку();
					КСтр = ТаблЧ.КоличествоСтрок();
				Иначе
					КСтр = КСтр-1;
				КонецЕсли;	  
			КонецЦикла;	
			ЗагрузитьТабличнуюЧасть(ТаблЧ);
			Если КоличествоСтрок() = 0 тогда
				глТрассировка("При заполнении на основании "+ДокументОснование+" табличная часть оказалась пустая.",0);
			КонецЕсли;	
		КонецЕсли;	     
	КонецЕсли;

КонецПроцедуры
	
//*****************************************************************************
Процедура ВыборОснования()
	// Процедура по кнопке редактирования основания в докумнете
	Перем КонтекстДокумента; 
	СтарДоговор = Договор;
	СтарОснование = ДокументОснование;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", КонтекстДокумента);
	Если ((ДокументОснование <> СтарОснование) и (ПустоеЗначение(ДокументОснование) = 0)) тогда
		ПриВводеНаОсновании(ДокументОснование);	
	ИначеЕсли Договор<>СтарДоговор тогда
		ПриВводеНаОсновании(Договор);			
	КонецЕсли;	
	ИзмДоговор();
	// Могли изменить Контрагента	
	ОбновитьНадписи();         
	УстДоступность();
КонецПроцедуры	

//******************************************************************************
//*ralex, 24-06-20 23:15
//Процедура Печать(Знач КолЭкз = 0)
//	Если (названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер") ИЛИ (названиенабораправ()="МенеджерТоварищ") Тогда
//		Если новый=1 Тогда
//		    возврат;
//		КонецЕсли;
//	КонецЕсли;                       
//	Если (названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер")  ИЛИ (названиенабораправ()="МенеджерТоварищ") Тогда
//		Распечатан=1; 		
//		провести();			
//	    //записать();
//		Если проведен()=0 Тогда
//		СТАТУСВОЗВРАТА(0);    
//		КонецЕсли;
//		форма.толькопросмотр(1);
//		Если выбран()=1 Тогда
//		    новый=0;
//		КонецЕсли;		
//	КонецЕсли;	
//	Таб = СоздатьОбъект("Таблица");   
//	
//	ВП = Валюта;  
//	КурсПечати = Курс;                     
//	ДатаКурса = Дата_Курса;
//	Если ПустоеЗначение(Контрагент) = 0 Тогда
//		Если Контрагент.ВидКонтрагента <> Перечисление.ВидыКонтрагентов.Нерезидент Тогда
//			Если ТипУчета > 0 Тогда
//				ВП = Гривня;  
//				КурсПечати = глКурсДляВалюты(ВП,ДатаДок);                     
//				ДатаКурса = ДатаДок;
//			КонецЕсли;	
//		КонецЕсли;	
//	КонецЕсли;	
//	ПечФорма = "Накладная";
//	
//	Язык = глЯзык(ПечФорма); 	
//	
//	Таб.ИсходнаяТаблица(ПечФорма);
//	
//	глУстПропись(Валюта,Язык);
//	
//	Фирма.ИспользоватьДату(ДатаДок,1);
//	Таб.ВывестиСекцию("Шапка");
//	ВСоставе = 0;
//	Ном = 1;           
//	ВыбратьСтроки();
//	Пока ПолучитьСтроку()=1 Цикл                
//		Если Набор.Выбран()=1 Тогда
//			Если ПустоеЗначение(ВСоставе)=1 Тогда
//				Таб.ВывестиСекцию("ВСоставе");
//				ВСоставе=Набор;
//			ИначеЕсли ВСоставе<>Набор Тогда
//				Таб.ВывестиСекцию("ВСоставе");
//				ВСоставе=Набор;
//			КонецЕсли;
//		Иначе
//			Если ПустоеЗначение(ВСоставе)=0 Тогда
//				ВСоставе=0;
//			КонецЕсли;
//		КонецЕсли;
//		ПечЦена = глФРМ(глПересчет(ЦенаБезНДС,Валюта,Курс,ВП,ДатаДок),ВП,0);
//		ПечСумма = глФРМ(глПересчет(СуммаБезНДС,Валюта,Курс,ВП,ДатаДок),ВП,0);
//		Таб.ВывестиСекцию("Строка");
//		Ном = Ном+1;
//	КонецЦикла;             
//	ПечБезНДС = глФРМ(глПересчет(Итог("СуммаБезНДС"),Валюта,Курс,ВП,ДатаДок),ВП,0);
//	ПечНДС = глФРМ(глПересчет(Итог("СуммаСНДС") - Итог("СуммаБезНДС"),Валюта,Курс,ВП,ДатаДок),ВП,0);
//	ПечСНДС = глФРМ(глПересчет(Итог("СуммаСНДС"),Валюта,Курс,ВП,ДатаДок),ВП,0);	
//	ПечНДСПропись = " "+Формат(глПересчет(Итог("СуммаСНДС") - Итог("СуммаБезНДС"),Валюта,Курс,ВП,ДатаДок),"Ч12.2")+" "+ВП.Кратко;
//	ПечСНДСПропись = глСуммаПрописью(глПересчет(Итог("СуммаСНДС"),Валюта,Курс,ВП,ДатаДок),ВП);  
//	Таб.ВывестиСекцию("Дно");
//	Если КолЭкз = 0 тогда
//		Таб.ТолькоПросмотр(1);
//		Если (названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер")  ИЛИ (названиенабораправ()="МенеджерТоварищ")Тогда
//			Таб.Защита(1);
//		Иначе
//			Таб.Защита(Константа.ФлагЗащитыТаблиц);
//		КонецЕсли;                       			
//		Таб.Опции(0,0,,);
//		Таб.Показать("ПЕЧАТЬ: Расходная накладная на реализацию","");
//	Иначе                            		
//		Таб.ПараметрыСтраницы(,,,,,,,,,глОтладка,,);
//		Таб.КоличествоЭкземпляров(?(КолЭкз>0,КолЭкз,Константа.ПечКолЭкзНакладнойПриБыстройПродаже));
//		Таб.Напечатать(1);
//	КонецЕсли;	   
//		Распечатан=1;
//		записать();			
//КонецПроцедуры
// -------- заменено на:
Процедура Печать(Знач КолЭкз = 0)
	Если (названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер") ИЛИ (названиенабораправ()="МенеджерТоварищ") Тогда
		Если новый=1 Тогда
		    возврат;
		КонецЕсли;
	КонецЕсли;                       
	Если (названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер")  ИЛИ (названиенабораправ()="МенеджерТоварищ") Тогда
		Распечатан=1; 	
		Записать();
		
		форма.толькоПросмотр(1);
		УстДоступностьКнопок();
		Если выбран()=1 Тогда
		    новый=0;
		КонецЕсли;		
	КонецЕсли;	
	Таб = СоздатьОбъект("Таблица");   
	
	ВП = Валюта;  
	КурсПечати = Курс;                     
	ДатаКурса = Дата_Курса;
	Если ПустоеЗначение(Контрагент) = 0 Тогда
		Если Контрагент.ВидКонтрагента <> Перечисление.ВидыКонтрагентов.Нерезидент Тогда
			Если ТипУчета > 0 Тогда
				ВП = Гривня;  
				КурсПечати = глКурсДляВалюты(ВП,ДатаДок);                     
				ДатаКурса = ДатаДок;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;	
	ПечФорма = "Накладная";
	
	Язык = глЯзык(ПечФорма); 	
	
	Таб.ИсходнаяТаблица(ПечФорма);
	
	глУстПропись(Валюта,Язык);
	
	Фирма.ИспользоватьДату(ДатаДок,1);
	Таб.ВывестиСекцию("Шапка");
	ВСоставе = 0;
	Ном = 1;           
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл                
		Если Набор.Выбран()=1 Тогда
			Если ПустоеЗначение(ВСоставе)=1 Тогда
				Таб.ВывестиСекцию("ВСоставе");
				ВСоставе=Набор;
			ИначеЕсли ВСоставе<>Набор Тогда
				Таб.ВывестиСекцию("ВСоставе");
				ВСоставе=Набор;
			КонецЕсли;
		Иначе
			Если ПустоеЗначение(ВСоставе)=0 Тогда
				ВСоставе=0;
			КонецЕсли;
		КонецЕсли;
		ПечЦена = глФРМ(глПересчет(ЦенаБезНДС,Валюта,Курс,ВП,ДатаДок),ВП,0);
		ПечСумма = глФРМ(глПересчет(СуммаБезНДС,Валюта,Курс,ВП,ДатаДок),ВП,0);
		Таб.ВывестиСекцию("Строка");
		Ном = Ном+1;
	КонецЦикла;             
	ПечБезНДС = глФРМ(глПересчет(Итог("СуммаБезНДС"),Валюта,Курс,ВП,ДатаДок),ВП,0);
	ПечНДС = глФРМ(глПересчет(Итог("СуммаСНДС") - Итог("СуммаБезНДС"),Валюта,Курс,ВП,ДатаДок),ВП,0);
	ПечСНДС = глФРМ(глПересчет(Итог("СуммаСНДС"),Валюта,Курс,ВП,ДатаДок),ВП,0);	
	ПечНДСПропись = " "+Формат(глПересчет(Итог("СуммаСНДС") - Итог("СуммаБезНДС"),Валюта,Курс,ВП,ДатаДок),"Ч12.2")+" "+ВП.Кратко;
	ПечСНДСПропись = глСуммаПрописью(глПересчет(Итог("СуммаСНДС"),Валюта,Курс,ВП,ДатаДок),ВП);  
	Таб.ВывестиСекцию("Дно");
	Если КолЭкз = 0 тогда
		Таб.ТолькоПросмотр(1);
		Если (названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер")  ИЛИ (названиенабораправ()="МенеджерТоварищ")Тогда
			Таб.Защита(1);
		Иначе
			Таб.Защита(Константа.ФлагЗащитыТаблиц);
		КонецЕсли;                       			
		Таб.Опции(0,0,,);
		Таб.Показать("ПЕЧАТЬ: Расходная накладная на реализацию","");
	Иначе                            		
		Таб.ПараметрыСтраницы(,,,,,,,,,глОтладка,,);
		Таб.КоличествоЭкземпляров(?(КолЭкз>0,КолЭкз,Константа.ПечКолЭкзНакладнойПриБыстройПродаже));
		Таб.Напечатать(1);
	КонецЕсли;	   
		//Распечатан=1;
		//записать();			
КонецПроцедуры
//*/ralex, 24-06-20 23:15

// ===============================
Процедура ЗаполнитьСпВидТорговли()
	
	спВидТорговли.ДобавитьЗначение(Перечисление.ВидыТорговли.Консигнация,Строка(Перечисление.ВидыТорговли.Консигнация));

КонецПроцедуры


//*****************************************************************************
// Предопределенные процедуры

//******************************************************************************
Процедура ВводНового(Скопирован) //Предопределенная процедура
    новый=1;   
	распечатан=0;

	глЗаполнитьШапку(Контекст);
	Если Скопирован=1 Тогда	//копирование документа
		Возврат;
	КонецЕсли;


	ДатаДок=РабочаяДата();
	Если ПустоеЗначение(глАктивныйДоговор) = 0 Тогда
		Контрагент = глАктивныйДоговор.Владелец;
		Договор = глАктивныйДоговор;
		КатегорияЦен = Контрагент.КатегорияЦен;
		СтарыйКонтрагент = Контрагент;
	Иначе
		Контрагент=Константа.ОсновнойПокупатель;
		ИзмКонтрагент();
	КонецЕсли;
	                                           
	Если Форма.Параметр="Возврат" Тогда                          
		ВидОперации = 1;
		Если ПустоеЗначение(Контрагент) = 1 Тогда
			Контрагент=Константа.ОсновнойПоставщик;
		КонецЕсли;
		Если ПустоеЗначение(Контрагент) = 0 Тогда
			ВремКатегорияЦен = Контрагент.КатегорияЦенПоставщика;
		КонецЕсли;
		Валюта=Константа.ОсновнаяВалютаЗакупки;
	Иначе
		ВидОперации = 0;
		Если ПустоеЗначение(Контрагент) = 1 Тогда
			Контрагент=Константа.ОсновнойПокупатель;
		КонецЕсли;
		Если ПустоеЗначение(Контрагент) = 0 Тогда
			КатегорияЦен = Контрагент.КатегорияЦен;
		КонецЕсли;
		Валюта=Константа.ОсновнаяВалютаПродажи;
	КонецЕсли;
	
	Дата_Курса = ДатаДок;
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта = Гривня;
	КонецЕсли;
	Курс=глКурсДляВалюты(Валюта,Дата_Курса);

	Если ПустоеЗначение(КатегорияЦен)=1 Тогда
		КатегорияЦен = Автор.КатегорияЦен;
	КонецЕсли;

	ВидТорговли = Перечисление.ВидыТорговли.Консигнация;	
	ВыбранВидТорговли();
КонецПроцедуры

//******************************************************************************
Процедура ВводНаОсновании(ДокОснование) //Предопределенная процедура
    Перем ВидОсн;
    новый=1;   
	распечатан=0;
	
	ВидОсн = ДокОснование.Вид();

	Если ВидОсн = "ПриходнаяРеализатора" Тогда
		Если ДокОснование.ВидОперации = 1 Тогда
		    СтатусВозврата(0);
			Предупреждение("Расходную реализатора нельзя выписывать"+РазделительСтрок+
			               "на основании возвратной приходной реализатора !");
			Возврат;
		КонецЕсли;
		ВидОперации = 1;
	Иначе
		ВидОперации = 0;
	КонецЕсли;

	Автор = глПользователь;
	ДатаДок=РабочаяДата();
	ЗасчитыватьОплатуПоСлужДоговору = 0;
	
	ПриВводеНаОсновании(ДокОснование);
	
	Если ПустоеЗначение(КатегорияЦен)=1 Тогда
		Если ПустоеЗначение(Контрагент)=0 Тогда
			КатегорияЦен = Контрагент.КатегорияЦен;    
		КонецЕсли;	    
	КонецЕсли;          
	
	Если ПустоеЗначение(КатегорияЦен)=1 Тогда
		КатегорияЦен = Автор.КатегорияЦен;
	КонецЕсли;
	
КонецПроцедуры          

Процедура ПриНачалеРедактированияСтроки()
	Если ПустоеЗначение(Предпочтение)=1 Тогда
		Форма.Предпочтение.НазначитьТип("Справочник.Контрагенты");
		Предпочтение=ПустоеЗначение("Справочник.Контрагенты");
	КонецЕсли;
КонецПроцедуры

Процедура ПриРедактированииНовойСтроки()
	Форма.Предпочтение.НазначитьТип("Справочник.Контрагенты");
	Предпочтение=ПустоеЗначение("Справочник.Контрагенты");
КонецПроцедуры
    
// ===============================
Процедура УстДоступностьКнопок()
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кнОК.Доступность(0);
		Форма.кнПровести.Доступность(0);
		//-ralex, 24-06-20 23:25
		//Форма.кнДействия.Доступность(0);
		//-/ralex, 24-06-20 23:25
		Форма.кнВалюта.Доступность(0);
		Форма.кнПодбор.Доступность(0);
		
		Форма.кнОснование.Доступность(0);
	Иначе                                                                               
		Если ВидОперации = 1 Тогда
			Форма.кнПодбор.Доступность(0);
		Иначе                      
			Форма.кнПодбор.Доступность(1);
		КонецЕсли;
		Форма.КнопкаПоУмолчанию("кнОК");
	КонецЕсли;
КонецПроцедуры

//*****************************************************************************
Процедура ПриОткрытии() //Предопределенная процедура
	НачальнаяДатаДокумента = ДатаДок;
	Если новый<>1 тогда
		новый=0;
	КонецЕсли;  	
	//Распечатан = гл_Распечатан(Контекст);
	глПроверкаРазрешенияРедактирования(Контекст);
	
	глУстановкаРеквизитаТип(Контекст);
		//+ralex, 26-06-20 12:24
	ПриЗаписиПерепроводить(0);
		//+/ralex, 26-06-20 12:24

	//-ralex, 24-06-20 23:22
	//УстДоступностьКнопок();
	//глУстВидимостьЦен(Контекст);
	//    ОбновитьНадписи();        
	//УстДоступность();
	//-/ralex, 24-06-20 23:22

	СтараяДата = ДатаДок;
	Если (названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер") ИЛИ (названиенабораправ()="МенеджерТоварищ") Тогда
		Если распечатан=1 Тогда
		    //*ralex, 24-06-20 23:17
		    //форма.кнподбор.доступность(0);			
		    // -------- заменено на:
			форма.толькопросмотр(1);	
		    форма.кнподбор.доступность(0);			
		    //*/ralex, 24-06-20 23:17
		КонецЕсли;								
		ЕСли (проведен()=1) ИЛИ (ПометкаУдаления()=1) тогда		
			форма.толькопросмотр(1);	
		КонецЕсли;		
		форма.распечатан.доступность(0);
	Иначе
		форма.распечатан.доступность(1);
	КонецЕсли;
	  
	УстДоступностьКнопок();
	глУстВидимостьЦен(Контекст);
    ОбновитьНадписи();        
	УстДоступность();

	Если ПустоеЗначение(Форма.Параметр)=0 Тогда
		Если ТипЗначенияСтр(Форма.Параметр)="Строка" Тогда
			Парам = ВРег(Форма.Параметр);
			Если Лев(Парам,13)="БЫСТРАЯПЕЧАТЬ" Тогда
				//Если вызвано для "быстрой печати"
				Парам = Сред(Парам,14);
				ПозРазделит = Найти(Парам,"=");
				Если ПозРазделит<=0 Тогда
					КолЭкз = Число(Парам);
				Иначе
					КолЭкз = Число(Лев(Парам,ПозРазделит-1));
				КонецЕсли;
				Если КолЭкз>0 Тогда				
					Печать(КолЭкз);
				КонецЕсли;
				СтатусВозврата(0); 
				Возврат;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;
	
	Если ПустоеЗначение(ВидТорговли)=1 Тогда
		ВидТорговли = Перечисление.ВидыТорговли.Консигнация;
		ВыбранВидТорговли();
	КонецЕсли;	
	Если Форма.ТолькоПросмотр() = 1 Тогда
		СписокДействий = глПолучитьСписокДействий("
		|СтруктураПодчиненности,
		|ДвиженияДокумента,
		|ВводНаОсновании,
		|ОткрытьВЖурнале,
		|Подчиненные,
		|ИзмКомментария");
	Иначе
		СписокДействий = глПолучитьСписокДействий("
		|ТоварныйСостав,
		|ОбновлениеЦен,
		|СтруктураПодчиненности,
		|ДвиженияДокумента,
		|ВводНаОсновании,
		|ОткрытьВЖурнале,
		|Подчиненные,
		|ИзмКомментария");
	КонецЕсли;

КонецПроцедуры //При открытии

// ===============================
Процедура ВыборПредпочтения()
	спОтбор = СоздатьОбъект("СписокЗначений");
	
	спСтатусы=СоздатьОбъект("СписокЗначений");
	спСтатусы.ДобавитьЗначение(Купленный);
	спСтатусы.ДобавитьЗначение(Принятый);
	спСтатусы.ДобавитьЗначение(ПринятыйБезПраваПередачи);	
	спОтбор.Установить("Статус",спСтатусы);
	
	спОтбор.Установить("Контекст",глВзятьКонтекст(Контекст));  
	
	ОткрытьФормуМодально("Справочник.Контрагенты.ВыборПредпочтения", спОтбор);
КонецПроцедуры


//*****************************************************************************
Процедура ПриНачалеВыбораЗначения(Рекв,Флаг)
	Флаг=0;
	Если (Рекв="Фирма") или (Рекв="Склад") Тогда
		ВыборФирмы();
	ИначеЕсли Рекв="КатегорияЦен" Тогда
	    ВыборОплаты();
	ИначеЕсли Рекв="Предпочтение" Тогда
	    ВыборПредпочтения();
	Иначе
		Флаг=1;
	КонецЕсли;
КонецПроцедуры
//*****************************************************************************
Процедура ОбработкаПодбора(Выб) //Предопределенная процедура
	глПриОбработкеПодбора(Выб,Контекст);
КонецПроцедуры //Обработка подбора

//*****************************************************************************
Процедура ПриЗаписи() //Предопределенная процедура
	Если глМожноЗаписатьДокумент(Контекст)=0 Тогда
		СтатусВозврата(0);                        
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли; 
	новый=0;	
	ГруппаПользователей = Автор.Родитель;
КонецПроцедуры
                  
// ===============================
Процедура ПриЗакрытии()
КонецПроцедуры	                           

Форма.Товар.ВыполнятьФормулуТолькоПриИзменении(1);

//*****************************************************************************
//Инициализирум список действий по кнопке "Действия"
//-ralex, 24-06-20 23:19
//СписокДействий = глПолучитьСписокДействий("
//    |ТоварныйСостав,
//	|ОбновлениеЦен,
//	|СтруктураПодчиненности,
//	|ДвиженияДокумента,
//	|ВводНаОсновании,
//	|ОткрытьВЖурнале,
//	|Подчиненные,
//	|ИзмКомментария");
//    
//-/ralex, 24-06-20 23:19
ЗаполнитьСпВидТорговли();
ВыбранВидТорговли();
