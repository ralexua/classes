Перем спФирмы;
Перем ЭтоГрупповаяОбработка;

// ===============================
Функция ПроверкаШапки()
	глВсеВыбрано = 1;
	глВыбранЛи(Фирма,"Фирма");  
	глВыбранЛи(Контрагент,"Контрагент");
	глВыбранЛи(ВидТорговли,"Вид торговли");
	глВыбранЛи(КатегорияЦен,"Категория цен");	
	глВыбранЛи(Договор,"Договор");
	глВыбранЛи(Склад,"Склад");		
	глВыбранЛи(Валюта,"Валюта");
	Возврат глВсеВыбрано;
КонецФункции

// ===============================
Функция ПроверкаСтроки()
	глВсеВыбрано = 1;
	глВыбранЛи(Товар,"Товар",НомерСтроки);
	Если глВсеВыбрано = 1 Тогда
		Если (Товар.ВидТовара = Перечисление.ВидыТоваров.Услуга) Тогда
			глТрассировка("В документе "+ПредставлениеВида() +" нельзя использовать услуги. Cтрока "+НомерСтроки+".",0);
			глВсеВыбрано = 0;
		КонецЕсли;		
	КонецЕсли;
	глВыбранЛи(Единица,"Единица",НомерСтроки);
	//+ralex, 18-12-20 03:15
	Если ЭтоГрупповаяОбработка = 0 Тогда
		Если ПустоеЗначение(Товар) = 0 Тогда
			Если Товар.тмцЗаблокирован = 1 Тогда
				Сообщить("В строке "+НомерСтроки+" выбран товар, заблокированный для отгрузки!","!");
				глВсеВыбрано = 0;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//+/ralex, 18-12-20 03:15

	Возврат глВсеВыбрано;
КонецФункции

// ===============================
Процедура ДвиженияОстатки()
	
	ФлагПрихода = 0;
	ФлагВозврата = ВидОперации;
	
	глИзменитьОстатки(Контекст, спФирмы, Склад, ФлагВозврата, ФлагПрихода);
	
КонецПроцедуры

// ===============================
Процедура ДвиженияПартии() 

	спОтбор = СоздатьОбъект("СписокЗначений");
	спСтатус = СоздатьОбъект("СписокЗначений");
	
	Если ВидОперации = 0  Тогда
		ФлагВозврата = 0;
		спСтатус.ДобавитьЗначение(Купленный);
		спСтатус.ДобавитьЗначение(Принятый);
		спОтбор.Установить("Статус", спСтатус);
	Иначе
		ФлагВозврата = 1;
		спСтатус.ДобавитьЗначение(Принятый);
		спОтбор.Установить("Статус", спСтатус);
		Если ПустоеЗначение(ДокументОснование)=0 Тогда
			спОтбор.Установить("Контрагент", ДокументОснование.Контрагент);
			спОтбор.Установить("Поставщик", ДокументОснование.Контрагент);
			спОтбор.Установить("Поставка", ДокументОснование);
			спОтбор.Установить("ПрихДокумент", ДокументОснование);
		Иначе
			спОтбор.Установить("Контрагент",Контрагент);
			спОтбор.Установить("Поставщик",Контрагент);
		КонецЕсли;
	КонецЕсли;
	
	ВремРег = СоздатьОбъект("Регистры");
	глРассчитатьОстаткиПартий(Контекст, ВремРег, спФирмы, ФлагВозврата, спОтбор);
	
	Для Инд=1 по спФирмы.РазмерСписка() Цикл
		текФирма = спФирмы.ПолучитьЗначение(Инд);
		
		Если ПустоеЗначение(текФирма)=1 Тогда
			МетодРасчетаСебестоимости = Константа.МетодРасчетаСебестоимостиУправленческогоУчета;
		Иначе
			текФирма.ИспользоватьДату(ДатаДок);
			МетодРасчетаСебестоимости = текФирма.МетодРасчетаСебестоимостиФинансовогоУчета;
		КонецЕсли;                                   
		
		Если МетодРасчетаСебестоимости = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
		    глТрассировка(Шаблон(?(ПустоеЗначение(текФирма)=1,"Управленческий учёт.","Фирма [текФирма].")+" Для работы учета по консигнации необходим партионный учёт."),0);
			глНеПроводить(Контекст);
			Возврат;
		КонецЕсли;
		
		
		Предпочтение = 0;
		тбПартии = 0;
		тбОстатки = 0;
		ИнвСтартегияПредпочтения  = ФлагВозврата;
		ИнвСтратегияПродажи = ФлагВозврата;
		
		глСформироватьТаблицуПартий(Контекст, ВремРег,текФирма, ФлагВозврата, спОтбор, Предпочтение, 
		тбПартии, тбОстатки, ИнвСтартегияПредпочтения, ИнвСтратегияПродажи);
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл
			
			Если ПустоеЗначение(текФирма)=1 Тогда
				ВУ = Товар.ВалютаУчета;
			Иначе	
				ВУ = Гривня;
			КонецЕсли;
			
			Если ФлагВозврата = 0 Тогда
				
				ВсегоСписать = Количество * Коэффициент;				
				ОсталосьСписать = ВсегоСписать;
				
				ВсегоСуммаСНДС = глПересчет(СуммаСНДС,Валюта,Курс,ВУ,Дата_курса);
				ВсегоСуммаБезНДС = глПересчет(СуммаБезНДС,Валюта,Курс,ВУ,Дата_курса);
				ОсталосьСуммаСНДС = ВсегоСуммаСНДС;
				ОсталосьСуммаБезНДС = ВсегоСуммаБезНДС;
				
				НС=0;
				Если тбПартии.НайтиЗначение(НомерСтроки,НС,"НомерСтрокиДокумента")=1 Тогда
					тбПартии.ПолучитьСтрокуПоНомеру(НС);
				Иначе
					тбПартии.ВыбратьСтроки();
					тбПартии.ПолучитьСтроку();
				КонецЕсли;
				
				Пока тбПартии.НомерСтрокиДокумента = НомерСтроки Цикл			
					
					КонтрагентП = тбПартии.Контрагент;
					ПоставщикП = тбПартии.Поставщик;
					ПоставкаП = тбПартии.Поставка;
					ПрихДокументП = тбПартии.ПрихДокумент;
					СтатусП = тбПартии.Статус;
					
					НС =0;
					Если тбОстатки.НайтиЗначение(глПолучитьКлючТбОстатков(ПрихДокументП,ПоставкаП,Товар.Код),НС,"Ключ")=1 Тогда
						
						тбОстатки.ПолучитьСтрокуПоНомеру(НС);
						
						ОстатокТовара = тбОстатки.ОстатокТовара;
						                
						Если ОстатокТовара = 0 Тогда
							Если тбПартии.ПолучитьСтроку()=0 Тогда
								Прервать;
							КонецЕсли;
							Продолжить;
						КонецЕсли;
						
						СписываемыйОстатокТовара = Мин(ОсталосьСписать, ОстатокТовара);
						
						КоэфСписания = СписываемыйОстатокТовара / ОстатокТовара;
						КоэфРеализации = СписываемыйОстатокТовара / ВсегоСписать;
						
						СписываемаяСтоимость = тбОстатки.Стоимость * КоэфСписания;
						СписываемаяПродСтоимость = тбОстатки.ПродСтоимость * КоэфСписания;
						
						СписываемыйНДС = тбОстатки.НДС * КоэфСписания;
						
						СписываемыйОборот = 0;
						СписываемыйНДСРасхода = 0;
						
						Если СтатусП = Купленный Тогда
							КодОперации = ПередачаТовараНаРеализацию;
						ИначеЕсли СтатусП = Принятый Тогда
							КодОперации = ПередачаПринятогоТовараНаРеализацию;
						КонецЕсли;
						
						// списываем
						
						глПровестиПартию(Контекст, 0, ФлагВозврата, текФирма, Товар, СтатусП, КонтрагентП, ПоставщикП, 
							ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
							СписываемыйНДС, СписываемыйОборот, СписываемыйНДСРасхода, КодОперации, ДокументОснование,0);
												
						глУчестьСписание(тбОстатки,СписываемыйОстатокТовара,СписываемаяСтоимость,СписываемаяПродСтоимость,СписываемыйНДС,СписываемыйОборот,СписываемыйНДСРасхода,0);
						
						// передаем на реализацию
						Если СтатусП = Купленный Тогда
							СтатусП = ОтданныйКупленный;
						ИначеЕсли СтатусП = Принятый Тогда
							СтатусП = ОтданныйПринятый;
						КонецЕсли;
						    
						КонтрагентП = Контрагент;
						ПрихДокументП = ТекущийДокумент();
						
						Если СписываемыйОстатокТовара = ОсталосьСписать Тогда
							СписываемаяПродСтоимость = ОсталосьСуммаСНДС;
						Иначе
							СписываемаяПродСтоимость = ВсегоСуммаСНДС * КоэфРеализации;
						КонецЕсли;
						
						ОсталосьСуммаСНДС = ОсталосьСуммаСНДС - СписываемаяПродСтоимость;
						
						глПровестиПартию(Контекст, 1, ФлагВозврата, текФирма, Товар, СтатусП, КонтрагентП, ПоставщикП, 
							ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
							СписываемыйНДС, СписываемыйОборот, СписываемыйНДСРасхода, КодОперации, ДокументОснование,0);
						
						ОсталосьСписать = ОсталосьСписать - СписываемыйОстатокТовара;
					КонецЕсли;
					
					Если ОсталосьСписать = 0 Тогда
						Прервать;
					КонецЕсли;   
					
					Если тбПартии.ПолучитьСтроку()=0 Тогда
						Прервать;
					КонецЕсли;
				КонецЦикла; 
				
				Если ОсталосьСписать > 0 Тогда
					глСообщитьОбОтсутствииПартии(Контекст,ФлагВозврата, текФирма, Товар, НомерСтроки);
					//*ralex, 07-04-20 00:30
					//Если Константа.РазрешитьОтрицательныеОстаткиТоваров = Нет Тогда
					//	глНеПроводить(Контекст);
					//	Возврат;
					// -------- заменено на:
					Если (Константа.РазрешитьОтрицательныеОстаткиТоваров = Нет) и (НазваниеНабораПрав() <> "Администратор") Тогда
						глНеПроводить(Контекст);
						Возврат;
					//*/ralex, 07-04-20 00:30
					Иначе
						СписываемыйОстатокТовара = ОсталосьСписать;
						КоэфСписания = СписываемыйОстатокТовара / ВсегоСписать;
						СписываемаяСтоимость = ВсегоСуммаБезНДС * КоэфСписания;
						СписываемаяПродСтоимость = ВсегоСуммаСНДС * КоэфСписания;
						СписываемыйНДС = (ВсегоСуммаСНДС - ВсегоСуммаБезНДС) * КоэфСписания;
						
						СтатусП = Купленный;						
						КонтрагентП = 0;
						ПоставщикП = 0;
						ПоставкаП = 0;
						ПрихДокументП = ТекущийДокумент();
						
						СписываемыйОборот = 0;
						СписываемыйНДСРасхода = 0;
						
						КодОперации = ПередачаТовараНаРеализацию;
						
						глПровестиПартию(Контекст, 0, ФлагВозврата, текФирма, Товар, СтатусП, КонтрагентП, ПоставщикП, 
							ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
							СписываемыйНДС, СписываемыйОборот, СписываемыйНДСРасхода, КодОперации,,0);
						
						КонтрагентП = Контрагент;
						ПоставкаП = ТекущийДокумент();
						СтатусП = ОтданныйКупленный;
						СписываемаяПродСтоимость = ОсталосьСуммаСНДС;
						
						глПровестиПартию(Контекст, 1, ФлагВозврата, текФирма, Товар, СтатусП, КонтрагентП, ПоставщикП, 
							ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
							СписываемыйНДС, СписываемыйОборот, СписываемыйНДСРасхода, КодОперации,,0);
						
						глСообщитьОСозданииПартии(Товар, СтатусП, СписываемыйОстатокТовара);
					КонецЕсли;	
				КонецЕсли; // ОсталосьСписать > 0
				
			Иначе // ФлагВозврата = 1
				                                 
				ВсегоСписать = Количество * Коэффициент;		
				ОсталосьСписать = Количество * Коэффициент;
				
				НС=0;
				Если тбПартии.НайтиЗначение(Товар,НС,"Товар")=1 Тогда
					тбПартии.ПолучитьСтрокуПоНомеру(НС);
				Иначе
					тбПартии.ВыбратьСтроки();
					тбПартии.ПолучитьСтроку();
				КонецЕсли;
				
				
				Пока тбПартии.Товар = Товар Цикл			
					
					КонтрагентП = тбПартии.Контрагент;
					ПоставщикП = тбПартии.Поставщик;
					ПоставкаП = тбПартии.Поставка;
					ПрихДокументП = тбПартии.ПрихДокумент;
					СтатусП = тбПартии.Статус;
					
					НС =0;
					Если тбОстатки.НайтиЗначение(глПолучитьКлючТбОстатков(ПрихДокументП,ПоставкаП,Товар.Код),НС,"Ключ")=1 Тогда
						
						тбОстатки.ПолучитьСтрокуПоНомеру(НС);
						
						ОстатокТовара = тбОстатки.ОстатокТовара;
						
						Если ОстатокТовара = 0 Тогда
							Если тбПартии.ПолучитьСтроку()=0 Тогда
								Прервать;
							КонецЕсли;
							Продолжить;
						КонецЕсли;
						
						СписываемыйОстатокТовара = Мин(ОсталосьСписать, ОстатокТовара);
						
						КоэфСписания = СписываемыйОстатокТовара / ОстатокТовара;
						КоэфРеализации = СписываемыйОстатокТовара / ВсегоСписать;
						
						СписываемаяСтоимость = тбОстатки.Стоимость * КоэфСписания;
						СписываемаяПродСтоимость = тбОстатки.ПродСтоимость * КоэфСписания;
						СписываемыйНДС = тбОстатки.НДС * КоэфСписания;
						
						СписываемыйОборот = 0;
						СписываемыйНДСРасхода = 0;
						
						КодОперации = ВозвратТовараПринятогоНаРеализацию;
						
						глПровестиПартию(Контекст, 0, ФлагВозврата, текФирма, Товар, СтатусП, КонтрагентП, ПоставщикП, 
							ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
							СписываемыйНДС, СписываемыйОборот, СписываемыйНДСРасхода, КодОперации,,0);						
						
						глУчестьСписание(тбОстатки,СписываемыйОстатокТовара,СписываемаяСтоимость,СписываемаяПродСтоимость,СписываемыйНДС,СписываемыйОборот,СписываемыйНДСРасхода,0);
						
						ОсталосьСписать = ОсталосьСписать - СписываемыйОстатокТовара;
					КонецЕсли;
					
					Если ОсталосьСписать = 0 Тогда
						Прервать;
					КонецЕсли;   
					
					Если тбПартии.ПолучитьСтроку()=0 Тогда
						Прервать;
					КонецЕсли;
				КонецЦикла; 
				
				Если ОсталосьСписать > 0 Тогда 
					глСообщитьОбОтсутствииПартии(Контекст,ФлагВозврата, текФирма, Товар, НомерСтроки);
					//*ralex, 07-04-20 00:33
					//Если Константа.РазрешитьОтрицательныеОстаткиТоваров = Нет Тогда
					// -------- заменено на:
					Если (Константа.РазрешитьОтрицательныеОстаткиТоваров = Нет) и (НазваниеНабораПрав() <> "Администратор") Тогда
					//*/ralex, 07-04-20 00:33
						глНеПроводить(Контекст);
						Возврат;
					Иначе
						СписываемыйОстатокТовара = ОсталосьСписать;
						КоэфСписания = СписываемыйОстатокТовара / ВсегоСписать;
						СписываемаяСтоимость = глПересчет(СуммаБезНДС * КоэфСписания,Валюта,Курс,ВУ,Дата_курса);
						СписываемаяПродСтоимость = глПересчет(СуммаСНДС * КоэфСписания,Валюта,Курс,ВУ,Дата_курса);
						СписываемыйНДС = глПересчет((СуммаСНДС - СуммаБезНДС) * КоэфСписания,Валюта,Курс,ВУ,Дата_курса);
						
						СтатусП = Принятый;
						КонтрагентП = Контрагент;
						ПоставщикП = Контрагент; 
						Если ПустоеЗначение(ДокументОснование)=0 Тогда
							ПоставкаП = ДокументОснование;
							ПрихДокументП = ДокументОснование;
						Иначе
							ПоставкаП = 0;
							ПрихДокументП = ТекущийДокумент();
						КонецЕсли;
						
						СписываемыйОборот = 0;
						СписываемыйНДСРасхода = 0;
						
						КодОперации = ВозвратТовараПринятогоНаРеализацию;
						                                       
						глПровестиПартию(Контекст, 0, ФлагВозврата, текФирма, Товар, СтатусП, КонтрагентП, ПоставщикП, 
							ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
							СписываемыйНДС, СписываемыйОборот, СписываемыйНДСРасхода, КодОперации,,0);
						
						глСообщитьОСозданииПартии(Товар, СтатусП, СписываемыйОстатокТовара);
						
					КонецЕсли;	
				КонецЕсли; // ОсталосьСписать > 0
			КонецЕсли;
		КонецЦикла; // строки документа		
	КонецЦикла;
	
КонецПроцедуры

//-------------------------------------
Процедура ОбработкаПроведения()
	ЭтоГрупповаяОбработка = Макс(ГрупповаяОбработка(),глГрупповоеПроведение);

	Если НазваниеНабораПрав() <> "Администратор" Тогда
		Сообщить("У вас нет прав проводить этот документ.");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	Если ДатаДок>РабочаяДата() Тогда
		глНеПроводить(Контекст,"Нельзя проводить документ будущей датой!");
		Возврат;
	КонецЕсли;
	
	Если глПроверкаДублейСтрок(Контекст)=1 Тогда
		глНеПроводить(Контекст,"В документе строки с одинаковым товаром, но разной ценой!");
		Возврат;
	КонецЕсли;
	
	Если ПроверкаШапки() = 0 Тогда
		глНеПроводить(Контекст); 
		Возврат;
	КонецЕсли;                      
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ПроверкаСтроки() = 0 Тогда
			глНеПроводить(Контекст); 
			Возврат;
		КонецЕсли;
	КонецЦикла;	
	
	спФирмы = глПолучитьФирмы(Контекст);
	
	Если спФирмы.РазмерСписка()>0 Тогда
		
		ДвиженияОстатки();
		
		ДвиженияПартии();
		
	КонецЕсли;
	
КонецПроцедуры
