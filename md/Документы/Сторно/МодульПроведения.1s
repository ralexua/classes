Перем спФирмы;
// ===============================
Функция ПроверкаШапки()
	глВсеВыбрано = 1;
	глВыбранЛи(ДокументОснование,"Документ основание");
	Возврат глВсеВыбрано;
КонецФункции
                                      
// ===============================
Процедура СторноДвижений(ДокОсн, РегДвиж, НазвРег)
	
	МДРег = Метаданные.Регистр(НазвРег);
	
	спИзмерения = СоздатьОбъект("СписокЗначений");
	Для Инд=1 По МДРег.Измерение() Цикл
		спИзмерения.ДобавитьЗначение(МДРег.Измерение(Инд).Идентификатор);
	КонецЦикла;
	спРесурсы = СоздатьОбъект("СписокЗначений");
	Для Инд=1 По МДРег.Ресурс() Цикл
		спРесурсы.ДобавитьЗначение(МДРег.Ресурс(Инд).Идентификатор);
	КонецЦикла;
	спРеквизиты = СоздатьОбъект("СписокЗначений");
	Для Инд=1 По МДРег.Реквизит() Цикл
		спРеквизиты.ДобавитьЗначение(МДРег.Реквизит(Инд).Идентификатор);
	КонецЦикла;
	
	Рег = СоздатьОбъект("Регистр."+НазвРег);
	Рег.ВыбратьДвиженияДокумента(ДокОсн);
	Пока Рег.ПолучитьДвижение()=1 Цикл
		// копируем измерения
		Для Инд=1 по спИзмерения.РазмерСписка() Цикл
			ИмяАтрибута = спИзмерения.ПолучитьЗначение(Инд,);
			ЗнАтр = Рег.ПолучитьАтрибут(ИмяАтрибута);
			РегДвиж.УстановитьАтрибут(ИмяАтрибута,ЗнАтр);
		КонецЦикла;
		// копируем ресурсы со "сторно"
		Для Инд=1 по спРесурсы.РазмерСписка() Цикл
			ИмяАтрибута = спРесурсы.ПолучитьЗначение(Инд,);
			ЗнАтр = Рег.ПолучитьАтрибут(ИмяАтрибута);
			РегДвиж.УстановитьАтрибут(ИмяАтрибута, - ЗнАтр);
		КонецЦикла;                     
		
		// копируем реквизиты, некоторые со "сторно"
		Для Инд=1 по спРеквизиты.РазмерСписка() Цикл
			ИмяАтрибута = спРеквизиты.ПолучитьЗначение(Инд,);			
			ЗнАтр = Рег.ПолучитьАтрибут(ИмяАтрибута);
			Если Найти("СуммаСНДС_НУ,Оборот,НДСРасхода",ИмяАтрибута)>0 Тогда
				РегДвиж.УстановитьАтрибут(ИмяАтрибута, - ЗнАтр);
			Иначе	
				РегДвиж.УстановитьАтрибут(ИмяАтрибута, ЗнАтр);
			КонецЕсли;
		КонецЦикла;                 
		
		// двигаем регистр
		Если МДРег.ТипРегистра = "Обороты" Тогда
			РегДвиж.ДвижениеВыполнить();
		ИначеЕсли МДРег.ТипРегистра = "Остатки" Тогда
			Если Рег.Приход = 1 Тогда
			    РегДвиж.ДвижениеПриходВыполнить();
			Иначе
				РегДвиж.ДвижениеРасходВыполнить();
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

//-------------------------------------
Процедура ОбработкаПроведения()
	
	Если ДатаДок>РабочаяДата() Тогда
		глНеПроводить(Контекст,"Нельзя проводить документ будущей датой!");
		Возврат;
	КонецЕсли;
	
	Если ПроверкаШапки() = 0 Тогда
		глНеПроводить(Контекст); 
		Возврат;
	КонецЕсли;
	
	СторноДвижений(ДокументОснование, Регистр.ВзаиморасчетыПокупателей , "ВзаиморасчетыПокупателей");
	СторноДвижений(ДокументОснование, Регистр.ВзаиморасчетыПоставщиков , "ВзаиморасчетыПоставщиков");
	СторноДвижений(ДокументОснование, Регистр.Деньги , "Деньги");
	СторноДвижений(ДокументОснование, Регистр.ОстаткиТоваров , "ОстаткиТоваров");
	СторноДвижений(ДокументОснование, Регистр.ПартииТоваров , "ПартииТоваров");
	СторноДвижений(ДокументОснование, Регистр.РезервыТоваров , "РезервыТоваров");
	СторноДвижений(ДокументОснование, Регистр.ВозвратыВзаиморасчетов , "ВозвратыВзаиморасчетов");
	СторноДвижений(ДокументОснование, Регистр.ВозвратыПартий , "ВозвратыПартий");
	
КонецПроцедуры


