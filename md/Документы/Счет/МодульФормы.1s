//*****************************************************************************
// Описание переменных 
Перем ДатаОплаты,новый;
Перем СписокДействий;
Перем СтарыйКонтрагент;
Перем СтараяДата;
Перем РезервыТоваров;
Перем НачальнаяДатаДокумента;
Перем стНеликвид,стСорт;
Перем спрКонтрПрава;
Перем стТовар; 
перем текФрейм;
Перем ЗаказДвери;
Перем разрешеныСкидки;
перем спсАтрибутов,тхтПБ;
Перем ОтправленоНаЕмаил Экспорт; //на какой емаил отправили письмо
Перем ФормаРасш;
Перем текКоммерческое;
Перем процентСкидки,итогоСуммаСкидки; //используется при печати. 

//для печати 
Перем печЦена,печКвоМ2,печСумма,тхтВсегоБезНДС,печБезНДДС,ПечНДС,печСНДС,печСНДСПропись,долгТек,ПечСкидка,ПечЦенаБезСкидкиМ2;
Перем шСтр1,шСтр2,шСтр3,шСтр4,едИзмМ2,итВес,печБезНДС,ПечНДСПропись,ПечЦенаМ2,Ном,ПечЦенаБезСкидки,тхтСкидка;

Функция НайтиКоммерческое() Далее
Процедура ИзмКонтрагент(флПодтвержден = 0) Далее// Процедура при выборе Контрагента в документе

//работа с мышью и текстом на форме
//======================================================================
Процедура ПриНажатииЛевойКнопки(текСостояние,гор,верт,фл)
	Попытка
		текАтр = ФормаРасш.ПолучитьАтрибутПоКоординатам(гор,верт);
		ид = текАтр.Идентификатор;
		Если ид = "тКоммерческое" Тогда
			фл = 0;
			текКоммерческое = НайтиКоммерческое(); 
			конт = 0;
			Если ТипЗначения(текКоммерческое) <> 12 Тогда
				Если Выбран() = 0 Тогда
					Предупреждение("Счет должен быть записан.");
					Возврат;
				КонецЕсли;
				ОткрытьФорму("Документ.КоммерческоеПредложение",конт,ТекущийДокумент());
			Иначе
				//предполаганм что указан какой-то документ
				ОткрытьФорму(текКоммерческое,конт);
			КонецЕсли;
			Окна = СоздатьОбъект("Окна");
			Окна.НаПереднийПлан(конт.форма);
		КонецЕсли;
	Исключение
	КонецПопытки;
КонецПроцедуры

Функция ПоставитьЗадачуВCRM()
	//спсПарам = СоздатьОбъект("Структура");
	//спсПарам.Вставить("Заголовок", " " + ТекущийДокумент());
	//спсПарам.Вставить("Описание", СокрЛП(ОписаниеЗадачи));
	//спсПарам.Вставить("ДатаНачала", ДатаДок);
	//спсПарам.Вставить("ДатаКонца", срокИсполненияЗадачи);
	//спсПарам.Вставить("users_id", СотрудникЗадачи);
	//спсПарам.Вставить("конт", глВернутьКонтекст(Контекст));
	//
	//API_CRM = СоздатьОбъект("API_CRM");
	//рез = API_CRM.ПоставитьЗадачу_API(спсПарам);
	//Если рез <> 0 Тогда
	//	id_задачиВ_CRM = СокрЛП(id_задачиВ_CRM) + ?(ПустаяСтрока(id_задачиВ_CRM) = 1,"",",") + рез;
	//КонецЕсли;
	//Если СтрДлина(id_задачиВ_CRM) <> 0 Тогда
	//	ЕстьЗадачаВCRM = 1;
	//	Записать();
	//КонецЕсли;
	//Возврат рез;  //если о то задача не поставлена
КонецФункции // ПоставитьЗадачуВCRM()

//Процедура ОтправитьТаблицуЕмаил(еТабл) Далее
//*****************************************************************************
// "служебные" функции и процедуры 
//======================================================================
Функция получитьРазрешениеНаСкидки()	
	Если спрКонтрПрава.ПроверитьНеобходимостьПодтвержденияСмс(Контекст,,0) = 0 Тогда
		разрешеныСкидки = 1; //для контрагента не требуется подтверждение СМС
	КонецЕсли;
	Возврат ?(разрешеныСкидки = 1,1,подтвержденСМС);
КонецФункции //получитьРазрешениеНаСкидки()

Процедура ВывестиQRCodeСтройбум(ОбъектКартинка)
	Сервис.НарисоватьШтрихкод(ОбъектКартинка,58,"https://stroibum.com.ua",0);
КонецПроцедуры

//======================================================================
Функция ПолучитьНомерКартыПБДляОплаты()
	Счета = СоздатьОбъект("Справочник.НашиДенежныеСчета");
	Счета.ИспользоватьВладельца(Фирма);
	Счета.ВыбратьЭлементы();
	Пока Счета.ПолучитьЭлемент()=1 Цикл
		Если Счета.ПометкаУдаления()=1 Тогда
			Продолжить;
		КонецЕсли;
		Если Счета.флКартаПБ = 0 Тогда
			Продолжить;
		КонецЕсли;
		Возврат СокрЛП(Счета.БанкСчет);
	КонецЦикла;
	Возврат 0;
КонецФункции // ПолучитьНомерКартыПБДляОплаты

Функция ПолучитьКод_QR_ПБ_ДляОплаты()
	Счета = СоздатьОбъект("Справочник.НашиДенежныеСчета");
	Счета.ИспользоватьВладельца(Фирма);
	Счета.ВыбратьЭлементы();
	Пока Счета.ПолучитьЭлемент()=1 Цикл
		Если Счета.ПометкаУдаления()=1 Тогда
			Продолжить;
		КонецЕсли;
		Если ПустаяСтрока(Счета.кодПБ) = 1 Тогда
			Продолжить;
		КонецЕсли;
		Возврат СокрЛП(Счета.кодПБ);
	КонецЦикла;
	Возврат 0;
КонецФункции // ПолучитьНомерКартыПБДляОплаты

//*ralex, 05-01-23 12:26
//Процедура ВывестиQRCodeОплата(ОбъектКартинка)
//	номерСчета = ПолучитьНомерКартыПБДляОплаты();
//	Если номерСчета = 0 Тогда
//		тхтПБ = "";
//		Возврат;
//	КонецЕсли;
//	суммаКОплате = Итог("СуммаСНДС");
//	
//	тхтПБ = "оплата ПБ";
//	стрОплата = Шаблон("https://next.privat24.ua/money-transfer/form/{""form"":{""receiver"":{""source"":""manual"",""number"":""[номерСчета]""},""amount"":""[суммаКОплате]"",""currency"":""UAH""}}");
//	//стрОплата = "https://next.privat24.ua/money-transfer/form/%7B%22form%22:%7B%22receiver%22:%7B%22source%22:%22manual%22,%22number%22:%22" + 
//	//номерСчета + "%22%7D,%22amount%22:%22" + суммаКОплате + "%22,%22currency%22:%22UAH%22%7D%7D";
//	Сервис.НарисоватьШтрихкод(ОбъектКартинка,58,стрОплата,0);
//КонецПроцедуры
// -------- заменено на:
Процедура ВывестиQRCodeОплата(ОбъектКартинка)
	кодДляОплаты = ПолучитьКод_QR_ПБ_ДляОплаты();
	Если кодДляОплаты = 0 Тогда
		тхтПБ = "";
		Возврат;
	КонецЕсли;
	
	тхтПБ = "оплата ПБ";
	Сервис.НарисоватьШтрихкод(ОбъектКартинка,58,кодДляОплаты,0);
КонецПроцедуры
//*/------------------------

////======================================================================
////0 -нет подтверждения а оно нужно, 1 - не нужно подтверждение
//Функция ПроверитьНаличиеПодтвержденияСМС()
//	Если (КатегорияЦен <> Константа.РозничнаяКатегорияЦен) и (Неликвид = 0) Тогда
//		Если (спрКонтрПрава.ПроверитьНеобходимостьПодтвержденияСмс(Контекст,,0) = 1)  Тогда
//			Предупреждение("Категория цен не соответствует клиенту.",1);
//			Возврат 0;
//		КонецЕсли;
//	КонецЕсли;
//	Возврат 1;
//КонецФункции // ПроверитьНаличиеПодтвержденияСМС

//======================================================================
//открываем спр "Контрагенты с отбором по списку найденых контрагентов с указанным номером
Процедура ПоискПоТелефону()
	перем стр;
	Если ВвестиСтроку(стр,"введите номер телефона или его часть",18,) = 0 Тогда
		Возврат;
	КонецЕсли;
	допТорг = СоздатьОбъект("дополненияТорговля");
	тз = допТорг.НайтиКонтрагентаПоНомеруТелефона(стр);
	Если тз = 0 Тогда
		Предупреждение("Контрагент с номером " + сокрЛП(стр) + " не найден.");
		Возврат;
	КонецЕсли;
	спс = СоздатьОбъект("СписокЗначений");
	тз.выгрузить(спс,,,"Контрагент");
	ОткрытьПодбор("Справочник.Контрагенты","ДляВыбора",спс,0);
КонецПроцедуры // ПоискПоТелефону

Функция НайтиКоммерческое()
	Перем текКоммерческое;
	текКоммерческое = "создать комм. предложение";
	Если Выбран() = 1 Тогда
		док = СоздатьОбъект("Документ");
		док.ВыбратьПодчиненныеДокументы(,,ТекущийДокумент());
		Пока док.ПолучитьДокумент() = 1 Цикл
			Если док.ПометкаУдаления() = 1 Тогда
				Продолжить;
			КонецЕсли;
			Если док.Вид() = "КоммерческоеПредложение" Тогда
				текКоммерческое = док.ТекущийДокумент();
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Возврат текКоммерческое;
КонецФункции

//======================================================================
// ===============================
Функция НайтиЗаказДвери()
	Перем текЗаказДвери;
	Если Выбран() = 1 Тогда
		док = СоздатьОбъект("Документ");
		док.ВыбратьПодчиненныеДокументы(,,ТекущийДокумент());
		Пока док.ПолучитьДокумент() = 1 Цикл
			Если док.Вид() = "ЗаказДвери" Тогда
				текЗаказДвери = док.ТекущийДокумент();
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Возврат текЗаказДвери;
КонецФункции

Процедура Врезка()
	текЗаказДвери = НайтиЗаказДвери();
	конт =  глВернутьКонтекст(Контекст);
	Если ПустоеЗначение(текЗаказДвери) = 0 Тогда
		ОткрытьФорму(текЗаказДвери,конт);
	Иначе
		Если Выбран() = 0 Тогда
			Если Вопрос("В начале документ должен быть записан. Записать?",4) <> 6 Тогда
				Возврат;
			Иначе
				Записать();
			КонецЕсли;
		КонецЕсли;
		ОткрытьФорму("Документ.ЗаказДвери",конт,ТекущийДокумент());
	КонецЕсли;
КонецПроцедуры // Врезка

//======================================================================
Процедура ПередатьДокументНаОтправку()
	ОтправленоНаЕмаил = "";
	_email = СоздатьОбъект("_email");
	Расш = _email.создатьСписокПараметров(Контекст,Контрагент.АдресПолучателя,1,"pdf");
	ТаблДок = текФрейм.ПанельИнструментов.Документ;
	_email.ОтправкаПисьма(Расш,ТаблДок);
	Если ПустаяСтрока(ОтправленоНаЕмаил) = 0 Тогда
		//готовим запись в спр. состояний документа
		спсДанные = дополненияТорговля.ПодготовитьДанныеОбОтправкеЕмаил(ОтправленоНаЕмаил,глПользователь);
		дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"инфоОбОтправкеЕмаил",спсДанные);
		флОтправлен = 1;
		ЗаписьЖурналаРегистрации("Письмо отправлено: " + ОтправленоНаЕмаил ,,,,4);
	Иначе
		Сообщить("Письмо не отправлено.");
		ЗаписьЖурналаРегистрации("Письмо не отправлено." ,,,,4);
	КонецЕсли;
КонецПроцедуры // ПередатьДокументНаОтправку

//======================================================================
Процедура ПередатьДокументНаОтправку_Телеграм()
	ТаблДок = текФрейм.ПанельИнструментов.Документ;
	спсПарам = СоздатьОбъект("СписокЗначений");
	спсПарам.ДобавитьЗначение("документ","видИсточника");
	спсПарам.ДобавитьЗначение("pdf","форматФайла");
	спсПарам.ДобавитьЗначение(ТаблДок,"исхТаблица");
	спсПарам.ДобавитьЗначение(глВернутьКонтекст(Контекст),"контекст");
	спсПарам.ДобавитьЗначение(СокрЛП(глПользователь.Сотрудник.id_telegram),"id");
	телеграм = СоздатьОбъект("telegramApi");
	
	телеграм.ОтправитьДокументВБот(спсПарам);
КонецПроцедуры // ПередатьДокументНаОтправку

//----работа  с фреймом -------

//======================================================================
//Процедура ОбработкаЯчейкиТаблицы (Значение, ФлагСтандОбр, Таблица, Адрес)
//	Сообщить ("ОбработкаЯчейкиТаблицы: Значение = " + Значение);
//КонецПроцедуры

//Процедура ПриВыбореЯчейки(Документ, НомерСтроки, номерКолонки)
//	Если НазваниеНабораПрав() <> "Администратор" Тогда
//		Возврат;
//	КонецЕсли;
//	//Сообщить("Выбрана ячейка " + номерСтроки + ":" + НомерКолонки);
//	Обл = Документ.область(НомерСтроки,номерКолонки);
//	//Сообщить(обл.цветФона);
//	Если Обл.ЦветФона <> ЦветВыкл Тогда
//		Обл.цветФона = ЦветВыкл;
//	Иначе
//		Обл.ЦветФона = ЦветВкл;
//	КонецЕсли;
//	текФрейм.обновить();
//КонецПроцедуры

Процедура ЗакрытьФрейм ()
	Если ТипЗначенияСтр (текФрейм) <> "ТабличныйДокумент.Фрейм" Тогда
		//Сообщить ("Фрейм не был открыт");
		Возврат;
	КонецЕсли;
	текФрейм.Закрыть ();
КонецПроцедуры

//======================================================================
Функция СоздатьМеню()
	меню = СоздатьОбъект("Йоксель.Меню");
	меню.Добавить("емаил","емаил","емаил1");
	меню.Добавить("telegram","telegram","telegram");
	меню.Добавить("контрагент","выбрать клиента","контрагент1");
	Возврат меню;
КонецФункции // СоздатьМеню

Процедура ДобавитьКнопку(идКн,заголовокКн,значениеКн,доступностьКн = 1,этоФлажок = 0,ВыбКнопкаЗначениеФлажка = 0,ВыбКнопкаСМеню = 0)
	Если ТипЗначенияСтр (текФрейм) <> "ТабличныйДокумент.Фрейм" Тогда
		Сообщить ("Фрейм не был открыт");
		Возврат;
	КонецЕсли;
	
	Панель = текФрейм.ПанельИнструментов;
	Кнопка = Панель.ДобавитьКнопку (идКн);
	Кнопка.Заголовок = заголовокКн;
	Кнопка.Значение = значениеКн;
	Кнопка.Доступность = доступностьКн;
	Кнопка.ЭтоФлажок = этоФлажок;
	Кнопка.ЗначениеФлажка = ВыбКнопкаЗначениеФлажка; //1/0
	Если ВыбКнопкаСМеню = 1 Тогда
		Кнопка.Меню = СоздатьМеню ();
	Иначе
		Кнопка.Меню = 0;
	КонецЕсли;
КонецПроцедуры

Процедура ПоКомандеПользователя (Документ, Команда, Значение)
	//Сообщить ("Поступила команда: " + Команда + ", Ассоциированное значение: " + Значение);
	//Если Значение = "обновить" Тогда
	//	ЗакрытьФрейм();
	//	ОбработкаЯчейкиТаблицы(Расшифровка, 0, Т);
	//КонецЕсли;
	
	//Если Значение = "сохрИзм" Тогда
	//	СохранитьИзмененияВТоварах();
	//КонецЕсли;
	
	Если Значение = "sendEmail" Тогда
		//-ralex, 17-02-23 15:53
		//спсПарам = СоздатьОбъект("СписокЗначений");
		//спсПарам.Установить("Формат",1); //excel
		//спсПарам.Установить("ИДКонтекста",Метаданные.ПолныйИдентификатор());
		//спсПарам.Установить("Тема",Метаданные.Идентификатор);
		//-/------------------------
		ПередатьДокументНаОтправку();
	ИначеЕсли Значение = "sendtelegram" Тогда
		ПередатьДокументНаОтправку_Телеграм();
	КонецЕсли;
	//Если Значение = "счРасш" Тогда
	//	ТаблДок = текФрейм.ПанельИнструментов.Документ;
	//	Обл = ТаблДок.область(15,1);
	//	Если Обл.содержитРасшифровку = 1 Тогда
	//		Сообщить(Обл.Расшифровка() + " :: " + Обл.Расшифровка().код);
	//	Иначе
	//		Сообщить(Обл + " не содержит расшифровки");
	//	КонецЕсли;
	//КонецЕсли;

КонецПроцедуры

//======================================================================
Процедура ВставитьКолонки(передКолонкой,квоКолонок)
	//ТабЭлемент.Документ.ВставитьКолонки (ВыбКолонка, ВыбКоличествоКолонок);
	//ТабЭлемент.Обновить ();
	текФрейм.ПанельИнструментов.Документ.ВставитьКолонки(передКолонкой,квоКолонок);
КонецПроцедуры // ВставитьКолонки

//======================================================================
Процедура ВызовКонтекстногоМеню()
КонецПроцедуры // гл

Процедура ВывестиВоФрейм(ТаблМХЛ,еМаил = 0)
	ТаблДок = СоздатьОбъект ("ТабличныйДокумент");
	ТаблДок.ЗагрузитьИзТаблицы (ТаблМХЛ);
	
	текФрейм = ТаблДок.Показать ("" + ТекущийДокумент());
	текФрейм.ТолькоПросмотр(1);
	Панель = текФрейм.ПанельИнструментов;
	ЭлемУправления = текФрейм.получитьЭлементУправления(1);
	Панель.ПодписатьсяНаСобытие ("КомандаПользователя", "ПоКомандеПользователя");
	//ЭлемУправления.ПодписатьсяНаСобытие ("ВыборЯчейки", "ПриВыбореЯчейки");
	//ЭлемУправления.ПодписатьсяНаСобытие ("ВызовКонтекстногоМеню", "ВызовКонтекстногоМеню");
	//текФрейм.ФиксироватьСтрокиСверху(фиксСтрок);
	//Панель.ПодписатьсяНаСобытие ("ОбработкаЯчейкиТаблицы", "ОбработкаЯчейкиТаблицы");
	ДобавитьКнопку("email","email","sendEmail",,,,0);
	//ДобавитьКнопку("обновить","Обновить","обновить");
	//Если НазваниеНабораПрав() = "Администратор" Тогда
	//	ДобавитьКнопку("сохрИзм","Записать изм.","сохрИзм");
	//КонецЕсли;
	//ДобавитьКнопку("СчитатьРасшифровку","Расшифровка","счРасш");
	Панель.Видимость = 1;
	//-ralex, 15-03-23 12:47
	//Если еМаил = 1 Тогда
	//	ПередатьДокументНаОтправку();
	//	ЗакрытьФрейм();
	//КонецЕсли;
	//-/------------------------
	Если ПустоеЗначение(глПользователь.Сотрудник) = 0 Тогда
		Если ПустаяСтрока(глПользователь.Сотрудник.id_telegram) = 0 Тогда
			ДобавитьКнопку("telegram","telegram","sendtelegram",,,,0);
		КонецЕсли;
	КонецЕсли;	
	//ТаблДок.ВставитьКолонки(ТаблДок.ШиринаТаблицы() + 1, 2);
КонецПроцедуры // ВывестиВоФрейм
//---конец работы с фреймом -------

Процедура Пересчитать()
	ЕСЛИ НЕ((ИмяПользователя() = "ОЛЕГ") ИЛИ (ИмяПользователя() = "ОЛЬГА")  ИЛИ (ИмяПользователя() = "1САдм") или (НазваниеНабораПрав() = "Менеджер")) тогда
		Возврат;
	КонецЕсли;
	выбратьстроки();
	пока получитьстроку()=1 цикл
		//в случае изменения ед. изм. (упаковки) может быть добавлена строка с остатком (неполная упаковка)
		//запоминаем строку с которой работает и если она изменится то возвращаемся на нее.
		текСтрока = НомерСтроки;
		глПриИзмененииТовара(Контекст);	
		Если текСтрока <> НомерСтроки Тогда
			ПолучитьСтрокуПоНомеру(текСтрока);
		КонецЕсли;
		
		Если флОтклКонтрольЦен = 0 Тогда
			ПроцентСкидки = 0; ФиксЦена = 0;
			Если (КатегорияЦен = Константа.РозничнаяКатегорияЦен) или (Товар.флЕдинаяЦена = 1) Тогда
				ПроцентСкидки = Товар.ПроцентСкидки.получить(ДатаДок);
				ФиксЦена = Товар.ФиксЦена.получить(ДатаДок);
				Если (ПроцентСкидки <> 0) или (ФиксЦена <> 0) Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		//+ralex, 19-11-20 21:30  на укслуги скидка не распространяется
		Если Товар.ВидТовара = Перечисление.ВидыТоваров.Услуга Тогда
			Продолжить;
		КонецЕсли;
		//+/ralex, 19-11-20 21:30
		суммаскидки= СуммаБезСкидки/100*ПрСкидки; 			
		глВыч_суммы_накл(Контекст,2,1);
	конеццикла;	
	Пересчитан=1;
КонецПроцедуры	  

Функция ИтогоПрибыль()
	Если (названиенабораправ()="Менеджер") ИЛИ (названиенабораправ()="МенеджерТоварищ") Тогда
		возврат "";
	Иначе	
		Возврат итог("СуммаПрибыль"); 
	КонецЕсли;
КонецФункции 

//*****************************************************************************
Функция ЗаголовокФормы() 
	Перем Заголовок, Название;
	Заголовок = "Счет-фактура ";
	Название ="Счет-фактура №";
	
	Заголовок = Заголовок + глЗаголовок(Контекст);
	
	Форма.Заголовок(Заголовок);     
	Возврат Название;
КонецФункции //ЗаголовокФормы

//******************************************************************************
Процедура ОбновитьНадписи()
	Форма.ТекстВалюты.Заголовок(глСтрокаВалюты(Контекст));
	Форма.ТекстОснования.Заголовок(СокрП(Основание));
КонецПроцедуры
  
// ===============================
Процедура ИзмВидТорговли()
	ВидТорговли = спВидТорговли.ПолучитьЗначение(спВидТорговли.ТекущаяСтрока());
КонецПроцедуры         

// ===============================
Процедура ВыбранВидТорговли()
	спВидТорговли.ТекущаяСтрока(спВидТорговли.НайтиЗначение(ВидТорговли));
КонецПроцедуры

//******************************************************************************
Процедура ИзмСрокРезерва()
	// Формирует и показывает дату оплаты
	ДатаОплаты=глБанковскаяДата(ДатаДок,СрокРезервирования);
КонецПроцедуры	

Процедура ИзмТовар()
	Если стТовар <> Товар Тогда
		СуммаСкидки = 0;
	КонецЕсли;	
КонецПроцедуры // ИзмТовар

//======================================================================
Процедура измФлСамовывоз()
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		глВыч_суммы_накл(Контекст,2) 
	КонецЦикла;
КонецПроцедуры // измФлСамовыво


//******************************************************************************
Процедура ИзмДатаДок()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
	ИзмСрокРезерва();
	ОбновитьНадписи();
КонецПроцедуры

//******************************************************************************
//*ralex, 14-11-23 10:14
//Функция Итого()
//	// Показ итоговых сумм по документу
//	Перем Результат,итСуммаБезНДС, итСуммаСНДС, итСуммаНДС;
//	итСуммаБезНДС = Итог("СуммаБезНДС");
//	итСуммаНДС = итСуммаСНДС - итСуммаБезНДС;
//	итСуммаСНДС =  глФРМ(Итог("СуммаСНДС"), Валюта,1);
//	Если Итог("СуммаБезСкидки") <> 0 Тогда
//		процент = Окр(Итог("СуммаСкидки") * 100/Итог("СуммаБезСкидки") ,0);
//	Иначе
//		процент = 0;
//	КонецЕсли;
//	итСкидка = глФРМ(Итог("СуммаСкидки"),Валюта,1);
//	итСкидка = ?(Итог("СуммаСкидки") = 0,"",", скидка: " + итСкидка + "(" + процент + "%)");
//	итСуммаБезСкидки = глФРМ(Итог("СуммаБезСкидки"),Валюта,1);
//		
//	Результат = "без скидки: " + итСуммаБезСкидки + итСкидка + ", ВСЕГО: " + итСуммаСНДС;
//	Возврат Результат;
//КонецФункции
// -------- заменено на:

// Показ итоговых сумм по документу
Функция Итого()
	Перем Результат,итСуммаБезНДС, итСуммаСНДС, итСуммаНДС;
	
	Если Итог("СуммаБезСкидки") = 0 Тогда
		Возврат "";
	КонецЕсли;
	текКатегорияЦен = ?(Контрагент.Выбран() = 1,Контрагент.КатегорияЦен,КатегорияЦен);
	
	Если текКатегорияЦен = Константа.крупнооптоваяЦена Тогда
		итСуммаБезНДС = Итог("СуммаБезНДС");
		итСуммаСНДС =  глФРМ(Итог("СуммаСНДС"), Валюта,1);
		итСуммаНДС = Итог("СуммаСНДС") - итСуммаБезНДС;
		Если Итог("СуммаБезСкидки") <> 0 Тогда
			процент = Окр(Итог("СуммаСкидки") * 100/Итог("СуммаБезСкидки") ,0);
		Иначе
			процент = 0;
		КонецЕсли;
		
		процент = Окр(Итог("СуммаСкидки") * 100/Итог("СуммаБезСкидки") ,0);
		итСкидка = глФРМ(Итог("СуммаСкидки"),Валюта,1);
		итогоСуммаСкидки = Итог("СуммаСкидки");

		итСкидка = ?(Итог("СуммаСкидки") = 0,"",", скидка: " + итСкидка + "(" + процент + "%)");
		итСуммаБезСкидки = глФРМ(Итог("СуммаБезСкидки"),Валюта,1);
		
		Результат = "без скидки: " + итСуммаБезСкидки + итСкидка + ", ВСЕГО: " + итСуммаСНДС;
		процентСкидки = процент;
		Возврат Результат;
	Иначе
		итСуммаСНДС =  глФРМ(Итог("СуммаСНДС"), Валюта,1);
		итСуммаРозница = гл_ПолучитьСуммуПоДокументуВРозничныхЦенах(Контекст);
		итСкидка = итСуммаРозница - Итог("СуммаСНДС");
		итогоСуммаСкидки = итСкидка;
		Если итСуммаРозница <> 0 Тогда
			процент = Окр(итСкидка * 100/итСуммаРозница ,0);
		Иначе
			процент = 0;
		КонецЕсли;
		
		итСкидка = глФРМ(итСкидка,Валюта,1);
		итСкидка = ?(итСкидка = 0,"",", скидка: " + итСкидка + "(" + процент + "%)");
		итСуммаРозница = глФРМ(итСуммаРозница,Валюта,1);
		итСуммаБезСкидки = глФРМ(Итог("СуммаБезСкидки"),Валюта,1);
		
		Результат = "розница: " + итСуммаРозница + итСкидка + ", ВСЕГО: " + итСуммаСНДС;
		процентСкидки = процент;

		Возврат Результат;
	КонецЕсли;
КонецФункции
//*/------------------------
 
//======================================================================
Функция ВернутьЗакупочнуюЦену()
	Если ПустоеЗначение(Товар) = 1 Тогда
		Возврат "";
	КонецЕсли;
	ЦенаЗакупочная = 0; ВалютаЗакупочная = 0;
	глПолучитьЦенуТовара(Константа.Закупочная,Товар,Единица,ТекущаяДата(),ЦенаЗакупочная,ВалютаЗакупочная);
	ЦенаЗакупочная = глПересчет(ЦенаЗакупочная,ВалютаЗакупочная,ТекущаяДата(),Валюта,ТекущаяДата());
	процентДоставки = ПолучитьПроцентДоставкиПост(Товар,ДатаДок);
	ЦенаЗакупочная = ЦенаЗакупочная + ЦенаЗакупочная*процентДоставки/100;
	ЦенаЗакупочная = Окр(ЦенаЗакупочная,2);
	Возврат Окр(ЦенаЗакупочная,2);
КонецФункции // ПоказатьЗакупочнуюЦену

Функция ВернутьЗакупочнуюСумму()
	Если ПустоеЗначение(Товар) = 1 Тогда
		Возврат "";
	КонецЕсли;
	Возврат ЦенаЗакупка * Количество;
КонецФункции // ПоказатьЗакупочнуюЦену

// ===============================
Процедура ИзмДоговор()
	Если ПустоеЗначение(Договор)=0 Тогда
		Если спВидТорговли.Принадлежит(Договор.ВидТорговли)=0 Тогда
			глТрассировка(Шаблон("Нельзя выбирать Договор с видом торговли [Договор.ВидТорговли]!!!"),1);
			Договор=0;
		Иначе
			ВидТорговли = Договор.ВидТорговли;
			спВидТорговли.ТекущаяСтрока(спВидТорговли.НайтиЗначение(ВидТорговли));
		КонецЕсли;                              
	КонецЕсли;
КонецПроцедуры

//*****************************************************************************
// функции и процедуры, вызываемые из формул элементов диалога
                              
// ===============================
Процедура Подбор()
	рез = спрКонтрПрава.ПроверитьКонтрагентаЗаполненоОткудаПришел(радиоОткудаКлиент,Контрагент);
	Если рез = 0 Тогда
		Возврат;
	КонецЕсли;

	Если КатегорияЦен.Выбран() = 0 Тогда
		Предупреждение("Не выбрана категория цен!",1);
		Возврат;
	КонецЕсли;
	Варианы= СоздатьОбъект("СписокЗначений");
	Варианы.ДобавитьЗначение("по каталогу");
	Варианы.ДобавитьЗначение("по прайсу");
	Варианы.ДобавитьЗначение("по штрих-коду");
	Результат = 0;
	Если Варианы.ВыбратьЗначение(,,Результат,,1)=1 Тогда
	    Если Результат = 1 Тогда
			глПодбор(Контекст,"номенклатура","ДляПодбора")
		ИначеЕсли Результат = 2 Тогда
			глПодбор(Контекст,"прайс_лист","ДляПодбора")
		ИначеЕсли Результат = 3 Тогда
			ОткрытьПодбор("Обработка.ПодборПоШтрихКоду");
	    КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

//******************************************************************************
Процедура Взаиморасчеты()
	глПоказатьДолг(Контекст, Контрагент, "Продажа");
КонецПроцедуры

//*****************************************************************************
Процедура ВыборФирмы()
	// по кнопке редактирования параметров фирмы в докумнете
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ИнформацияОфирме", КонтекстДокумента);
	ОбновитьНадписи();
КонецПроцедуры	
	
//*****************************************************************************
Процедура ВыборОплаты()
	// Процедура по кнопке редактирования параметров оплаты в докумнете
	Перем КонтекстДокумента;
	Перем СтараяКатегорияЦен;
	СтараяКатегорияЦен = КатегорияЦен;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ИнформацияОценах", КонтекстДокумента);
	Если СтараяКатегорияЦен <> КатегорияЦен Тогда
		// изменилась категория цен
		// перерисуем
		Если ПустоеЗначение(КонтекстПодбора) = 0 Тогда
			КонтекстПодбора.Форма.Обновить();
		КонецЕсли;
		
		ПрСкидки = 0;
		Пересчитать();
		////+ralex, 14-11-23 20:44
		//ПрСкидки = 0;
		//ВыбратьСтроки();
		//Пока ПолучитьСтроку() = 1 Цикл
		//	СуммаСкидки = 0; ЦенаСоСкидкой = 0;
		//	глПриИзмененииТовара(Контекст);
		//КонецЦикла;
		////+/------------------------
	КонецЕсли;
	ОбновитьНадписи();
КонецПроцедуры	

//*****************************************************************************
Процедура ИзмКонтрагент(флПодтвержден = 0) // Процедура при выборе Контрагента в документе
	Если Контрагент.Выбран()=1 Тогда  
		Если НазваниеНабораПрав() = "Администратор" Тогда
			флПодтвержден = 1;
			Комментарий = СокрЛП(Комментарий) + " подтвержден " + глПользователь;
		КонецЕсли;
		
		Если спрКонтрПрава.ПроверитьРазрешение(Контрагент) = 0 Тогда
			Контрагент = СтарыйКонтрагент;
			Предупреждение("Вам запрещено создавать документы для этого контрагента",10);
			Возврат;
		КонецЕсли;
		
		Если (СтарыйКонтрагент <> Контрагент) Тогда
			подтвержденСМС = 0;
			Если (ПустаяСтрока(Контрагент.Телефон1) = 1) и (ПустаяСтрока(Контрагент.Телефон2) = 1) Тогда
				Предупреждение("У клиента не указан ни один номер телефона. Применяется розничная категория цен.",3);
			КонецЕсли;
			откудаКлиент = 0;
			спрКонтрПрава.ЗаполнитьРадиоОткудаПришелКлиент(контекст); //+ralex, 26-07-22 21:56
		КонецЕсли;
	
		подтвержденСМС = ?(подтвержденСМС = 1,1,флПодтвержден); //+ralex, 16-05-21 15:31
		разрешеныСкидки = получитьРазрешениеНаСкидки();

		СписокДействий = глПолучитьСписокДействий(
		?(НазваниеНабораПрав() = "Администратор","ТоварныйСостав,","") +
		?(НазваниеНабораПрав() = "Администратор","ОбновлениеЦен,","") + "
		|СтруктураПодчиненности,
		|ДвиженияДокумента,
		|ВводНаОсновании,
		|ОткрытьВЖурнале,
		|Подчиненные,
		|ИзмКомментария");
		
		Если (СтарыйКонтрагент <> Контрагент) или (разрешеныСкидки = 1) Тогда
			// изменили Контрагента
			// очистим договор
			Договор = ПолучитьПустоеЗначение("Документ.Договор");
			Если Константа.ПодставлятьОсновнойДоговор = Да Тогда
				// подставим договор по умолчанию                                 
				Если ПустоеЗначение(Контрагент.ОсновнойДоговорТорг) = 0 Тогда
					Если Фирма = Контрагент.ОсновнойДоговорТорг.Фирма Тогда
						Договор = Контрагент.ОсновнойДоговорТорг;
					КонецЕсли;	
				КонецЕсли;	
			КонецЕсли;
			ВидТорговли = контрагент.ВидТорг;
			ВыбранВидТорговли();
			ИзмСрокРезерва();
			спрКонтрПрава.ПроверитьСтопПечать(Контекст);
		КонецЕсли;
		
		Если (НазваниеНабораПрав() = "Администратор") или (разрешеныСкидки = 1) Тогда
			КатегорияЦен = Контрагент.КатегорияЦен;
		Иначе
			КатегорияЦен = Константа.РозничнаяКатегорияЦен;
		КонецЕсли;
		
		Если неликвид = 1 Тогда
			врКатегорияЦен = Сорт.КатегорияЦен;
			Если ПустоеЗначение(врКатегорияЦен) = 0 Тогда
				КатегорияЦен = врКатегорияЦен;
			КонецЕсли;	
		КонецЕсли;
		
		//+ralex, 14-11-23 10:13
		ПрСкидки = 0;
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			ЦенаСоСкидкой = 0;
			СуммаСкидки = 0;
			ИзмТовар(); 
			глПриИзмененииТовара(Контекст);
		КонецЦикла;
		//+/------------------------
		
	Иначе
		//Не выбран Контрагент - не имеет смысла показывать глубину и дату оплаты и договор
		Договор = ПолучитьПустоеЗначение("Документ.Договор");
	КонецЕсли;
	// Формирует и показывает дату оплаты
	СтарыйКонтрагент = Контрагент;
	ОбновитьНадписи();
	ИзмСрокРезерва();
	Форма.ПрСкидки.Доступность(разрешеныСкидки); //+ralex, 16-05-21 22:46
	ПрСкидки = 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		СуммаСкидки = 0; ЦенаСоСкидкой = 0;
		глПриИзмененииТовара(Контекст);
	КонецЦикла;
КонецПроцедуры	
	
//*****************************************************************************
Процедура ВыборОснования()
	// Процедура по кнопке редактирования основания в докумнете
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", КонтекстДокумента);
	ИзмДоговор();
	// Могли изменить Контрагента
	ОбновитьНадписи();
КонецПроцедуры	

//******************************************************************************
//*ralex, 2016-06-14 13:34:23
//Функция КонтрольОстаткаВсего()
//	// Вычислим, сколько всего данного товара
//	ПолныйОстаток= Регистр.ОстаткиТоваров.СводныйОстаток(глПустаяФирма,Товар,,"ОстатокТовара");
//	Резерв= 0;
//	// проверяем резерв товара
//	Если Константа.РазрешитьПродаватьРезерв=Перечисление.ДаНет.Нет Тогда
//		// Вычислим, сколько зарезервировано всего данного товара
//		Резерв= Регистр.РезервыТоваров.СводныйОстаток(Товар,,"РезервТовара");
//	КонецЕсли;
//    Если Коэффициент>0 Тогда
//		Возврат (ПолныйОстаток-Резерв)/Коэффициент;
//    Иначе
//		Возврат 0;
//	КонецЕсли;
//КонецФункции
// -------- заменено на:
Функция КонтрольОстаткаВсего()
	// Вычислим, сколько всего данного товара
	
	//*ralex, 2017-02-12 12:21:32
	полныйОстаток = 0;
	выбСорт = ?(неликвид = 1,Сорт,КондиционныйТовар);
	спрСклады = СоздатьОбъект("Справочник.МестаХранения");
	спрСклады.ВыбратьЭлементы();
	Пока спрСклады.ПолучитьЭлемент() = 1 Цикл
		Если (спрСклады.ЭтоГруппа() = 1) или (спрСклады.флОстаткиПоФОП = 1) Тогда
			Продолжить;
		КонецЕсли;
		ПолныйОстаток= ПолныйОстаток + Регистр.ОстаткиТоваров.СводныйОстаток(?(ТипУчета = Фин,Фирма,глПустаяФирма),Товар,спрСклады.ТекущийЭлемент(),выбСорт,,"ОстатокТовара"); //0 - управленческий, 2 - фин
	КонецЦикла;
	
    Если Коэффициент>0 Тогда
		Возврат ПолныйОстаток/Коэффициент;
    Иначе
		Возврат 0;
	КонецЕсли;
КонецФункции
//*/ralex, 2016-06-14 13:34:23

//======================================================================
Функция ПоказатьОстаток()
	Возврат Формат(КонтрольОстаткаВсего(),"Ч9.2") + " " + Единица;
КонецФункции // ПоказатьОстаток

//======================================================================
Функция ПоказатьРезерв()
	Возврат глКонтрольРезерва(Контекст,РезервыТоваров) + " " + Единица;
КонецФункции // ПоказатьОстаток

//======================================================================
//+ralex, 2015-09-15 22:31:42
Процедура ОстаткиПоСкладам()
	спрМХ = СоздатьОбъект("Справочник.МестаХранения");
	спрМХ.ВыбратьЭлементы();
	спсОстатки = СоздатьОбъект("СписокЗначений");
	выбСорт = ?(неликвид = 1,Сорт,КондиционныйТовар);

	Пока спрМХ.ПолучитьЭлемент() = 1 Цикл
		Если (спрМХ.ЭтоГруппа() = 1) или (спрМХ.флОстаткиПоФОП = 1) Тогда
			Продолжить;
		КонецЕсли;
		// Вычислим, сколько всего данного товара
		ПолныйОстаток= Регистр.ОстаткиТоваров.СводныйОстаток(?(ТипУчета = Фин,Фирма,глПустаяФирма),Товар,спрМХ.ТекущийЭлемент(),выбСорт,,"ОстатокТовара");
		Если ПолныйОстаток <>  0 Тогда
			Если Коэффициент>0 Тогда
				ПолнОст = ПолныйОстаток/Коэффициент;
			Иначе
				ПолнОст = ПолныйОстаток;
			КонецЕсли;
			спсОстатки.ДобавитьЗначение(спрМХ.ТекущийЭлемент(),"" + спрМХ.ТекущийЭлемент() + " = " + ПолнОст + " ");
		КонецЕсли;
	КонецЦикла;
	
	Резерв= 0;
	// проверяем резерв товара
	Если Константа.РазрешитьПродаватьРезерв=Перечисление.ДаНет.Нет Тогда
		// Вычислим, сколько зарезервировано всего данного товара
		Резерв= Регистр.РезервыТоваров.СводныйОстаток(Товар,,"РезервТовара");
		Если Резерв <> 0 Тогда
			Если Коэффициент>0 Тогда
				Резерв = Резерв/Коэффициент;
			КонецЕсли;
			спсОстатки.ДобавитьЗначение(Резерв," общий резерв товара = " + Резерв + " ");
		КонецЕсли;
	КонецЕсли;
	спсОстатки.ВыбратьЗначение(,,,,1);
КонецПроцедуры // ОстаткиПоСкладам
//+/ralex, 2015-09-15 22:31:42

Функция УстДоступность()
	Если названиенабораправ()<>"Администратор" Тогда
		Если дополненияТорговля.ПолучитьСостояниеДокумента(Контекст,"распечатан") = 1 Тогда
			форма.толькопросмотр(1);
		КонецЕсли;
		Форма.спВидТорговли.Доступность(0);
		Форма.флОтклКонтрольЦен.Видимость(0);
		Форма.КомментарийАдм.Доступность(0);
		форма.ЦенаСоСкидкой.Доступность(0);
		Форма.кнПересчитать.Доступность(0);
		Форма.кнВалюта.Доступность(0);
		Форма.кнОснование.Доступность(0);
		//Если ИмяПользователя() = "Анна" Тогда
		//	Форма.ЦенаБезНДС.Доступность(0);
		//	Форма.ЦенаСНДС.Доступность(0);
		//	Форма.ЦенаСоСкидкой.Доступность(0);
		//	Форма.СуммаБезНДС.Доступность(0);
		//	Форма.СуммаБезСкидки.Доступность(0);
		//	Форма.СуммаСкидки.Доступность(0);
		//	Форма.СуммаСНДС.Доступность(0);
		//КонецЕсли;
		Форма.ПрСкидки.Доступность(?(разрешеныСкидки = 1,1-Форма.ТолькоПросмотр(),0)); //+ralex, 16-05-21 15:31
	Иначе
		форма.ЦенаСоСкидкой.Доступность(флОтклКонтрольЦен);
	КонецЕсли;
	Если дополненияТорговля.ПолучитьСостояниеДокумента(Контекст,"распечатан")=1 Тогда
		форма.кнподбор.доступность(0);			
	КонецЕсли;								

	//+ralex, 19-01-22 17:46
	Если Контрагент.Выбран() = 1 Тогда
		рознКлиенты = гл_ПолучитьЗначениеДопКонстанты("грКлРозница");
		естьОткудаПришел = 1;
		Если (ПустоеЗначение(Контрагент.ОткудаПришелКлиент) = 1) и (ПустоеЗначение(откудаКлиент) = 1) Тогда
			естьОткудаПришел = 0;
		КонецЕсли;
		
		Если ПустоеЗначение(рознКлиенты) = 0 Тогда
			флВидимость = 1;
			Если Контрагент.ПринадлежитГруппе(рознКлиенты) <> 1 Тогда
				флВидимость = 0;
			КонецЕсли;
			расшФормы = СоздатьОбъект("РасширениеФормы");
			расшФормы.УстановитьФорму(Форма);
			Для сч=0  По расшФормы.КоличествоАтрибутов() - 1 Цикл
				текАтрибут = расшФормы.ПолучитьАтрибут(сч);
				Если спсАтрибутов.НайтиЗначение(текАтрибут.Заголовок) <> 0 Тогда
					Если (радиоОткудаКлиент <> 6) и (текАтрибут.Заголовок = "прочееОткудаПришел") Тогда
						текАтрибут.видимость = 0;
					Иначе
						текАтрибут.видимость = флВидимость;
						Если (флВидимость = 1) и (естьОткудаПришел = 1) Тогда
							текАтрибут.Доступность = 0;
						ИначеЕсли (флВидимость = 1) и (естьОткудаПришел = 0) Тогда
							текАтрибут.Доступность = 1;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	//+/------------------------
	
	Если КатегорияЦен = Константа.крупнооптоваяЦена Тогда
		форма.СуммаСкидкиСамовывоз.Видимость(1);
		форма.флСамовывоз.Видимость(1);
	Иначе
		форма.СуммаСкидкиСамовывоз.Видимость(0);
		форма.флСамовывоз.Видимость(0);
	КонецЕсли;
	
	форма.кнСмс.Видимость(1);
	Если Константа.вклПроверкуКлиентаСМС = Нет Тогда
		форма.кнСмс.Видимость(0);
	ИначеЕсли спрКонтрПрава.ПроверитьНеобходимостьПодтвержденияСмс(Контекст,,0) = 0 Тогда//+ralex, 27-04-21 23:56
		форма.кнСмс.Видимость(0);
	//*ralex, 17-09-22 11:26
	//ИначеЕсли (Контрагент.Выбран() = 1) и (Контрагент.КатегорияЦен = категорияЦен) Тогда
	// -------- заменено на:
	ИначеЕсли (Контрагент.Выбран() = 1) и (подтвержденСМС = 1) Тогда
	//*/------------------------
		форма.кнСмс.Видимость(0);
	КонецЕсли;
	
	Если Контрагент.Выбран() = 1 Тогда
		Если КатегорияЦен <> Контрагент.КатегорияЦен Тогда
			АтрФормы = СоздатьОбъект("АтрибутФормы"); 
			АтрФормы.УстановитьАтрибут(Форма,"КатегорияЦен");
			АтрФормы.ЦветФона = 255;
		КонецЕсли;
	КонецЕсли;
	
Конецфункции //УстДоступность()

//******************************************************************************

//*ralex, 04-01-23 22:07
//Процедура Печать(БыстраяПечать=0,еМаил = 0)
//	Если (спрКонтрПрава.ПроверитьНаличиеПодтвержденияСМС(контекст) = 0) Тогда
//		Если (флОтклКонтрольЦен = 0) Тогда
//			Возврат;
//		КонецЕсли;
//	КонецЕсли;
//	
//	//+ralex, 12-04-21 01:14
//	Если (НазваниеНабораПрав() <> "Администратор") Тогда
//		ВыбратьСтроки();
//		Пока ПолучитьСтроку() = 1 Цикл
//			рез = ПроверитьЦенуТовара(Контекст);
//			Если рез = 0 Тогда
//				Возврат;
//			КонецЕсли;
//		КонецЦикла;
//	КонецЕсли;
//	//+/------------------------
//	Если контрагент.стоппечать=1 тогда
//		СтатусВозврата(0);
//		Возврат;
//	КонецЕсли;
//	Если (названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер") ИЛИ (названиенабораправ()="МенеджерТоварищ") Тогда
//		Если новый=1 Тогда
//			возврат;
//		КонецЕсли;
//	КонецЕсли;                       
//	Если ((названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер")  ИЛИ (названиенабораправ()="МенеджерТоварищ")) и (Форма.ТолькоПросмотр() = 0) Тогда
//		Если Провести() = 0 Тогда
//			СтатусВозврата(0); Возврат;
//		КонецЕсли;			
////		Распечатан=1; //-ralex, 14-08-22 02:04
//		форма.толькоПросмотр(1);
//		Если выбран()=1 Тогда
//			новый=0;
//		КонецЕсли;		
//	КонецЕсли;
//	
//	выбЗн = 0;
//	спсМеню = СоздатьОбъект("СписокЗначений");
//	спсМеню.ДобавитьЗначение("Счет","Счет");
//	спсМеню.ДобавитьЗначение("Заказ","Заказ на бланке");
//	Если спсМеню.ВыбратьЗначение(выбЗн,,,,1) <> 1 Тогда
//		Возврат;
//	КонецЕсли;
//	Если выбЗн = "Заказ" Тогда
//		спсПарам = СоздатьОбъект("СписокЗначений");
//		спсПарам.ДобавитьЗначение(ТекущийДокумент(),"Док");
//		ОткрытьФормуМодально("Обработка.ПечатьЗаказаДвери",спсПарам);
//		Возврат;
//	КонецЕсли;
//	
//	Таб = СоздатьОбъект("Таблица");    
//	ВП = Валюта;  
//	КурсПечати = Курс;                     
//	ДатаКурса = Дата_Курса;
//	ИтВес=0;
//	Если ПустоеЗначение(Контрагент) = 0 Тогда
//		Если Контрагент.ВидКонтрагента <> Перечисление.ВидыКонтрагентов.Нерезидент Тогда
//			Если ТипУчета > 0 Тогда
//				ВП = Гривня;  
//				КурсПечати = глКурсДляВалюты(ВП,ДатаДок);                     
//				ДатаКурса = ДатаДок;
//			КонецЕсли;	
//		КонецЕсли;	
//	КонецЕсли;	
//	ПечФорма = "Таблица";
//	Язык = глЯзык(ПечФорма); 	
//	глУстПропись(Гривня,Язык);
//	Если Константа.ФормыНаУкраинском = Да Тогда
//		Таб.ИсходнаяТаблица("ТаблицаУ");
//	КонецЕсли;
//	Фирма.ИспользоватьДату(ДатаДок,1);
//	
//	//*ralex, 03-06-21 21:32
//	//Если (ПустаяСтрока(Фирма.АдресОтправителя) = 0) и (ПустаяСтрока(Контрагент.АдресПолучателя) = 0) Тогда
//	//	еМаил = 1;	
//	//КонецЕсли;
//	// -------- заменено на:
//	Если еМаил = 1 Тогда
//		Если ПустаяСтрока(Фирма.АдресОтправителя) = 1 Тогда
//			Сообщить("не указан email адрес отправителя: " + Фирма);
//			Возврат;
//		КонецЕсли;
//		Если ПустаяСтрока(Контрагент.АдресПолучателя) = 1 Тогда
//			Сообщить("не указан email адрес получателя: " + Контрагент);
//			Возврат;
//		КонецЕсли;
//	КонецЕсли;
//	//*/------------------------
//	Если неликвид = 1 Тогда
//		тхтНеликвид = ?(Константа.ФормыНаУкраинском = Да,"--- НЕКОНДИЦІЯ ","--- НЕКОНДИЦИЯ ") + Сорт + " ---";
//	Иначе
//		тхтНеликвид = "";
//	КонецЕсли;
//	
//	Если флСамовывоз = 1 Тогда
//		тхтНеликвид = ?(Константа.ФормыНаУкраинском = Да,"--- САМОВИВІЗ ","--- САМОВЫВОЗ ") + " ---";
//	КонецЕсли;
//		
//	ПечСкидкаДоставка = глФРМ(глПересчет(Итог("СуммаСкидкиСамовывоз"),Валюта,Курс,ВП,ДатаДок),ВП,0);
//	тхтСкидкаДоставка = ?(Константа.ФормыНаУкраинском = Да,"Знижка самовивіз:","Скидка самовывоз:");
//	
//	Таб.ВывестиСекцию("Шапка");
//	Ном = 1;
//	ВСоставе = 0;
//	ИтогСумма_БНДС = 0;
//	ИтогСумма_НДС = 0;
//	ИтогСумма_СДНС = 0; ИтогСумма_соСкидкой = 0;
//	ВыбратьСтроки();
//	Пока ПолучитьСтроку()=1 Цикл                
//		Если Набор.Выбран()=1 Тогда
//			Если ПустоеЗначение(ВСоставе)=1 Тогда
//				Таб.ВывестиСекцию("ВСоставе");
//				ВСоставе=Набор;
//			ИначеЕсли ВСоставе<>Набор Тогда
//				Таб.ВывестиСекцию("ВСоставе");
//				ВСоставе=Набор;
//			КонецЕсли;
//		Иначе
//			Если ПустоеЗначение(ВСоставе)=0 Тогда
//				ВСоставе=0;
//			КонецЕсли;
//		КонецЕсли;   
//		Цена_СНДС = ЦенаСНДС; 
//		Цена_БНДС = ЦенаБезНДС;
//		Если КатегорияЦен <> Константа.ЦенаПервыйСорт Тогда
//			гл_ПолучитьЦенуТовараДляПечати(Контекст,Товар,Цена_СНДС,Цена_БНДС);//с НДС
//		КонецЕсли;
//		Сумма_БезСкидки = Цена_БНДС * Количество; //безНДС
//		ИтогСумма_БНДС = ИтогСумма_БНДС + Сумма_БезСкидки;
//		
//		ПроцНДС = глПроцентНДС(Товар.СтавкаНДС.Получить(ДатаДок));
//		Сумма_НДС = Окр((Сумма_БезСкидки - СуммаСкидки) * ПроцНДС,3);
//		ИтогСумма_НДС = ИтогСумма_НДС + Сумма_НДС;
//		
//		ПечЦена = глФРМ(глПересчет(Цена_БНДС,Валюта,Курс,ВП,ДатаДок),ВП,0);
//		ПечСумма = глФРМ(глПересчет(Сумма_БезСкидки,Валюта,Курс,ВП,ДатаДок),ВП,0);
//		ИтВес=ИтВес+Товар.вес*Количество;
//		
//		Таб.ВывестиСекцию("Строка");
//		едИзмМ2 = гл_ВернутьЕдиницуИзмеренияТовара(Константа.едИзмМетр2,Товар,0);
//		Если ПустоеЗначение(едИзмМ2) = 0 Тогда
//			ПечЦенаМ2 = Окр(Цена_БНДС /Единица.Коэффициент * едИзмМ2.коэффициент,2); 
//			ПечКвоМ2 = Окр(Количество* Единица.Коэффициент / едИзмМ2.коэффициент,2);
//			Таб.ВывестиСекцию("стр_втораяЦена");
//		КонецЕсли;
//		
//		Ном = Ном+1;
//	КонецЦикла;
//	//нижняя рамка в последней строке
//	Обл = Таб.Область(Таб.ВысотаТаблицы(),1,Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы());
//	Обл.РамкаСнизу(3);
//	
//	Если контрагент.печатьДолг=1 тогда
//		ТекущийДолг = глДолгКонтрагента(Контекст,-1,Упр, ,Контрагент,,,1) + глДолгКонтрагента(Контекст,1,Упр, ,Контрагент,,,1);
//		ДолгТек="Долг без текущей заявки: "+ТекущийДолг+" грн.";
//		ДолгЦифрами = ?(ТекущийДолг = 0,"",""+ТекущийДолг + " грн.");
//	Иначе
//		ДолгЦифрами = "";
//		ДолгТек="";
//	КонецЕсли;	
//	
//	тхтСкидка = "";
//	Если Итог("СуммаСкидки")<>0 Тогда
//		ПечСкидка = глФРМ(глПересчет(Итог("СуммаСкидки"),Валюта,Курс,ВП,ДатаДок),ВП,0);
//		//посчитаем процент скидки
//		итогоСуммаБезСкидки = Итог("СуммаБезСкидки");
//		итогоСуммаБезНДС = Итог("СуммаБезНДС");
//		//*ralex, 26-06-22 00:52
//		//процент = Окр((итогоСуммаБезСкидки - итогоСуммаБезНДС) * 100 / итогоСуммаБезСкидки,2);
//		// -------- заменено на:
//		//*ralex, 29-06-22 10:58
//		//процент = Окр(итогоСуммаБезСкидки/Итог("СуммаСкидки") ,2);
//		// -------- заменено на:
//		процент = Окр(Итог("СуммаСкидки") * 100/итогоСуммаБезСкидки ,2);
//		//*/------------------------
//		//*/------------------------
//		тхтСкидка = ?(Константа.ФормыНаУкраинском = Да,"Знижка","Скидка") + " (" + процент + "%):";
//	КонецЕсли;
//	
//	допТорговля = СоздатьОбъект("дополненияТорговля");
//	
//	ПечБезНДС = допТорговля.ОкрДо_50(глПересчет(ИтогСумма_БНДС,Валюта,Курс,ВП,ДатаДок));
//	ПечБезНДС = глФРМ2(ПечБезНДС,ВП,0);
//	
//	ПечНДС = глФРМ2(глПересчет(ИтогСумма_НДС,Валюта,Курс,ВП,ДатаДок),ВП,0);
//	
//	//*ralex, 26-06-22 00:55
//	//печСНДС = допТорговля.ОкрДо_50(глПересчет(ИтогСумма_БНДС - Итог("СуммаСкидки") + ИтогСумма_НДС,Валюта,Курс,ВП,ДатаДок));
//	// -------- заменено на:
//	печСНДС = допТорговля.ОкрДо_50(глПересчет(Итог("СуммаСНДС"),Валюта,Курс,ВП,ДатаДок));
//	//*/------------------------
//	ПечСНДС = глФРМ(печСНДС,ВП,0);	
//	ПечНДСПропись = " "+Формат(глПересчет(ИтогСумма_НДС,Валюта,Курс,ВП,ДатаДок),"Ч12.2")+" "+ВП.Кратко;
//	
//	//*ralex, 26-06-22 00:58
//	//ПечСНДСПропись = допТорговля.ОкрДо_50(глПересчет(ИтогСумма_БНДС - Итог("СуммаСкидки") + ИтогСумма_НДС,Валюта,Курс,ВП,ДатаДок));
//	// -------- заменено на:
//	ПечСНДСПропись = допТорговля.ОкрДо_50(глПересчет(Итог("СуммаСНДС"),Валюта,Курс,ВП,ДатаДок));
//	//*/------------------------
//	ПечСНДСПропись = глСуммаПрописью(ПечСНДСПропись,ВП);  
//	Если тхтСкидка = "" Тогда
//		тхтВсегоБезНДС = "Разом без ПДВ:"; 
//		таб.ВывестиСекцию("ДноИтого");
//		Если Итог("СуммаСкидкиСамовывоз") <> 0 Тогда
//			таб.ВывестиСекцию("ДноСкидкаДоставка");
//		КонецЕсли;
//		таб.ВывестиСекцию("Дно");
//	Иначе
//		тхтВсегоБезНДС = "Разом без ПДВ без знижки:"; 
//		таб.ВывестиСекцию("ДноИтого");
//		таб.ВывестиСекцию("ДноСкидка");
//		Если Итог("СуммаСкидкиСамовывоз") <> 0 Тогда
//			таб.ВывестиСекцию("ДноСкидкаДоставка");
//		КонецЕсли;
//		таб.ВывестиСекцию("Дно");
//	КонецЕсли;
//	Если (ПустаяСтрока(Фирма.АдресОтправителя) = 0) и (ПустаяСтрока(Контрагент.АдресПолучателя) = 0) Тогда
//		Таб.ОбластьПечати(2,1,Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы());
//	КонецЕсли;
//	Если Контрагент.Выбран() = 1 Тогда
//		Если (Контрагент.ВидТорг = Перечисление.ВидыТорговли.Нал) или (ВидТорговли = Перечисление.ВидыТорговли.Нал) Тогда
//			Если НазваниеНабораПрав() <> "Администратор" Тогда
//				Таб.ОбластьПечати(3,1,4,2);
//			КонецЕсли;
//		КонецЕсли;
//	КонецЕсли;
//	
//	Если (названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер")  ИЛИ (названиенабораправ()="МенеджерТоварищ") Тогда
//		Таб.Защита(1);
//		Таб.ОбластьПечати(3,1,3,2);
//	КонецЕсли;
//	Если БыстраяПечать=1 Тогда
//		Таб.ПараметрыСтраницы(,,,,,,,,,1,,);
//		Таб.КоличествоЭкземпляров(Константа.ПечКолЭкзСчетаПриБыстройПродаже);
//		Таб.Напечатать(глОтладка);
//	ИначеЕсли еМаил = 1 Тогда
//		ВывестиВоФрейм(Таб,1);
//	Иначе
//		ВывестиВоФрейм(Таб);
//	КонецЕсли;   
//	
//	текРаспечатан = дополненияТорговля.ПолучитьСостояниеДокумента(Контекст,"распечатан"); //+ralex, 19-12-21 23:02
//	дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"распечатан",текРаспечатан + 1);
//	//Распечатан=1;
//	//Провести(); //проводим 2 раза к сожалению т.к. у менеджера нет права записывать без перепроведения, а у нас меняется реквизит "Распечатан"
//	//в первый раз в начале процедуры, чтобы узнать можем ли провести документ (не заполнен реквизит и т.д.), второй раз - для записи флага распечатки
//	//сразу флаг нельзя т.к., если док. не проведется, а флаг уже поставиться, то документ заблокируется для редактирования.
//	//записать();			
////	УстДоступность(); //-ralex, 18-01-22 23:11
//КонецПроцедуры    
// -------- заменено на:

//======================================================================
//*ralex, 14-11-23 21:19
//Процедура ПечатьСекцииДокумента(Таб,имяСекции)
//	ЕстьСкидка = ?(Итог("СуммаСкидки") <> 0,1,0);
//	ЕстьСкидка = ?(неликвид = 1,1,естьСкидка);
//	Если ЕстьСкидка = 1 Тогда
//		тхтЦена = "Ціна зі знижкою";
//		Таб.ВывестиСекцию(имяСекции);		
//	Иначе
//		тхтЦена = "Ціна";
//		Таб.ВывестиСекцию(имяСекции+"|Общий<");
//		Таб.ПрисоединитьСекцию(имяСекции + "|Общий>");
//	КонецЕсли;
//КонецПроцедуры // 	ПечатьСекцииДокумента(Таб,"Строка");
// -------- заменено на:
Процедура ПечатьСекцииДокумента(Таб,имяСекции)
	ЕстьСкидка = ?(процентСкидки <> 0,1,0);
	ЕстьСкидка = ?(неликвид = 1,1,естьСкидка);
	Если ЕстьСкидка = 1 Тогда
		тхтЦена = "Ціна зі знижкою";
		Таб.ВывестиСекцию(имяСекции);		
	Иначе
		тхтЦена = "Ціна";
		Таб.ВывестиСекцию(имяСекции+"|Общий<");
		Таб.ПрисоединитьСекцию(имяСекции + "|Общий>");
	КонецЕсли;
КонецПроцедуры // 	ПечатьСекцииДокумента(Таб,"Строка");
//*/------------------------

Процедура Печать(БыстраяПечать=0,еМаил = 0)
	Если (спрКонтрПрава.ПроверитьНаличиеПодтвержденияСМС(контекст) = 0) Тогда
		Если (флОтклКонтрольЦен = 0) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	//+ralex, 12-04-21 01:14
	Если (НазваниеНабораПрав() <> "Администратор") Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			рез = ПроверитьЦенуТовара(Контекст);
			Если рез = 0 Тогда
				Возврат;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	//+/------------------------
	Если контрагент.стоппечать=1 тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	Если (названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер") ИЛИ (названиенабораправ()="МенеджерТоварищ") Тогда
		Если новый=1 Тогда
			возврат;
		КонецЕсли;
	КонецЕсли;                       
	Если ((названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер")  ИЛИ (названиенабораправ()="МенеджерТоварищ")) и (Форма.ТолькоПросмотр() = 0) Тогда
		Если Провести() = 0 Тогда
			СтатусВозврата(0); Возврат;
		КонецЕсли;			
//		Распечатан=1; //-ralex, 14-08-22 02:04
		форма.толькоПросмотр(1);
		Если выбран()=1 Тогда
			новый=0;
		КонецЕсли;		
	КонецЕсли;
	
	выбЗн = 0;
	спсМеню = СоздатьОбъект("СписокЗначений");
	спсМеню.ДобавитьЗначение("Счет","Счет");
	спсМеню.ДобавитьЗначение("Заказ","Заказ на бланке");
	Если спсМеню.ВыбратьЗначение(выбЗн,,,,1) <> 1 Тогда
		Возврат;
	КонецЕсли;
	Если выбЗн = "Заказ" Тогда
		спсПарам = СоздатьОбъект("СписокЗначений");
		спсПарам.ДобавитьЗначение(ТекущийДокумент(),"Док");
		ОткрытьФормуМодально("Обработка.ПечатьЗаказаДвери",спсПарам);
		Возврат;
	КонецЕсли;
	
	Таб = СоздатьОбъект("Таблица");    
	ВП = Валюта;  
	КурсПечати = Курс;                     
	ДатаКурса = Дата_Курса;
	ИтВес=0;
	
	Если ПустоеЗначение(Контрагент) = 0 Тогда
		Если Контрагент.ВидКонтрагента <> Перечисление.ВидыКонтрагентов.Нерезидент Тогда
			Если ТипУчета > 0 Тогда
				ВП = Гривня;  
				КурсПечати = глКурсДляВалюты(ВП,ДатаДок);                     
				ДатаКурса = ДатаДок;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;
	
	ПечФорма = "Таблица";
	Язык = глЯзык(ПечФорма); 	
	глУстПропись(Гривня,Язык);
	ИмяФайлаПечатнойФормы = КаталогИБ()+"ExtForms\PrnForms\SchetU.mxl";
	Если ФС.СуществуетФайл(ИмяФайлаПечатнойФормы) = 1 Тогда
		ПечФорма = ИмяФайлаПечатнойФормы;
	Иначе
		ПечФорма = "Таблица";
		Язык = глЯзык(ПечФорма); 	
	КонецЕсли;
	Таб.ИсходнаяТаблица(ПечФорма);

	Фирма.ИспользоватьДату(ДатаДок,1);
	Если еМаил = 1 Тогда
		Если ПустаяСтрока(Фирма.АдресОтправителя) = 1 Тогда
			Сообщить("не указан email адрес отправителя: " + Фирма);
			Возврат;
		КонецЕсли;
	КонецЕсли;

	шСтр1 = ?(ПустаяСтрока(Фирма.ЕГРПОУ) = 1,"",Шаблон("ЄДРПОУ [Фирма.ЕГРПОУ]"));
	шСтр1 = шСтр1 + ?(ПустаяСтрока(Фирма.Телефоны) = 1,"",?(ПустаяСтрока(шСтр1) = 1,"",Шаблон(", тел. [Фирма.Телефоны]")));
	шСтр2 = ?(ПустаяСтрока(РСчет.БанкСчет)= 1,"",Шаблон("Р/р [РСчет.БанкСчет] в [РСчет.БанкНазвание]"));      
	шСтр3 = ?(ПустаяСтрока(Фирма.ИНН) = 1,"",Шаблон("ІПН [Фирма.ИНН]"));
	шСтр3 = шСтр3 + ?(ПустаяСтрока(Фирма.НомерСвидетельства) = 1,"",Шаблон(", номер свідоцтва [Фирма.НомерСвидетельства]"));
	шСтр4 = ?(ПустаяСтрока(Фирма.ЮридическийАдрес) = 1,"",Шаблон("Адреса [Фирма.ЮридическийАдрес]"));
	
	Если неликвид = 1 Тогда
		тхтНеликвид = ?(Константа.ФормыНаУкраинском = Да,"--- НЕКОНДИЦІЯ ","--- НЕКОНДИЦИЯ ") + Сорт + " ---";
	Иначе
		тхтНеликвид = "";
	КонецЕсли;
	
	Если флСамовывоз = 1 Тогда
		тхтНеликвид = ?(Константа.ФормыНаУкраинском = Да,"--- САМОВИВІЗ ","--- САМОВЫВОЗ ") + " ---";
	КонецЕсли;
		
	ПечСкидкаДоставка = глФРМ(глПересчет(Итог("СуммаСкидкиСамовывоз"),Валюта,Курс,ВП,ДатаДок),ВП,0);
	тхтСкидкаДоставка = ?(Константа.ФормыНаУкраинском = Да,"Знижка самовивіз:","Скидка самовывоз:");
	
	ПечатьСекцииДокумента(Таб,"Шапка");
	Если тхтНеликвид <> "" Тогда
		Таб.ВывестиСекцию("неликвид");
	КонецЕсли;
	ПечатьСекцииДокумента(Таб,"шапкаТаб");
	
	Ном = 1;
	ВСоставе = 0;
	ИтогСумма_БНДС = 0;
	ИтогСумма_НДС = 0;
	ИтогСумма_СДНС = 0; ИтогСумма_соСкидкой = 0;
	ЕстьСкидка = ?(Итог("СуммаСкидки") <> 0,1,0);

	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл                
		Если Набор.Выбран()=1 Тогда
			Если ПустоеЗначение(ВСоставе)=1 Тогда
				Таб.ВывестиСекцию("ВСоставе");
				ВСоставе=Набор;
			ИначеЕсли ВСоставе<>Набор Тогда
				Таб.ВывестиСекцию("ВСоставе");
				ВСоставе=Набор;
			КонецЕсли;
		Иначе
			Если ПустоеЗначение(ВСоставе)=0 Тогда
				ВСоставе=0;
			КонецЕсли;
		КонецЕсли;   
		Цена_СНДС = ЦенаСНДС; 
		Цена_БНДС = ЦенаБезНДС;
		Если КатегорияЦен <> Константа.ЦенаПервыйСорт Тогда
			гл_ПолучитьЦенуТовараДляПечати(Контекст,Товар,Цена_СНДС,Цена_БНДС);//с НДС
		КонецЕсли;
		
		//получаем розничную цену
		ПечЦенаБезСкидки = 0; ВалютаЦены = 0;
		глПолучитьЦенуТовара(Константа.РозничнаяКатегорияЦен,Товар,Единица,ДатаДок,ПечЦенаБезСкидки,ВалютаЦены); 
		ПечЦенаБезСкидки = глПересчет(ПечЦенаБезСкидки,ВалютаЦены,ДатаДок,Валюта,ДатаДок);
		ПечЦенаБезСкидки = Окр(ПечЦенаБезСкидки,1);
		
		//*ralex, 14-11-23 21:42
		//Сумма_БезСкидки = Цена_БНДС * Количество; //безНДС
		// -------- заменено на:
		Сумма_БезСкидки = ПечЦенаБезСкидки * Количество; //безНДС
		//*/------------------------
		ИтогСумма_БНДС = ИтогСумма_БНДС + Сумма_БезСкидки;
		
		//ПроцНДС = глПроцентНДС(Товар.СтавкаНДС.Получить(ДатаДок));
		//Сумма_НДС = Окр((Сумма_БезСкидки - СуммаСкидки) * ПроцНДС,3);
		//ИтогСумма_НДС = ИтогСумма_НДС + Сумма_НДС;
		
		врПечЦена = глПересчет(ЦенаСоСкидкой,Валюта,Курс,ВП,ДатаДок);
		ПечЦена = СокрЛ(Формат(врПечЦена,"Ч015.1.'"));
		ПечСумма = глФРМ(глПересчет(СуммаБезНДС,Валюта,Курс,ВП,ДатаДок),ВП,0);
		ИтВес=ИтВес+Товар.вес*Количество;
		ПечатьСекцииДокумента(Таб,"Строка");
		
		//+ralex, 14-07-23 23:09
		Если ПечЦенаБезСкидки > врПечЦена Тогда
			обл = Таб.Область(Таб.ВысотаТаблицы(),8);
			обл.Полужирный(1);
		КонецЕсли;
		//+/------------------------
		
		едИзмМ2 = гл_ВернутьЕдиницуИзмеренияТовара(Константа.едИзмМетр2,Товар,0);
		Если ПустоеЗначение(едИзмМ2) = 0 Тогда
			ПечЦенаМ2 = Окр(ЦенаСоСкидкой /Единица.Коэффициент * едИзмМ2.коэффициент,2); 
			ПечЦенаБезСкидкиМ2 = Окр(ПечЦенаБезСкидки/Единица.Коэффициент * едИзмМ2.коэффициент,2); 
			ПечКвоМ2 = Окр(Количество* Единица.Коэффициент / едИзмМ2.коэффициент,2);
			ПечатьСекцииДокумента(Таб,"стр_втораяЦена");
		КонецЕсли;
		
		Ном = Ном+1;
	КонецЦикла;
	
	//нижняя рамка в последней строке
	Обл = Таб.Область(Таб.ВысотаТаблицы(),1,Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы());
	Обл.РамкаСнизу(3);
	
	Если контрагент.печатьДолг=1 тогда
		ТекущийДолг = глДолгКонтрагента(Контекст,-1,Упр, ,Контрагент,,,1) + глДолгКонтрагента(Контекст,1,Упр, ,Контрагент,,,1);
		ДолгТек="Долг без текущей заявки: "+ТекущийДолг+" грн.";
		ДолгЦифрами = ?(ТекущийДолг = 0,"",""+ТекущийДолг + " грн.");
	Иначе
		ДолгЦифрами = "";
		ДолгТек="";
	КонецЕсли;	
	
	тхтСкидка = "";
	//*ralex, 14-11-23 21:25
	//Если Итог("СуммаСкидки")<>0 Тогда
	//	ПечСкидка = глФРМ(глПересчет(Итог("СуммаСкидки"),Валюта,Курс,ВП,ДатаДок),ВП,0);
	//	//посчитаем процент скидки
	//	итогоСуммаБезСкидки = Итог("СуммаБезСкидки");
	//	итогоСуммаБезНДС = Итог("СуммаБезНДС");
	//	//*ralex, 26-06-22 00:52
	//	//процент = Окр((итогоСуммаБезСкидки - итогоСуммаБезНДС) * 100 / итогоСуммаБезСкидки,2);
	//	// -------- заменено на:
	//	//*ralex, 29-06-22 10:58
	//	//процент = Окр(итогоСуммаБезСкидки/Итог("СуммаСкидки") ,2);
	//	// -------- заменено на:
	//	процент = Окр(Итог("СуммаСкидки") * 100/итогоСуммаБезСкидки ,2);
	//	//*/------------------------
	//	//*/------------------------
	//	тхтСкидка = ?(Константа.ФормыНаУкраинском = Да,"Знижка","Скидка") + " (" + процент + "%):";
	//КонецЕсли;
	//
	// -------- заменено на:
	Если процентСкидки <> 0 Тогда
		ПечСкидка = глФРМ(глПересчет(итогоСуммаСкидки,Валюта,Курс,ВП,ДатаДок),ВП,0);
		//посчитаем процент скидки
		итогоСуммаБезСкидки = Итог("СуммаБезСкидки");
		итогоСуммаБезНДС = Итог("СуммаБезНДС");
		процент = процентСкидки;
		тхтСкидка = ?(Константа.ФормыНаУкраинском = Да,"Знижка","Скидка") + " (" + процент + "%):";
	КонецЕсли;
	//*/------------------------

	//допТорговля = СоздатьОбъект("дополненияТорговля");
	
	ПечБезНДС = дополненияТорговля.ОкрДо_50(глПересчет(ИтогСумма_БНДС,Валюта,Курс,ВП,ДатаДок));
	ПечБезНДС = глФРМ2(ПечБезНДС,ВП,0);
	
	ПечНДС = глФРМ2(глПересчет(ИтогСумма_НДС,Валюта,Курс,ВП,ДатаДок),ВП,0);
	
	печСНДС = дополненияТорговля.ОкрДо_50(глПересчет(Итог("СуммаСНДС"),Валюта,Курс,ВП,ДатаДок));
	ПечСНДС = глФРМ(печСНДС,ВП,0);	
	ПечНДСПропись = " "+Формат(глПересчет(ИтогСумма_НДС,Валюта,Курс,ВП,ДатаДок),"Ч12.2")+" "+ВП.Кратко;
	
	ПечСНДСПропись = дополненияТорговля.ОкрДо_50(глПересчет(Итог("СуммаСНДС"),Валюта,Курс,ВП,ДатаДок));
	ПечСНДСПропись = глСуммаПрописью(ПечСНДСПропись,ВП);  
	Если тхтСкидка = "" Тогда
		тхтВсегоБезНДС = "Разом:"; 
		ПечатьСекцииДокумента(Таб,"ДноИтого");
		Если Итог("СуммаСкидкиСамовывоз") <> 0 Тогда
			ПечатьСекцииДокумента(Таб,"ДноСкидкаДоставка");
		КонецЕсли;
		ПечатьСекцииДокумента(Таб,"Дно");
	Иначе
		тхтВсегоБезНДС = "Разом без знижки:"; 
		ПечатьСекцииДокумента(Таб,"ДноИтого");
		ПечатьСекцииДокумента(Таб,"ДноСкидка");
		
		Если Итог("СуммаСкидкиСамовывоз") <> 0 Тогда
			ПечатьСекцииДокумента(Таб,"ДноСкидкаДоставка");
		КонецЕсли;
		ПечатьСекцииДокумента(Таб,"Дно");
	КонецЕсли;
	Если (ПустаяСтрока(Фирма.АдресОтправителя) = 0) и (ПустаяСтрока(Контрагент.АдресПолучателя) = 0) Тогда
		Таб.ОбластьПечати(2,1,Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы());
	КонецЕсли;
	Если Контрагент.Выбран() = 1 Тогда
		Если (Контрагент.ВидТорг = Перечисление.ВидыТорговли.Нал) или (ВидТорговли = Перечисление.ВидыТорговли.Нал) Тогда
			Если НазваниеНабораПрав() <> "Администратор" Тогда
				Таб.ОбластьПечати(3,1,4,2);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если (названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер")  ИЛИ (названиенабораправ()="МенеджерТоварищ") Тогда
		Таб.Защита(1);
		Таб.ОбластьПечати(3,1,3,2);
	КонецЕсли;
	Если БыстраяПечать=1 Тогда
		Таб.ПараметрыСтраницы(,,,,,,,,,1,,);
		Таб.КоличествоЭкземпляров(Константа.ПечКолЭкзСчетаПриБыстройПродаже);
		Таб.Напечатать(глОтладка);
	ИначеЕсли еМаил = 1 Тогда
		ВывестиВоФрейм(Таб,1);
	Иначе
		ВывестиВоФрейм(Таб);
	КонецЕсли;   
	
	текРаспечатан = дополненияТорговля.ПолучитьСостояниеДокумента(Контекст,"распечатан"); //+ralex, 19-12-21 23:02
	дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"распечатан",текРаспечатан + 1);
	//Распечатан=1;
	//Провести(); //проводим 2 раза к сожалению т.к. у менеджера нет права записывать без перепроведения, а у нас меняется реквизит "Распечатан"
	//в первый раз в начале процедуры, чтобы узнать можем ли провести документ (не заполнен реквизит и т.д.), второй раз - для записи флага распечатки
	//сразу флаг нельзя т.к., если док. не проведется, а флаг уже поставиться, то документ заблокируется для редактирования.
	//записать();			
//	УстДоступность(); //-ralex, 18-01-22 23:11
КонецПроцедуры    
//*/------------------------

Процедура ВыборВариантаПечати()
		выбЗн = 0;
		спсМеню = СоздатьОбъект("СписокЗначений");
		спсМеню.ДобавитьЗначение("печатьСчета","печать счета");
		спсМеню.ДобавитьЗначение("email"," отправка счета на email");
		спсМеню.ДобавитьЗначение("Заказ","Заказ на бланке");
		Если спсМеню.ВыбратьЗначение(выбЗн,,,,1) <> 1 Тогда
			Возврат;
		КонецЕсли;
		
		Если выбЗн = "email" Тогда
			Печать(0,1);
		ИначеЕсли выбЗн = "печатьСчета" Тогда
			Печать();
		ИначеЕсли выбЗн = "Заказ" Тогда
			спсПарам = СоздатьОбъект("СписокЗначений");
			спсПарам.ДобавитьЗначение(ТекущийДокумент(),"Док");
			ОткрытьФормуМодально("Обработка.ПечатьЗаказаДвери",спсПарам);
			Возврат;
		КонецЕсли;
КонецПроцедуры

//======================================================================
Функция УстановитьНадписьРаспечатанОтгружен()
	Возврат дополненияТорговля.УстановитьНадписьРаспечатанОтгружен(Контекст);
КонецФункции

////======================================================================
//Процедура ОтправитьТаблицуЕмаил(еТабл)
//	КаталогВложений = КаталогИБ() + СокрЛП(Фирма.КаталогИсхВложений);
//	Если ПустаяСтрока(КаталогВложений) = 1 Тогда
//		Предупреждение("Не указан каталог вложений для исходящих писем для фирмы " + Фирма + ". Письмо не отправлено." );
//		Возврат;
//	Иначе
//		Если Прав(КаталогВложений,1) <> "\" Тогда
//			КаталогВложений = КаталогВложений + "\";
//		КонецЕсли;
//	КонецЕсли;
//	Вложение = КаталогВложений + Шаблон("[ТекущийДокумент().Вид()]_[ТекущийДокумент().номерДок]");
//	еТабл.Записать(Вложение,1); //в формате XLS
//	Если ПустаяСтрока(Фирма.ПутьКЕРТпочты) = 1 Тогда
//		Предупреждение("В справочнике ""Фирмы"" не указан путь к внешней обработке работы с почтой. Отправка почты невозможна.");
//		Возврат;
//	КонецЕсли;
//	спсПар = СоздатьОбъект("СписокЗначений");
//	спсПар.ДобавитьЗначение(Контекст,"конт");
//	спсПар.ДобавитьЗначение(Вложение + ".xls","Вложение");
//	//ОткрытьФорму("Отчет",спсПар,КаталогИБ() + СокрЛП(Фирма.ПутьКЕРТпочты));
//	
//	ОтправленоНаЕмаил = "";
//	ОткрытьФорму("Отчет",спсПар,КаталогИБ() + СокрЛП(Фирма.ПутьКЕРТпочты));
//	Если ПустаяСтрока(ОтправленоНаЕмаил) = 0 Тогда
//		//готовим запись в спр. состояний документа
//		спсДанные = дополненияТорговля.ПодготовитьДанныеОбОтправкеЕмаил(ОтправленоНаЕмаил,Автор);
//		дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"инфоОбОтправкеЕмаил",спсДанные);
//		флОтправлен = 1;
//		ЗаписьЖурналаРегистрации("Письмо отправлено: " + ОтправленоНаЕмаил ,,,,4);
//	Иначе
//		Сообщить("Письмо не отправлено.");
//		ЗаписьЖурналаРегистрации("Письмо не отправлено." ,,,,4);
//	КонецЕсли;
//КонецПроцедуры // ОтправитьЕмаил()

//+ralex.zp@gmail.com, 2015-04-02 23:24:49
//======================================================================
Функция РасшифровкаОбновить(Зн)
	Расш = СоздатьОбъект("СписокЗначений");
	Расш.Установить("Exel",1);
	Возврат Расш;
КонецФункции // РасшифровкаОбновить("Exel")

//======================================================================
//Процедура ОбработкаЯчейкиТаблицы(Расшифровка, СтандартнаяОбработка, Таблица) 
//	Если ПустоеЗначение(Расшифровка.Получить("Exel")) = 0 Тогда
//		ОтправитьТаблицуЕмаил(Таблица);
//		//КаталогВложений = КаталогИБ() + СокрЛП(Фирма.КаталогИсхВложений);
//		//Если ПустаяСтрока(КаталогВложений) = 1 Тогда
//		//	Предупреждение("Не указан каталог вложений для исходящих писем для фирмы " + Фирма + ". Письмо не отправлено." );
//		//	Возврат;
//		//Иначе
//		//	Если Прав(КаталогВложений,1) <> "\" Тогда
//		//		КаталогВложений = КаталогВложений + "\";
//		//	КонецЕсли;
//		//КонецЕсли;
//		//Вложение = КаталогВложений + Шаблон("[ТекущийДокумент().Вид()]_[ТекущийДокумент().номерДок]");
//		//Таблица.Записать(Вложение,1); //в формате XLS
//		//Если ПустаяСтрока(Фирма.ПутьКЕРТпочты) = 1 Тогда
//		//	Предупреждение("В справочнике ""Фирмы"" не указан путь к внешней обработке работы с почтой. Отправка почты невозможна.");
//		//	Возврат;
//		//КонецЕсли;
//		//спсПар = СоздатьОбъект("СписокЗначений");
//		//спсПар.ДобавитьЗначение(Контекст,"Конт");
//		//спсПар.ДобавитьЗначение(Вложение + ".xls","Вложение");
//		//ОткрытьФорму("Отчет",спсПар,КаталогИБ() + СокрЛП(Фирма.ПутьКЕРТпочты));
//	КонецЕсли;
//КонецПроцедуры

//+/ralex.zp@gmail.com, 2015-04-02 23:24:49

// ===============================
Процедура ЗаполнитьСпВидТорговли()
	
	спВидТорговли.ДобавитьЗначение(Перечисление.ВидыТорговли.Нал,Строка(Перечисление.ВидыТорговли.Нал));
	спВидТорговли.ДобавитьЗначение(Перечисление.ВидыТорговли.терминал,Строка(Перечисление.ВидыТорговли.терминал));
	спВидТорговли.ДобавитьЗначение(Перечисление.ВидыТорговли.безнал,Строка(Перечисление.ВидыТорговли.безнал));
	спВидТорговли.ДобавитьЗначение(Перечисление.ВидыТорговли.Кредит,Строка(Перечисление.ВидыТорговли.Кредит));
	спВидТорговли.ДобавитьЗначение(Перечисление.ВидыТорговли.Предоплата,Строка(Перечисление.ВидыТорговли.Предоплата));
	
КонецПроцедуры

//Процедура ИзмРеализацияНеликвида()
//	Сорт = ПолучитьСорт();
//	Если КоличествоСтрок() <> 0 Тогда
//		Если Вопрос("Табличная часть документа будет очищена. Продолжить?",4) <> 6 Тогда
//			Неликвид = стНеликвид;
//			Возврат;
//		КонецЕсли;
//	КонецЕсли;
//	стНеликвид = Неликвид;
//	УдалитьСтроки();
//	Если Неликвид = 1 Тогда
//		//установим категорию цен из сорта, если он есть
//		Если Сорт.Выбран() = 1 Тогда
//			Если Сорт <> КондиционныйТовар Тогда
//				КатегорияЦен = Сорт.КатегорияЦен;
//				ТипЦенСкидки = Сорт.КатегорияЦен;
//			КонецЕсли;
//		Иначе
//			КатегорияЦен = 0;
//			ТипЦенСкидки = 0;
//			Если Контрагент.Выбран() = 1 Тогда
//				Если ПустоеЗначение(Контрагент.КатегорияЦен) = 0 Тогда
//					КатегорияЦен = Контрагент.КатегорияЦен;
//					ТипЦенСкидки = Контрагент.КатегорияЦен;
//				КонецЕсли;
//			КонецЕсли;
//		КонецЕсли;
//	Иначе
//		КатегорияЦен = Контрагент.КатегорияЦен;
//		ТипЦенСкидки = Контрагент.КатегорияЦен;
//		Сорт = КондиционныйТовар;
//	КонецЕсли;
//	УстДоступность();
//КонецПроцедуры // ИзмРеализациянеликвидов

//======================================================================
//Процедура измСорт()
//	Сорт = ПолучитьСорт();
//	Если стСорт = Сорт Тогда
//		Возврат;
//	КонецЕсли;
//	
//	Если КоличествоСтрок() <> 0 Тогда
//		Если Вопрос("Табличная часть документа будет очищена. Продолжить?",4) <> 6 Тогда
//			Сорт = стСорт;  //отказ от изменений - откатываем все назад
//			УстановитьСпсСортов();
//			Возврат;
//		КонецЕсли;
//	КонецЕсли;
//	стСорт = Сорт;
//	УдалитьСтроки();
//	Если Сорт = КондиционныйТовар Тогда
//		неликвид = 0;
//		стНеликвид = неликвид;
//	//	КатегорияЦен = 0;
//	//	ТипЦенСкидки = 0;
//	//	Если Контрагент.Выбран() = 1 Тогда
//	//		Если ПустоеЗначение(Контрагент.КатегорияЦен) = 0 Тогда
//	//			КатегорияЦен = Контрагент.КатегорияЦен;
//	//			ТипЦенСкидки = Контрагент.КатегорияЦен;
//	//		КонецЕсли;
//	//	КонецЕсли;
//	//Иначе
//	//	
//	КонецЕсли;
//	ИзмРеализацияНеликвида();
//КонецПроцедуры // измСорт


//*****************************************************************************
// Предопределенные процедуры

//******************************************************************************
Процедура ВводНового(Скопирован) //Предопределенная процедура
    новый=1;     
	//распечатан=0;
	глЗаполнитьШапку(Контекст);
	Если Скопирован=1 Тогда	//копирование документа
		Если ПустоеЗначение(Сорт) = 1 Тогда
			Сорт = КондиционныйТовар;
		КонецЕсли;
		Комментарий = "";
		ПрСкидки = 0;
		подтвержденСМС = 0;

		//+ralex, 27-04-21 23:58
		Если Константа.вклПроверкуКлиентаСМС = Да Тогда
			КатегорияЦен = Константа.РозничнаяКатегорияЦен;
		КонецЕсли;
		ИзмКонтрагент();
		//+/------------------------
		Возврат;
	КонецЕсли;         
	
	ДатаДок=РабочаяДата();
	Если ПустоеЗначение(глАктивныйДоговор) = 0 Тогда
		Контрагент = глАктивныйДоговор.Владелец;
		//+ralex, 2018-04-29 21:50:38
		Если спрКонтрПрава.ПроверитьРазрешение(Контрагент) = 0 Тогда
			Контрагент = СтарыйКонтрагент;
			Предупреждение("Вам запрещено создавать документы для этого контрагента",10);
			СтатусВозврата(0); Возврат;
		КонецЕсли;
		//+/ralex, 2018-04-29 21:50:38
		Договор = глАктивныйДоговор;
		КатегорияЦен = Контрагент.КатегорияЦен;
		СтарыйКонтрагент = Контрагент;
	Иначе
		Контрагент=Константа.ОсновнойПокупатель;
		//+ralex, 2018-04-29 21:50:38
		Если спрКонтрПрава.ПроверитьРазрешение(Контрагент) = 0 Тогда
			Контрагент = СтарыйКонтрагент;
			Предупреждение("Вам запрещено создавать документы для этого контрагента",10);
			СтатусВозврата(0); Возврат;
		КонецЕсли;
		//+/ralex, 2018-04-29 21:50:38
		
		ИзмКонтрагент();
	КонецЕсли;
	
	Валюта=Константа.ОсновнаяВалютаПродажи;
	Дата_Курса = ДатаДок;
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта = Гривня;
	КонецЕсли;
	Курс=глКурсДляВалюты(Валюта,Дата_Курса);

	Если ПустоеЗначение(КатегорияЦен)=1 Тогда
		КатегорияЦен = Автор.КатегорияЦен;
	КонецЕсли;
	
	СрокРезервирования=Константа.ОсновнойСрокРезервирования;
	
	ИзмДоговор();
	
	Если ПустоеЗначение(ВидТорговли)=1 Тогда
	    ВидТорговли = Константа.ОсновнойВидТорговли;
	КонецЕсли;
	Сорт = КондиционныйТовар;
	Комментарий = "";
КонецПроцедуры

//******************************************************************************
Процедура ВводНаОсновании(ДокОснование) //Предопределенная процедура
	
	ВидДок = ДокОснование.Вид();
	Если ВидДок<>"Договор" Тогда
		Предупреждение("Счет-фактуру нельзя вводить на основании данного вида документов!");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	                                                	
	глЗаполнитьШапкуНаОсн(Контекст,ДокОснование);
	//+ralex, 2018-04-29 21:50:38
	Если спрКонтрПрава.ПроверитьРазрешение(Контрагент) = 0 Тогда
		Контрагент = СтарыйКонтрагент;
		Предупреждение("Вам запрещено создавать документы для этого контрагента",10);
		СтатусВозврата(0);	Возврат;
	КонецЕсли;
	//+/ralex, 2018-04-29 21:50:38
	
	ИзмДоговор();
	
	Если ПустоеЗначение(Сорт) = 1 Тогда
		Сорт = КондиционныйТовар;
	КонецЕсли;

	Если ПустоеЗначение(Валюта)=1 Тогда
		Валюта=ДокОснование.Валюта;
		Дата_Курса=ДатаДок;
		Курс = глКурсДляВалюты(Валюта,Дата_Курса);
	КонецЕсли;
	
	Если ПустоеЗначение(КатегорияЦен)=1 Тогда
		Если ПустоеЗначение(Контрагент)=0 Тогда
			КатегорияЦен = Контрагент.КатегорияЦен;    
		КонецЕсли;	    
	КонецЕсли;          
	
	Если ПустоеЗначение(КатегорияЦен)=1 Тогда
		КатегорияЦен = Автор.КатегорияЦен;
	КонецЕсли;
	
	СрокРезервирования=Константа.ОсновнойСрокРезервирования;
	
	Если ПустоеЗначение(ВидТорговли)=1 Тогда
	    ВидТорговли = Константа.ОсновнойВидТорговли;
	КонецЕсли;
	Комментарий = "";
КонецПроцедуры

Процедура ПриВыбореЗакладки(Ном,Зн)
	Форма.ИспользоватьСлой("Общий," + Зн,2);
КонецПроцедуры

//======================================================================
Процедура ПриВводеСтроки()
	рез = спрКонтрПрава.ПроверитьКонтрагентаЗаполненоОткудаПришел(радиоОткудаКлиент,Контрагент);
	СтатусВозврата(рез);
КонецПроцедуры // ПриВводеНовойСтроки

//======================================================================
Процедура ПослеОткрытия()
	спрКонтрПрава.ПроверитьСтопПечать(Контекст,0);
КонецПроцедуры // ПослеОткрытия

//*****************************************************************************
Процедура ПриОткрытии() //Предопределенная процедура
	
	//перенес в перехват событий
	////+ralex, 2018-07-14 13:52:51
	//Если ((глПользователь.показыватьТолькоДокПользователя = Да) и (Автор <> глПользователь)) или (спрКонтрПрава.ПроверитьРазрешение(Контрагент) = 0) Тогда
	//	СтатусВозврата(0);
	//	Возврат;
	//КонецЕсли;
	////+/ralex, 2018-07-14 13:52:51
	разрешеныСкидки = получитьРазрешениеНаСкидки();

	НачальнаяДатаДокумента = ДатаДок;
	//+ralex, 2017-02-16 17:11:28
	спс = сорт_ПолучитьСписокСортов();
	спс.Выгрузить(спсСорта);
	
	текПоз = спсСорта.НайтиЗначение(Сорт);
	Если текПоз <> 0 Тогда
		спсСорта.ТекущаяСтрока(текПоз);
	КонецЕсли;	
	
	стНеликвид = Неликвид;
	стСорт = Сорт;
	сорт_УстДоступностьРеквизитов(Контекст);
	//+/ralex, 2017-02-16 17:11:28
	
	//Если Константа.вклПроверкуКлиентаСМС = Нет Тогда
	//	форма.кнСмс.Видимость(0);
	//КонецЕсли;
	
	глПроверкаРазрешенияРедактирования(Контекст);
	Если новый<>1 тогда
		новый=0;
	КонецЕсли;  	
	Если (названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер") ИЛИ (названиенабораправ()="МенеджерТоварищ") Тогда
		//+ralex, 2015-04-20 17:43:44
		форма.ЦеныПрибыль.видимость(0);
		форма.СуммаПрибыль.видимость(0);
		форма.процентПрибыли.Видимость(0);
		форма.кнПрибыль.видимость(0);
		форма.ЦенаЗакупка.Видимость(0);
		форма.СуммаЗакупка.Видимость(0);
		//+/ralex, 2015-04-20 17:43:44

		//Если дополненияТорговля.ПолучитьСостояниеДокумента(Контекст,"распечатан")=1 Тогда
		//    форма.кнподбор.доступность(0);			
		//КонецЕсли;								
		ЕСли (проведен()=1) ИЛИ (ПометкаУдаления()=1) тогда		
			форма.толькопросмотр(1);
		КонецЕсли;		
		форма.распечатан.доступность(0); 
		форма.КатегорияЦен.доступность(0);
		Если Константа.РазрешитьПечатьСчетовМенеджерам = 0 Тогда
			АтрФормы = СоздатьОбъект("АтрибутФормы");
			АтрФормы.УстановитьАтрибут(Форма,"кнПечать");
			АтрФормы.Формула = "Печать(,1)";
		КонецЕсли;
	Иначе
		форма.распечатан.доступность(1);
		АтрФормы = СоздатьОбъект("АтрибутФормы");
		АтрФормы.УстановитьАтрибут(Форма,"кнПечать");
		АтрФормы.Формула = "Печать(0)";
	КонецЕсли;
	
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кнОК.Доступность(0);
		Форма.кнПровести.Доступность(0);
		Форма.кнДействия.Доступность(0);
		Форма.кнСмс.Видимость(0);
		Форма.кнОснование.Доступность(0);
		Форма.кнПодбор.Доступность(0);
	Иначе
		Форма.КнопкаПоУмолчанию("кнОК");
		//-ralex, 17-09-22 11:25
		//Если Константа.вклПроверкуКлиентаСМС = Нет Тогда
		//	форма.кнСмс.Видимость(0);
		//ИначеЕсли спрКонтрПрава.ПроверитьНеобходимостьПодтвержденияСмс(Контекст) = 0 Тогда//+ralex, 27-04-21 23:56
		//	форма.кнСмс.Видимость(0);
		//ИначеЕсли (Контрагент.Выбран() = 1) и (Контрагент.КатегорияЦен = категорияЦен) Тогда
		//	форма.кнСмс.Видимость(0);
		//КонецЕсли;
		//-/------------------------
	КонецЕсли;
	          
	ИзмСрокРезерва();
	глУстВидимостьЦен(Контекст);
	глУстановкаРеквизитаТип(Контекст);
    ОбновитьНадписи();
	СтараяДата = ДатаДок;           

	Если ПустоеЗначение(ВидТорговли)=1 Тогда
	    ВидТорговли = Константа.ОсновнойВидТорговли;
	КонецЕсли;
	
	ВыбранВидТорговли();
//	УстДоступность(); //-ralex, 18-01-22 23:11
	Если ПустоеЗначение(Форма.Параметр)=0 Тогда
		Если ТипЗначенияСтр(Форма.Параметр)="Строка" Тогда
			Если ВРег(Форма.Параметр)="БЫСТРАЯПЕЧАТЬ" Тогда
				Печать(1);
				СтатусВозврата(0); 
				Возврат;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;
	ЗаказДвери = НайтиЗаказДвери();
	текКоммерческое = НайтиКоммерческое();
	Если (форма.ТолькоПросмотр() = 1) и (ПустоеЗначение(ЗаказДвери)= 1) Тогда
		форма.кнВрезка.Доступность(0);
	КонецЕсли;
	
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной","Основное");
	Если НазваниеНабораПрав() = "Администратор" Тогда
		Форма.Закладки.ДобавитьЗначение("CRM","CRM");
	КонецЕсли;
	Форма.ИспользоватьСлой("Общий,Основной");
	
	спрКонтрПрава.ЗаполнитьРадиоОткудаПришелКлиент(контекст);
	Если ДатаДок < '20.10.2023' Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если СуммаЗакупка = 0 Тогда
				ЦенаЗакупка = ВернутьЗакупочнуюЦену();
				СуммаЗакупка = ВернутьЗакупочнуюСумму();
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	//для старых документов заполняем "процентПрибыли" в строках при открытии документа.qrCodeИнструкция
	Если (ДатаДок < '31.12.2023') и (НазваниеНабораПрав() = "Администратор") Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			ЦенаТовара = 0;	ВалютаЗакупочнойЦены = "";
			глПолучитьЦенуТовара(Константа.Закупочная,Товар,Единица,ДатаДок,ЦенаТовара,ВалютаЗакупочнойЦены);
			Если ВалютаЗакупочнойЦены <> Валюта тогда
				ЦенаТовара = глПересчет(ЦенаТовара,ВалютаЗакупочнойЦены,ДатаДок,Валюта,ДатаДок); 
			КонецЕсли;
			процентДоставки = ПолучитьПроцентДоставкиПост(Товар,ДатаДок);
			ЦенаТовара = ЦенаТовара + ЦенаТовара*процентДоставки/100;
			суммаЗакупки = ЦенаТовара * Количество;
			
			Если суммаЗакупки <> 0 Тогда
				процентПрибыли = Окр((СуммаСНДС - суммаЗакупки)/(суммаЗакупки/100),1);	
			Иначе
				процентПрибыли = 999;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры //При открытии

//*****************************************************************************
Процедура ПриНачалеВыбораЗначения(Рекв,Флаг)
	Флаг=0;
	Если (Рекв = "Фирма") или (Рекв = "РСчет") Тогда
		Флаг = 0;
		ВыборФирмы();                             
		// ???
		//Валюта = РСчет.Валюта; 
	ИначеЕсли Рекв="КатегорияЦен" Тогда
		ВыборОплаты();
	ИначеЕсли Рекв = "Контрагент" Тогда
		СтарыйКонтрагент = Контрагент;
		Если Контрагент.Выбран() = 1 Тогда
			Если КоличествоСтрок() <> 0 Тогда
				Если Вопрос("Все цены в документе будут пересчитаны. продолжить?",4,10) <> 6  Тогда
					СтатусВозврата(0);
				Иначе
					Флаг = 1;
				КонецЕсли;
			Иначе
				флаг = 1;
			КонецЕсли;
		Иначе
			Флаг = 1;
		КонецЕсли;
		
	//+ralex, 20-09-22 00:20
	ИначеЕсли Рекв="Товар" Тогда
		Флаг = 0;
		стТовар = Товар;
		ОткрытьФормуМодально("Справочник.Номенклатура.ДляВыбора",Контекст);
		Если Товар.Выбран() = 1 Тогда
			ИзмТовар(); глПриИзмененииТовара(Контекст);
			Активизировать("Количество",1);
		КонецЕсли;
	//+/------------------------
	Иначе
		Флаг=1;
	КонецЕсли;
КонецПроцедуры

//======================================================================
//Процедура ПриНачалеРедактированияСтроки()
//	Если НазваниеНабораПрав() = "Администратор" Тогда
//		Если блокировкаПроверки = 0 Тогда
//			Если Вопрос("Отключить контроль цен товаров?",4,7) = 6 Тогда
//				блокировкаПроверки = 1;
//				Сообщить("До закрытия документа режим контроля цен товаров отключен.","!!!");
//				ФР = СоздатьОбъект("РасширениеФормы");
//				ФР.УстановитьФорму(Форма);
//				ФР.ПолучитьАтрибут("тБлокировка").Заголовок = "контроль цен отключен!";
//				
//			КонецЕсли;
//		КонецЕсли;
//	КонецЕсли;
//КонецПроцедуры // ПриНачалеРедактированияСтроки

//*****************************************************************************
Процедура ОбработкаПодбора(Выб) //Предопределенная процедура
	Если ТипЗначенияСтр(выб) = "ТаблицаЗначений" Тогда
		глПриОбработкеПодбора(Выб,Контекст);
	ИначеЕсли Выб.Вид() = "Контрагенты" Тогда
		Контрагент = Выб;
		ИзмКонтрагент();
	КонецЕсли;
КонецПроцедуры //Обработка подбора

//*****************************************************************************
Процедура ПриЗаписи() //Предопределенная процедура
	Если глМожноЗаписатьДокумент(Контекст)=0 Тогда
		СтатусВозврата(0);                        
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	
	Если ШтрКод = 0 Тогда
		ШтрКод = СформироватьШтрихКодДокумента(Контекст,ТекущийДокумент());
	КонецЕсли;

	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ЦенаПрибыльВР = 0; СуммаПрибыльВР = 0; //переменные не используются, но нужны для совместимости
		РассчитатьПрибыль(Контекст,1,ЦенаПрибыльВР,СуммаПрибыльВР);
		//-ralex, 04-12-23 22:23
		//рез = ПроверитьЦенуТовара(Контекст);
		//-/------------------------
	КонецЦикла;
	
	новый=0;
	ОтборАвтор=фирма;	
	Пользователь = Автор;
	ГруппаПользователей = Автор.Родитель;
	Сорт= сорт_ПолучитьСорт(Контекст);
	//Если ПустаяСтрока(id_задачиВ_CRM) = 1 Тогда
	//	СтатусЗадачиВCRM = 0;
	//ИначеЕсли ЗадачаВCRMВыполнена = 0 Тогда
	//	СтатусЗадачиВCRM = 1;
	//ИначеЕсли ЗадачаВCRMВыполнена = 1 Тогда
	//	СтатусЗадачиВCRM = 2;
	//КонецЕсли;
	рознКлиенты = гл_ПолучитьЗначениеДопКонстанты("грКлРозница");
	Если Контрагент.ПринадлежитГруппе(рознКлиенты) = 1 Тогда
		Если радиоОткудаКлиент <> 0 Тогда
			Если (радиоОткудаКлиент = 6) и ((ПустаяСтрока(прочееОткудаПришел) = 1) или (СтрДлина(СокрЛП(прочееОткудаПришел)) < 3)) Тогда
				Если Форма.прочееОткудаПришел.Доступность() = 1 Тогда
					Предупреждение("Для ""Прочее"" не заполнено поле описания откуда пришел клиент.");
					Активизировать("прочееОткудаПришел",1);
					СтатусВозврата(0);
					Возврат;
				КонецЕсли;
			КонецЕсли;
			Если ПустоеЗначение(Контрагент.ОткудаПришелКлиент) = 1 Тогда
				врОткудаКлиент = перечисление.ОткудаКлиент.ЗначениеПоНомеру(радиоОткудаКлиент);
				//2 варианта. Если у клиента не заполнен тел1 и тел2 то сохраняем откуда пришел в документе - это разовый розничный клиент, 
				//если номер заполнен то сохраняем в справочнике.
				Если (ПустоеЗначение(Контрагент.Телефон1) = 0) или (ПустоеЗначение(Контрагент.Телефон2) = 0) Тогда
					спр = СоздатьОбъект("Справочник.Контрагенты");
					спр.НайтиЭлемент(Контрагент);
					спр.ОткудаПришелКлиент = врОткудаКлиент;
					Если спр.Блокировка() = 1 Тогда
						Сообщить("Закройте элемент справочника ""Контрагенты"" = " + Контрагент + " и повторите попытку");
						Возврат;
					КонецЕсли;
					спр.Записать();
				Иначе
					откудаКлиент = врОткудаКлиент;
				КонецЕсли;
			КонецЕсли;
		Иначе
			Предупреждение("Не указано откуда пришел клиент.");
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// ===============================
Процедура ПриЗакрытии()
КонецПроцедуры	

Функция Раскраска()
	стр = "";
	Если (Товар.Акция.Получить(ДатаДок) = 1) и (Товар.Распродажа.Получить(ДатаДок) = 1) Тогда
		стр = "(BRUSH[" + цветАкция +"])()(BRUSH[" + цветРаспродажа + "])(BRUSH[NONE])";
	ИначеЕсли Товар.Акция.Получить(ДатаДок) = 1 Тогда
		стр = "(BRUSH[" + цветАкция + "])()(BRUSH[NONE])";
	ИначеЕсли Товар.Распродажа.Получить(ДатаДок) = 1 Тогда
		стр = "(BRUSH[" + цветРаспродажа + "])()(BRUSH[NONE])";
	КонецЕсли;
	Возврат стр;
КонецФункции

// ===============================
Функция РассчитатьМаржу()
	Если НазваниеНабораПрав() <> "Администратор" Тогда
		Возврат "";
	КонецЕсли;

	итогСуммаСНДС = Итог("СуммаСНДС");
	
	Если итогСуммаСНДС = 0 Тогда
		Возврат "";
	КонецЕсли;
	сс = Итог("СуммаСНДС") - итог("СуммаПрибыль");
	Возврат "наценка: " + Окр((итогСуммаСНДС - сс)/сс * 100,0) + "%";
КонецФункции

//======================================================================
Процедура ПоказатьНаКарте()
	Если Контрагент.Выбран() = 1 Тогда
		ЗапуститьПриложение("https://www.google.com.ua/maps/place/" + СокрЛП(Контрагент.ЮридическийАдрес));
	КонецЕсли;
КонецПроцедуры // ПоказатьНаКарте()

//======================================================================
Процедура подтвердитьСМС()
	ОткрытьФормуМодально("Отчет.АвторизацияКлиента",Контекст);
КонецПроцедуры // подтвердитьСМС

//======================================================================
Функция показатьПодтвержденСМС()
	Если подтвержденСМС = 1 Тогда
		Возврат "клиент подтвержден через SMS";
	КонецЕсли;
	Возврат "";
КонецФункции // показатьПодтвержденСМС

Форма.Товар.ВыполнятьФормулуТолькоПриИзменении(1);

//*****************************************************************************
//Инициализирум список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий(
?(НазваниеНабораПрав() = "Администратор","ТоварныйСостав,","") +
?(НазваниеНабораПрав() = "Администратор","ОбновлениеЦен,ТоварныйСостав,","") + "
|СтруктураПодчиненности,
|ДвиженияДокумента,
|ВводНаОсновании,
|ОткрытьВЖурнале,
|Подчиненные,
|СформироватьЗаказПоставщику,
|ИзмКомментария");

//список атрибутов для изменения видимости.
спсАтрибутов = СоздатьОбъект("СписокЗначений");
спсАтрибутов.ДобавитьЗначение("наруж. рекл.");
спсАтрибутов.ДобавитьЗначение("сайт");
спсАтрибутов.ДобавитьЗначение("совет");
спсАтрибутов.ДобавитьЗначение("Facebook");
спсАтрибутов.ДобавитьЗначение("Instagram");
спсАтрибутов.ДобавитьЗначение("прочее");
спсАтрибутов.ДобавитьЗначение("прочееОткудаПришел");

	
ЗаполнитьСпВидТорговли();
ВыбранВидТорговли();	
спрКонтрПрава = СоздатьОбъект("КонтрагентыПрава");
ФормаРасш = СоздатьОбъект("РасширениеФормы");
