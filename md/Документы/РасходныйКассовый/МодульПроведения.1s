Перем спФирмы;
Перем ПравоПользователяКассовые;

// ===============================
Функция ПроверкаШапки()
	глВсеВыбрано = 1;
	глВыбранЛи(Фирма,"Фирма");  
	глВыбранЛи(РСчет,"Расчетный счет");
	глВыбранЛи(Валюта,"Валюта");
	глВыбранЛи(ВидОперации,"Вид операции");
	Если глВсеВыбрано = 1 Тогда
		Если ВидОперации <> Перечисление.ВидыОплаты.Корректировка Тогда
			глВыбранЛи(Контрагент,"Контрагент");
		КонецЕсли;
	КонецЕсли;
	Возврат глВсеВыбрано;
КонецФункции
                                     
// ===============================
Процедура ДвиженияДеньги()

	Для Инд=1 по спФирмы.РазмерСписка() Цикл
		текФирма = спФирмы.ПолучитьЗначение(Инд);
		
		Регистр.Деньги.Фирма = текФирма;
		Регистр.Деньги.Валюта = Валюта;
		
		Если ПустоеЗначение(текФирма)=0 Тогда
			Регистр.Деньги.Счет = РСчет;
		Иначе	
			Регистр.Деньги.Счет = 0;
		КонецЕсли;
		
		Регистр.Деньги.БезНал = 0; // Наличные
		
		Если ВидОперации = Перечисление.ВидыОплаты.Оплата Тогда
			Регистр.Деньги.Сумма = СуммаСНДС;
		Иначе
			Регистр.Деньги.Сумма = - СуммаСНДС;
		КонецЕсли;
		Регистр.Деньги.ДвижениеРасходВыполнить();
	КонецЦикла;
	
КонецПроцедуры

// ===============================
Процедура ДвиженияВзаиморасчеты()

	Перем тбДолги;
	
	ВремРегистры=СоздатьОбъект("Регистры");
	Если (ВидОперации = Перечисление.ВидыОплаты.Возврат) Тогда
		Рег=ВремРегистры.ВзаиморасчетыПокупателей;
		ЗнакОплаты = -1; 
	КонецЕсли;
	
	Если (ВидОперации = Перечисление.ВидыОплаты.Оплата) Тогда
		Рег=ВремРегистры.ВзаиморасчетыПоставщиков;
		ЗнакОплаты = +1; 
	КонецЕсли;
	
	Рег.УстановитьЗначениеФильтра("Контрагент",Контрагент,1);
	Рег.УстановитьЗначениеФильтра("Фирма",спФирмы,2);
	
	Если ИтогиАктуальны()=0 Тогда
		Рег.ВременныйРасчет();
		ВремРегистры.РассчитатьРегистрыНа(ТекущийДокумент());
	КонецЕсли;

	Для Инд=1 по спФирмы.РазмерСписка() Цикл
		текФирма = спФирмы.ПолучитьЗначение(Инд);
		
		Рег.УстановитьЗначениеФильтра("Фирма",текФирма,1);
		Рег.ВыгрузитьИтоги(тбДолги,1,1);
		
		// Пресчет суммы
		Если ПустоеЗначение(текФирма)=1 Тогда
			//*ralex, 30-11-20 21:51
			//СуммаПогашения = глПересчет(СуммаСНДС,Валюта,глКурсДляВалюты(Контрагент.ВалютаВзаиморасчетов,ДатаДок),Контрагент.ВалютаВзаиморасчетов,ДатаДок);
			// -------- заменено на:
			СуммаПогашения = Окр(глПересчет(СуммаСНДС,Валюта,Курс,ВалютаВзаиморасчетов,КурсВзаиморасчетов),2);
			//СуммаПогашения = глПересчет(СуммаСНДС,Валюта,ДатаДок,Контрагент.ВалютаВзаиморасчетов,Курс);
			//*/ralex, 30-11-20 21:51
			СтавкаНДСПогашения = 0;
		Иначе    
			СуммаПогашения = Окр(глПересчет(СуммаСНДС,Валюта,Курс,ВалютаВзаиморасчетов,КурсВзаиморасчетов),2);
			//СуммаПогашения = глПересчет(СуммаСНДС,Валюта,Курс,Контрагент.ВалютаВзаиморасчетов,ДатаДок);
//			СуммаПогашения = глПересчет(СуммаСНДС,Валюта,Курс,Гривня,ДатаДок); //-ralex, 13-03-21 17:36
			СтавкаНДСПогашения = СтавкаНДС;
		КонецЕсли;
		
		глПогашениеДолга(Контекст,ЗнакОплаты,тбДолги,текФирма,Контрагент,ВидОперации,
			ДокументОснование,Договор,РежимОплаты,СуммаПогашения,СтавкаНДСПогашения)
		
	КонецЦикла;
		
КонецПроцедуры


//_____________________________________________________________________________
Процедура ОбработкаПроведения(фл = 0)
	//Если фл = 1 Тогда
	//	глНеПроводить(Контекст);
	//	Возврат;
	//КонецЕсли;
	
	ЭтоГрупповаяОбработка = Макс(ГрупповаяОбработка(),глГрупповоеПроведение);

	Если (ЭтоГрупповаяОбработка = 0) Тогда
		Если ПустоеЗначение(ДокументОснование) = 0 Тогда
			Если глЕстьРеквизитШапки("ВидТорговли",ДокументОснование.Вид()) = Да Тогда
				Если ((ДокументОснование.ВидТорговли = Перечисление.ВидыТорговли.безнал) и (ДатаДок >= ДатаВключенияБезНал)) или (ЭтоВидТогровлиНал(ДокументОснование.ВидТорговли) = Да) Тогда
					рез = Вопрос("В документе - основании выбран вид торговли " + ДокументОснование.ВидТорговли + 
					". При нем взаиморасчеты закрываются автоматически при проведении документа - основания. Продолжить проведение документа?",4); 
					Если рез <> 6 Тогда
						глНеПроводить(Контекст,"");
						Возврат;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ПравоПользователяКассовые = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	Если ДатаДок>РабочаяДата() Тогда
		глНеПроводить(Контекст,"Нельзя проводить документ будущей датой!");
		Возврат;
	КонецЕсли;
	//+ralex, 2017-11-24 19:29:32
	Если ЭтоГрупповаяОбработка = 0 Тогда
		Если НазваниеНабораПрав() <> "Администратор" Тогда
			Если ДатаДок <> ТекущаяДата() Тогда
				Предупреждение("Нельзя проводить документ с датой, отличной от сегодняшней!");
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//+/ralex, 2017-11-24 19:29:32
		
	Если ПроверкаШапки()=0 Тогда
	    глНеПроводить(Контекст);
		Возврат;
	КонецЕсли;
	
	Фирма.ИспользоватьДату(ДатаДок);
	спФирмы = глПолучитьФирмы(Контекст);
	
	Если спФирмы.РазмерСписка()>0 Тогда
		
		ДвиженияДеньги();
		
		Если ВидОперации <> Перечисление.ВидыОплаты.Корректировка Тогда
			ДвиженияВзаиморасчеты();
		КонецЕсли; 	
	КонецЕсли; 
	
	гл_КтоКогдаПровел(Контекст,ЭтоГрупповаяОбработка); //+ralex, 08-11-23 22:00
КонецПроцедуры
//------------------------
//
////======================================================================
//Процедура ОбработкаУдаленияПроведения()
//	Сообщить("Отменили проведение");
//КонецПроцедуры // ПриОтменеПроведения

спрКонтрПрава = СоздатьОбъект("КонтрагентыПрава");
ПравоПользователяКассовые = спрКонтрПрава.ПолучитьПравоПользователя(,"флКассовые"); 
