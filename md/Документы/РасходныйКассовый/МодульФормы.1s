//*****************************************************************************
// Описание переменных 
Перем СписокДействий;
Перем СтарыйКонтрагент;
Перем СтараяДата;
Перем спрКонтрПрава;
Перем НачальнаяДатаДокумента;
Перем ПравоПользователяКассовые;
//*****************************************************************************
// "служебные" функции и процедуры 
//======================================================================
//Процедура показатьСуммуВзаиморасчетов()
//	СуммаПогашения = глПересчет(СуммаСНДС,Валюта,Курс,Контрагент.ВалютаВзаиморасчетов,ДатаДок);
//	тхтСуммаВзаиморасч = "" + Окр(СуммаПогашения,2) + " " 
//КонецПроцедуры // показатьСуммуВзаиморасчетов

//*****************************************************************************
Функция УстДоступность()
	Если ВидОперации = Перечисление.ВидыОплаты.Корректировка Тогда
		Форма.Контрагент.Доступность(0);
		Форма.тКонтрагент.Доступность(0);
	Иначе
		Форма.Контрагент.Доступность(Мин(1,Форма.Контрагент.Доступность()));
		Форма.тКонтрагент.Доступность(1);
	КонецЕсли;	
	Форма.ИнфКнопка.Доступность(Контрагент.Выбран());
	Форма.кнПечать.Доступность(Проведен()); //+ralex, 2017-11-29 07:33:07
	Если НазваниеНабораПрав() <> "Администратор" Тогда
		Форма.тхтКомментарийАдм.Видимость(0);
		Форма.КомментарийАдм.Видимость(0);
	КонецЕсли;
	//ПоказатьСуммуВзаиморасчетов();
	Возврат "";
КонецФункции

Процедура ОбновитьНадписи()
	// Формируем информационные строки
	Форма.ТекстОснования.Заголовок(СокрП(Основание));
	Форма.ТекстРежимаОплаты.Заголовок(глСтрокаРежимОплаты(Контекст,РежимОплаты));
	Форма.ТекстВалюты.Заголовок(глСтрокаВалюты(Контекст));
	Если ПустоеЗначение(ВалютаВзаиморасчетов) = 0 Тогда
		Форма.ТекстВалютыВзаиморасчетов.Заголовок(глСтрокаВалютыВзаиморасчетов(Контекст));
		Форма.тхтСуммаВзаиморасчетов.Заголовок("Сумма вз.: " + Окр(глПересчет(СуммаСНДС,Валюта,Курс,ВалютаВзаиморасчетов,КурсВзаиморасчетов),2));
	КонецЕсли;
	//Форма.ТекстПорядокОплаты.Заголовок(глСтрокаПорядокОплаты(Контекст));
КонецПроцедуры

Процедура ВыборОплаты(ид = "")
	// Процедура по кнопке редактирования параметров оплаты в докумнете
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	
	Если ид = "" Тогда
		ОткрытьФормуМодально("Обработка.ИнформацияОценах", КонтекстДокумента);
	Иначе
		спсПар = СоздатьОбъект("СписокЗначений");
		спсПар.ДобавитьЗначение(КонтекстДокумента,"конт");
		спсПар.ДобавитьЗначение(ид,"взаиморасчеты");
		ОткрытьФормуМодально("Обработка.ИнформацияОценах", спсПар);
	КонецЕсли;
	ОбновитьНадписи();
КонецПроцедуры	

//*****************************************************************************
Функция ЗаголовокФормы() 
	Перем Заголовок, Название;
	Заголовок = "Расходный кассовый ордер";
	Название = "Расходный ордер";
	Если ВидОперации = Перечисление.ВидыОплаты.Возврат Тогда
		Заголовок = Заголовок + " (возврат)";
		Название = Название + " (возврат)";
	КонецЕсли;
	Название = Название + " № ";

	
	Заголовок = Заголовок + глЗаголовок(Контекст);
	
    Форма.Заголовок(Заголовок);               
	Возврат Название;
КонецФункции //ЗаголовокФормы

//*****************************************************************************
// функции и процедуры, вызываемые из формул элементов диалога

//******************************************************************************
Процедура ИзмВидОперации()
	Если ВидОперации.Выбран() = 1 Тогда
		Если ВидОперации = Перечисление.ВидыОплаты.Оплата Тогда
			Форма.тКонтрагент.Заголовок("Поставщик:");
			//Форма.СтавкаНДС.Доступность(0);
		ИначеЕсли ВидОперации = Перечисление.ВидыОплаты.Возврат Тогда
			Форма.тКонтрагент.Заголовок("Покупатель:");
			//Форма.СтавкаНДС.Доступность(1);
		ИначеЕсли ВидОперации = Перечисление.ВидыОплаты.Корректировка Тогда
			Контрагент = 0;
			ДокументОснование = 0;
			Договор = 0;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
Процедура ИзмДата()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
	ОбновитьНадписи();
КонецПроцедуры

//*****************************************************************************
Процедура ВыборФирмы()
	// по кнопке редактирования параметров фирмы в докумнете
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ИнформацияОфирме", КонтекстДокумента);
	ОбновитьНадписи();
КонецПроцедуры	
	
//*****************************************************************************
Процедура Взаиморасчеты()
	Если ВидОперации = Перечисление.ВидыОплаты.Оплата Тогда
		// "Продажа"
		глПоказатьДолг(Контекст, Контрагент, "Закупка");
	ИначеЕсли ВидОперации = Перечисление.ВидыОплаты.Возврат Тогда
		// "ВозвратПоставщику"
		глПоказатьДолг(Контекст, Контрагент, "Продажа");
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
Процедура ИзмКонтрагент()
	Перем СтрокаПоДокументу;
	
	СтрокаПоДокументу = "";
	Если Контрагент.Выбран()=1 Тогда
		Если СтарыйКонтрагент <> Контрагент Тогда
			// только если изменили
			спрКонтрПрава.ПроверитьСтопПечать(Контекст);

			Если ПустоеЗначение(Контрагент.ДокументСерия) = 0 Тогда
				СтрокаПоДокументу = СтрокаПоДокументу + "паспорту серии "+СокрП(Контрагент.ДокументСерия);
			КонецЕсли;
			Если ПустоеЗначение(Контрагент.ДокументНомер) = 0 Тогда
				СтрокаПоДокументу = СтрокаПоДокументу + " №"+СокрП(Контрагент.ДокументНомер);
			КонецЕсли;
			Если ПустоеЗначение(Контрагент.ДокументКемВыдан) = 0 Тогда
				СтрокаПоДокументу = СтрокаПоДокументу + ", выданному "+СокрП(Контрагент.ДокументКемВыдан);
			КонецЕсли;
			Если ПустоеЗначение(Контрагент.ДокументДатаВыдачи) = 0 Тогда
				СтрокаПоДокументу = СтрокаПоДокументу + " " + 
				СокрЛП(Формат(Контрагент.ДокументДатаВыдачи,"Д ДДММММГГГГ"));
			КонецЕсли;
			ПоДокументу = СтрокаПоДокументу;
			Выдать = ?(ПустоеЗначение(Контрагент.ПолнНаименование)=0,Контрагент.ПолнНаименование,Контрагент.Наименование);

			Если РежимОплаты = Перечисление.РежимыОплаты.АвтоСлужебный Тогда
				Договор = ПолучитьПустоеЗначение("Документ.Договор");
			Иначе
				// очистим договор
				Договор = ПолучитьПустоеЗначение("Документ.Договор");
				Если Константа.ПодставлятьОсновнойДоговор = Да Тогда
					// подставим договор по умолчанию                                 
					Если ПустоеЗначение(Контрагент.ОсновнойДоговорТорг) = 0 Тогда
						Если Фирма = Контрагент.ОсновнойДоговорТорг.Фирма Тогда
							Договор = Контрагент.ОсновнойДоговорТорг;
						КонецЕсли;	
					КонецЕсли;	
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Иначе
		// нет контрагента, нет и договора
		Договор = ПолучитьПустоеЗначение("Документ.Договор");
	КонецЕсли;
	Дата_Курса = ДатаДок;
	Если Валюта <> Контрагент.ВалютаВзаиморасчетов Тогда
		Валюта = Контрагент.ВалютаВзаиморасчетов;
		Курс=глКурсДляВалюты(Валюта,Дата_Курса);
		ВыборОплаты();
	КонецЕсли;
	ВалютаВзаиморасчетов = Контрагент.ВалютаВзаиморасчетов;
	Дата_курсаВзаиморасчетов = ДатаДок;
	КурсВзаиморасчетов = глКурсДляВалюты(ВалютаВзаиморасчетов,Дата_курсаВзаиморасчетов);
	
	СтарыйКонтрагент = Контрагент;
	ОбновитьНадписи();
КонецПроцедуры

//******************************************************************************
Процедура Печать() 
	Если Проведен() = 0 Тогда
		Возврат;
	КонецЕсли;
	форма.толькопросмотр(1);
	
	Таб = СоздатьОбъект("Таблица");  
	Таб.ИсходнаяТаблица("ТаблицаУ");
	глУстПропись(Валюта,"У");                           
	Если (ПустоеЗначение(СокрЛП(Основание)) = 1) И
		(ПустоеЗначение(Договор) = 0) Тогда
		ПечОснование=Договор.ПредставлениеВида()+" № " + Договор.НомерДок + 
			" от " + Формат(Договор.ДатаДок,"ДДММГГ");
	Иначе		
		ПечОснование=Основание;
	КонецЕсли;			
	Фирма.ИспользоватьДату(ДатаДок);
	Таб.Вывести();
	Таб.Опции(0,0,0,0,"");
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Расходный кассовый ордер","");
	глУстПропись(Гривня);             
КонецПроцедуры
                                         
// ===============================
Процедура УстНомерОрдера()     
	Если ((РСчет.Выбран()=1) и (ПустоеЗначение(НомерОрдера) = 1)) Тогда
		НомерОрдера = РСчет.ПоследнийРасхДок + 1;
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура УстРСчет()     
	Если РСчет.Выбран() = 1 Тогда
		Если РСчет.БезНал = 0  Тогда
			УстНомерОрдера();
			Возврат;
		КонецЕсли;		
	КонецЕсли;		
	
	СпрРС = СоздатьОбъект("Справочник.НашиДенежныеСчета");
	СпрРС.ИспользоватьВладельца(Фирма);
	
	СпрРС.ВыбратьЭлементы();
	Пока СпрРС.ПолучитьЭлемент() = 1 цикл
		Если ((СпрРС.Валюта = Валюта) и (СпрРС.БезНал = 0)) тогда
			РСчет = СпрРС.ТекущийЭлемент(); 
			Кас = 1;
			Прервать;
		КонецЕсли;	
	КонецЦикла;	          	                                                  
	УстНомерОрдера();
	
КонецПроцедуры

// ===============================
Процедура Заполнить(ПоКнопке)
	
		// спросим у пользователя, переоформить или нет
		
		Если глПереоформитьДокумент(Контекст, ДокументОснование, ПоКнопке) = 0 Тогда
		    Возврат;
		КонецЕсли;              
		
		// можно заполнять
		Если ТипУчета = Упр Тогда
			ВалУч = Контрагент.ВалютаВзаиморасчетов;
		Иначе
			ВалУч = Гривня;
		КонецЕсли;

		Если ВидОперации = Перечисление.ВидыОплаты.Оплата Тогда
			СуммаСНДС = глПересчет(глДолгКонтрагента(Контекст ,+1, ТипУчета, Фирма, Контрагент, Договор ,ДокументОснование),ВалУч,ДатаДок,Валюта,ДатаДок);
		Иначе
			СуммаСНДС = глПересчет(глДолгКонтрагента(Контекст ,-1, ТипУчета, Фирма, Контрагент, Договор ,ДокументОснование),ВалУч,ДатаДок,Валюта,ДатаДок);
		КонецЕсли;
		
КонецПроцедуры

//======================================================================
Процедура ПослеОткрытия()
	спрКонтрПрава.ПроверитьСтопПечать(Контекст,0);
КонецПроцедуры // ПослеОткрытия

//******************************************************************************
Процедура ПриВводеНаОсновании(ДокОснование)
	Если ПравоПользователяКассовые = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	Если ПустоеЗначение(ДокОснование) = 1 Тогда
		Возврат;
	КонецЕсли;

	ДокВид = ДокОснование.Вид();
	глЗаполнитьШапкуНаОсн(Контекст,ДокОснование);
	
	Дата_Курса = ДатаДок;
	Валюта = ДокОснование.Валюта;
	Курс=глКурсДляВалюты(Валюта,Дата_Курса);
	ИзмКонтрагент();
	
	//Если ПустоеЗначение(Валюта) = 1 тогда
	//	Валюта=глВалютаВзаиморасчетов(Контрагент);
	//КонецЕсли;	  
	
	УстРСчет();
	
	Если ПустоеЗначение(СуммаСНДС) = 1 Тогда
		Заполнить(0);
	КонецЕсли;

	Если глЕстьРеквизитМнЧ("СуммаСНДС",ДокОснование.Вид()) = Да Тогда
		Если СуммаСНДС = 0 Тогда                         
			ВалУч = ?(ТипУчета = Упр,глВалютаВзаиморасчетов(Контрагент),Гривня);
			Вл = ?(глЕстьРеквизитШапки("Валюта",ДокОснование.Вид()) = Да,ДокОснование.Валюта,ВалУч);
			СуммаСНДС = глПересчет(ДокОснование.Итог("СуммаСНДС"),Вл,ДатаДок,Валюта,ДатаДок);
		КонецЕсли;	
	КонецЕсли;
	Если ДокОснование.Вид() = "ПриходнаяНакладная" Тогда
		Комментарий = "" + ДокОснование.ПричинаВозвратаПок;
	КонецЕсли;
КонецПроцедуры	                      

//*****************************************************************************
Процедура ВыборОснования()
	// Процедура по кнопке редактирования основания в докумнете
	Перем КонтекстДокумента; 
	СтарДоговор = Договор;
	СтарОснование = ДокументОснование;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", КонтекстДокумента);
	// Могли изменить Контрагента   
	Если ДокументОснование.Проведен() = 0 Тогда
		ДокументОснование = 0;
		Предупреждение("Вводить РКО можно только на основании проведенного документа.",5);
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	Если ((ДокументОснование <> СтарОснование) и (ПустоеЗначение(ДокументОснование) = 0)) тогда
		ПриВводеНаОсновании(ДокументОснование);	
	ИначеЕсли Договор<>СтарДоговор тогда
		ПриВводеНаОсновании(Договор);			
	КонецЕсли;	                          
	ОбновитьНадписи();
КонецПроцедуры	

//*****************************************************************************
// Предопределенные процедуры

//******************************************************************************
 Процедура ПриНачалеВыбораЗначения(Элемент,Флаг) // Предопределенная

	Если (Элемент = "Фирма") или (Элемент = "РСчет") Тогда
		Флаг = 0;
		ВыборФирмы();                             
		Валюта = РСчет.Валюта;    
		УстНомерОрдера();
	КонецЕсли;
	
КонецПроцедуры //ПриНачалеВыбораЗначения

//******************************************************************************
Процедура ВводНового(Скопирован)
	Если ПравоПользователяКассовые = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	Автор=глПользователь;
	глЗаполнитьШапку(Контекст);
	Если Скопирован=1 Тогда	//копирование документа
		//+ralex, 12-11-20 17:29
		Комментарий = "";
		комментарийАдм = "";
		//+/ralex, 12-11-20 17:29
		Дата_Курса = ДатаДок;
		Валюта = Контрагент.ВалютаВзаиморасчетов;
		Курс=глКурсДляВалюты(Валюта,Дата_Курса);
		Возврат;
	КонецЕсли;
	
	Валюта    = Гривня;
	Дата_Курса = ДатаДок;
	Курс=глКурсДляВалюты(Валюта,Дата_Курса);
	ВидОперации = Перечисление.ВидыОплаты.Оплата;
	РежимОплаты = Перечисление.РежимыОплаты.КонкретныйДоговор;
	СтавкаНДС = Константа.ОсновнаяСтавкаНДС;
	
	Если ПустоеЗначение(глАктивныйДоговор) = 0 Тогда
		Контрагент = глАктивныйДоговор.Владелец;
		Договор = глАктивныйДоговор;
		СтарыйКонтрагент = Контрагент;
	Иначе
		Контрагент=Константа.ОсновнойПоставщик;
	КонецЕсли;
	ИзмКонтрагент();                                     
	
	УстРСчет();
	//+ralex, 15-11-20 02:29
	спрВалюты = СоздатьОбъект("Справочник.Валюты");
	Если спрВалюты.НайтиПоКоду(980) = 1 Тогда
		Валюта = спрВалюты.ТекущийЭлемент();
	Иначе
		Валюта = Гривня;
	КонецЕсли;
	//+/ralex, 15-11-20 02:29
КонецПроцедуры

//******************************************************************************
Процедура ВводНаОсновании(ДокОснование)
	Перем ДокВид, ВидыОснований;
	//+ralex, 31-07-21 00:39
	Если ДокОснование.Проведен() = 0 Тогда
		Предупреждение("Вводить РКО можно только на основании проведенного документа.",5);
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	//+/------------------------

	ДокВид=ДокОснование.Вид();
	ВидОперации=Перечисление.ВидыОплаты.Оплата;
	Если ДокВид = "ПриходнаяНакладная" Тогда
		Если ДокОснование.ВидОперации = 1 Тогда
			ВидОперации=Перечисление.ВидыОплаты.Возврат;
		КонецЕсли;
	ИначеЕсли ДокВид = "ПриходнаяРеализатора" Тогда
		Если ДокОснование.ВидОперации = 1 Тогда
			СтатусВозврата(0);
			Предупреждение("Расходный ордер нельзя выписывать"+РазделительСтрок+
			               "на основании приходной реализатора с признаком возврат!");
			Возврат;
		КонецЕсли;
	ИначеЕсли ДокВид = "ПриходныйКассовый" Тогда
		Если ДокОснование.ВидОперации = перечисление.ВидыОплаты.Возврат Тогда
			СтатусВозврата(0);
			Предупреждение("Расходный ордер нельзя выписывать"+РазделительСтрок+
			               "на основании с видом оплаты Возврат!");
		КонецЕсли;
		// возврат оплаты
		ВидОперации=Перечисление.ВидыОплаты.Возврат;
	КонецЕсли;

	Автор=глПользователь;
	ДатаДок=РабочаяДата();
	РежимОплаты = Перечисление.РежимыОплаты.КонкретныйДоговор;
	ПриВводеНаОсновании(ДокОснование);	
	спрКонтрПрава.ПроверитьСтопПечать(Контекст);
КонецПроцедуры

//******************************************************************************
Процедура ПриОткрытии()
	Перем Позиция;
	форма.КоррСчет.Видимость(0);
	Если ПравоПользователяКассовые = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	НачальнаяДатаДокумента = ДатаДок;
	глПроверкаРазрешенияРедактирования(Контекст);
	глУстановкаРеквизитаТип(Контекст);
	
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кнОК.Доступность(0);
		Форма.кнПровести.Доступность(0);
		Форма.кнДействия.Доступность(0);
		
		Форма.кнОснование.Доступность(0);
		Форма.кнОчиститьНДС.Доступность(0);
		Форма.кнЗаполнить.Доступность(0);
	Иначе
		Форма.КнопкаПоУмолчанию("кнОК");
	КонецЕсли;
	
	Если НазваниеНабораПрав() <> "Администратор" Тогда
		Форма.ВидЗатрат.Доступность(0);
		Форма.кнВидЗатрат.Доступность(0);
		Форма.кнВалюта.Доступность(ПравоПользователяКассовые); //кассирам разрешаем менять валюту
	Иначе
		Форма.кнВалюта.Доступность(1);
	КонецЕсли;
	
	ИзмВидОперации();
	ОбновитьНадписи();
	СтараяДата = ДатаДок;
КонецПроцедуры

//******************************************************************************
Процедура ПриЗаписи()
	Если ПравоПользователяКассовые = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	Если глМожноЗаписатьДокумент(Контекст)=0 Тогда
		СтатусВозврата(0);                        
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;          
	
	Если РСчет.ПоследнийРасхДок < НомерОрдера Тогда
		Сч = СоздатьОбъект("Справочник.НашиДенежныеСчета");
		Сч.ИспользоватьВладельца(Фирма);
		Сч.НайтиЭлемент(РСчет);
		Сч.ПоследнийРасхДок = НомерОрдера;
		Сч.Записать();
	КонецЕсли;
	ГруппаПользователей = Автор.Родитель;
	//*ralex, 14-10-20 09:35
	//ОтборКомментАдмин = ?(СтрДлина(КомментарийАдм) = 0,0,1);
	// -------- заменено на:
	ОтборКомментАдмин = ПустаяСтрока(КомментарийАдм);
	//*/ralex, 14-10-20 09:35
КонецПроцедуры

//*****************************************************************************
//Инициализирум список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ВводНаОсновании,
	|ОткрытьВЖурнале,
	|Подчиненные,
	|ИзмКомментария");

спрКонтрПрава = СоздатьОбъект("КонтрагентыПрава");
ПравоПользователяКассовые = спрКонтрПрава.ПолучитьПравоПользователя(,"флКассовые"); 