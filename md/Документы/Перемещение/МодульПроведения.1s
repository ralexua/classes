Перем спФирмы;
Перем ЭтоГрупповаяОбработка;

Функция ПолучитьСкладскоеМестоПоКоличеству(выбТовар,кво)
	выбМесто = ""; тзМест = 0;
	//Сорт= сорт_ПолучитьСорт(Контекст); //+ralex, 09-06-23 11:50

	спсМест = дополненияТорговля.получитьСписокСкладскихМест(Товар,Склад,Единица,Сорт,ТекущийДокумент(),тзМест);
	Возврат тзМест.Итог("ОстатокТовара");
КонецФункции // ПолучитьСкладскоеМестоПоКоличеству

// ===============================
Функция ПроверкаШапки()
	глВсеВыбрано = 1;
	глВыбранЛи(Фирма,"Фирма");  
	глВыбранЛи(Склад,"Склад");
	глВыбранЛи(НовыйСклад,"Склад-получатель");
	Если (НазваниеНабораПрав() <> "Администратор") и (ПустаяСтрока(Комментарий) = 1) Тогда
		Сообщить("Не заполнено поле ""Комментарий""");
		глВсеВыбрано = 0;
	КонецЕсли;
	Возврат глВсеВыбрано;
КонецФункции

// ===============================
Функция ПроверкаСтроки()
	глВсеВыбрано = 1;
	глВыбранЛи(Товар,"Товар",НомерСтроки);
	Если глВсеВыбрано = 1 Тогда
		Если (Товар.ВидТовара = Перечисление.ВидыТоваров.Услуга) Тогда
			глТрассировка("В документе "+ПредставлениеВида() +" нельзя использовать услуги. Cтрока "+НомерСтроки+".",0);
			глВсеВыбрано = 0;
		КонецЕсли;		
	КонецЕсли;
	глВыбранЛи(Единица,"Единица",НомерСтроки);
	//+ralex, 18-12-20 03:15
	Если ЭтоГрупповаяОбработка = 0 Тогда
		Если ПустоеЗначение(Товар) = 0 Тогда
			Если Товар.тмцЗаблокирован = 1 Тогда
				Сообщить("В строке "+НомерСтроки+" выбран товар, заблокированный для отгрузки!","!");
				//глВсеВыбрано = 0;
			КонецЕсли;
		КонецЕсли;
		
		Если (ПолучитьСкладскоеМестоПоКоличеству(Товар,Количество * Коэффициент) <> 0) Тогда
			Если (ПустоеЗначение(складскоеМесто) = 1) Тогда
				Сообщить("В строке "+НомерСтроки+" не указано складское место.","!!!");
				//глВсеВыбрано = 0;
			КонецЕсли;
		КонецЕсли;
		
		Если (ДополненияТорговля.ПолучитьПараметрГруппыСправочника(Товар,"флСкладскоеМесто",ДатаДок) = 1) Тогда
			Если (ПустоеЗначение(новоеСкладскоеМесто) = 1) Тогда
				Сообщить("В строке "+НомерСтроки+" не указано НОВОЕ складское место.","!!!");
				глВсеВыбрано = 0;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//+/ralex, 18-12-20 03:15

	Возврат глВсеВыбрано;
КонецФункции
    
// ===============================
Процедура ДвиженияОстатки()

	ФлагПрихода = 0;
	ФлагВозврата = 0;
	ФлагПеремещения = 1;
	
	глИзменитьОстатки(Контекст, спФирмы, Склад, ФлагВозврата, ФлагПрихода, ,ФлагПеремещения,?(Неликвид = 1,Сорт,КондиционныйТовар),?(Неликвид = 1,Сорт,КондиционныйТовар));
	
	ФлагПрихода = 1;
	глИзменитьОстатки(Контекст, спФирмы, НовыйСклад, ФлагВозврата, ФлагПрихода, ,ФлагПеремещения,?(Неликвид = 1,Сорт,КондиционныйТовар),?(Неликвид = 1,Сорт,КондиционныйТовар));
	
КонецПроцедуры
                       
// ===============================
Процедура ДвиженияПартии()
	
	
	спОтбор = СоздатьОбъект("СписокЗначений");
	спСтатус = СоздатьОбъект("СписокЗначений");

	Если Склад.ВидСклада = Перечисление.ВидыСкладов.Розничный Тогда
		спСтатус.ДобавитьЗначение(РозницаКупленный);
		спСтатус.ДобавитьЗначение(РозницаПринятый);
	Иначе
		спСтатус.ДобавитьЗначение(Купленный);
		спСтатус.ДобавитьЗначение(Принятый);
		спСтатус.ДобавитьЗначение(ПринятыйБезПраваПередачи);
	КонецЕсли;
	спОтбор.Установить("Статус", спСтатус);
	
	ВремРег = СоздатьОбъект("Регистры");
	глРассчитатьОстаткиПартий(Контекст, ВремРег, спФирмы, 0, спОтбор);
	
	Для Инд=1 по спФирмы.РазмерСписка() Цикл
		текФирма = спФирмы.ПолучитьЗначение(Инд);
		
		Предпочтение = 0;
		тбПартии = 0;
		тбОстатки = 0;
		ИнвСтартегияПредпочтения  = 0;
		ИнвСтратегияПродажи = 0;
		
		глСформироватьТаблицуПартий(Контекст, ВремРег,текФирма, 0, спОтбор, Предпочтение, 
			тбПартии, тбОстатки, ИнвСтартегияПредпочтения, ИнвСтратегияПродажи);
			
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл
			
			Если ПустоеЗначение(текФирма)=1 Тогда
				ВУ = Товар.ВалютаУчета;
			Иначе	
				ВУ = Гривня;
			КонецЕсли;
			
			ВсегоСписать = Количество * Коэффициент;
			ОсталосьСписать = Количество * Коэффициент;
			ВсегоСуммаСНДС = глПересчет(ЦенаСНДС * Количество,Гривня,ДатаДок,ВУ,ДатаДок);
			ОсталосьСуммаСНДС =  ВсегоСуммаСНДС;
			
			НС=0;
			Если тбПартии.НайтиЗначение(НомерСтроки,НС,"НомерСтрокиДокумента")=1 Тогда
				тбПартии.ПолучитьСтрокуПоНомеру(НС);
			Иначе
				тбПартии.ВыбратьСтроки();
				тбПартии.ПолучитьСтроку();
			КонецЕсли;
			
			Пока тбПартии.НомерСтрокиДокумента = НомерСтроки Цикл			
				
				КонтрагентП = тбПартии.Контрагент;
				ПоставщикП = тбПартии.Поставщик;
				ПоставкаП = тбПартии.Поставка;
				ПрихДокументП = тбПартии.ПрихДокумент;
				СтатусП = тбПартии.Статус;
				
				НС =0;
				
				Если тбОстатки.НайтиЗначение(глПолучитьКлючТбОстатков(ПрихДокументП,ПоставкаП,Товар.Код),НС,"Ключ")=1 Тогда
					
					тбОстатки.ПолучитьСтрокуПоНомеру(НС);
					
					ОстатокТовара = тбОстатки.ОстатокТовара;
					
					Если ОстатокТовара = 0 Тогда
						Если тбПартии.ПолучитьСтроку()=0 Тогда
							Прервать;
						КонецЕсли;
						Продолжить;
					КонецЕсли;
					
					СписываемыйОстатокТовара = Мин(ОсталосьСписать, ОстатокТовара);
					
					КоэфСписания = СписываемыйОстатокТовара / ОстатокТовара;
					КоэфРеализации = СписываемыйОстатокТовара / ВсегоСписать;
					
					СписываемаяСтоимость = тбОстатки.Стоимость * КоэфСписания;
					СписываемаяПродСтоимость = тбОстатки.ПродСтоимость * КоэфСписания;
					СписываемыйНДС = тбОстатки.НДС * КоэфСписания;
					
					СписываемыйОборот = 0;
					СписываемыйНДСРасхода = 0;
						                        					
					Если (Склад.ВидСклада = Перечисление.ВидыСкладов.Розничный) Тогда
						Если (НовыйСклад.ВидСклада = Перечисление.ВидыСкладов.Розничный) Тогда
							КодОперации = ПереоценкаВРознице;
						Иначе
							Если (СтатусП = РозницаПринятый) или (СтатусП = РозницаПринятыйБезПраваПередачи) Тогда
								КодОперации = ПеремещениеПринятогоИзРозницы;
							Иначе
								КодОперации = ПеремещениеИзРозницы;
							КонецЕсли;
						КонецЕсли;
					Иначе
						Если (НовыйСклад.ВидСклада = Перечисление.ВидыСкладов.Розничный) Тогда
							Если (СтатусП = Принятый) или (СтатусП = ПринятыйБезПраваПередачи) Тогда
								КодОперации = ПеремещениеПринятогоВРозницу;
							Иначе
								КодОперации = ПеремещениеВРозницу;
							КонецЕсли;
							
						Иначе
							КодОперации = ПеремещениеМеждуСкладами;
						КонецЕсли;
					КонецЕсли;
					
					Регистр.ПартииТоваров.ПривязыватьСтроку(НомерСтроки);
					
					// Списываем
					
					Регистр.ПартииТоваров.ДвижениеРасход(текФирма, Товар, СтатусП, КонтрагентП, ПоставщикП, 
						ПоставкаП, ПрихДокументП, СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость, 
						СписываемыйНДС, СписываемыйОборот, СписываемыйНДСРасхода, КодОперации,0);
					        
					// Приходуем
					Если (НовыйСклад.ВидСклада = Перечисление.ВидыСкладов.Розничный) Тогда
						// меняем статусы "не розничных" товаров
						Если СтатусП = Купленный Тогда
							СтатусП = РозницаКупленный;
						ИначеЕсли СтатусП = Принятый Тогда
							СтатусП = РозницаПринятый;
						ИначеЕсли СтатусП = ПринятыйБезПраваПередачи Тогда
							СтатусП = РозницаПринятыйБезПраваПередачи;
						КонецЕсли;
					Иначе                                       
						// меняем статусы розничных товаров
						Если СтатусП = РозницаКупленный Тогда
							СтатусП = Купленный;    
						ИначеЕсли СтатусП = РозницаПринятый Тогда
							СтатусП = Принятый;      
						ИначеЕсли СтатусП = РозницаПринятыйБезПраваПередачи Тогда
							СтатусП = ПринятыйБезПраваПередачи;
						КонецЕсли;
					КонецЕсли;

					
					Если (НовыйСклад.ВидСклада = Перечисление.ВидыСкладов.Розничный) Тогда
						Если СписываемыйОстатокТовара = ОсталосьСписать Тогда
							СписываемаяПродСтоимость = ОсталосьСуммаСНДС;
						Иначе
							СписываемаяПродСтоимость = ВсегоСуммаСНДС * КоэфРеализации;
						КонецЕсли;
						ОсталосьСуммаСНДС = ОсталосьСуммаСНДС - СписываемаяПродСтоимость;
					Иначе
						СписываемаяПродСтоимость = 0;
					КонецЕсли;      
					
					Регистр.ПартииТоваров.ДвижениеПриход(текФирма, Товар, СтатусП, КонтрагентП, ПоставщикП, 
						ПоставкаП, ПрихДокументП, СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость, 
						СписываемыйНДС, СписываемыйОборот, СписываемыйНДСРасхода, КодОперации,0);
						
					глУчестьСписание(тбОстатки,СписываемыйОстатокТовара,СписываемаяСтоимость,СписываемаяПродСтоимость,СписываемыйНДС,СписываемыйОборот,СписываемыйНДСРасхода,0);
					
					ОсталосьСписать = ОсталосьСписать - СписываемыйОстатокТовара;
				КонецЕсли;
				
				Если ОсталосьСписать = 0 Тогда
					Прервать;
				КонецЕсли;   
				
				Если тбПартии.ПолучитьСтроку()=0 Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла; 
			Если ОсталосьСписать > 0 Тогда
				глСообщитьОбОтсутствииПартии(Контекст,0, текФирма, Товар, НомерСтроки);
				//*ralex, 07-04-20 00:33
				//Если Константа.РазрешитьОтрицательныеОстаткиТоваров = Нет Тогда
				// -------- заменено на:
				Если (Константа.РазрешитьОтрицательныеОстаткиТоваров = Нет) и (НазваниеНабораПрав() <> "Администратор") Тогда
				//*/ralex, 07-04-20 00:33
					глНеПроводить(Контекст);
					Возврат;
				КонецЕсли;	
			КонецЕсли;
			
		КонецЦикла // строки документа
		
	КонецЦикла; // фирмы
КонецПроцедуры

Функция ДвиженияПартииПоставщика() 
	спОтбор = СоздатьОбъект("СписокЗначений");
	тбПартии = 0;
	ВремРег = СоздатьОбъект("Регистры");
	спОтбор.ДобавитьЗначение(Склад,"Склад");
	глРассчитатьОстаткиПартийПост(Контекст, ВремРег, спОтбор); 
	глСформироватьТаблицуПартийПоставщика(Контекст, ВремРег,0,спОтбор,тбПартии);
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ПартияПост.Выбран() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ОсталосьСписать =  Количество * Коэффициент;
		
		тбПартии.ВыбратьСтроки();
		Пока тбПартии.ПолучитьСтроку() = 1 Цикл
			Если тбПартии.ПартияПост <> ПартияПост Тогда
				Продолжить;
			КонецЕсли;
			Списать = Мин(ОсталосьСписать,тбПартии.ОстатокТовара);
			ОсталосьСписать = ОсталосьСписать - Списать;
			глПровестиПартиюПост(Контекст, 0,0,Товар,ПартияПост,,тбПартии.Поставщик, тбпартии.ПрихДокумент, Списать,,Склад);
			глПровестиПартиюПост(Контекст, 1,0,Товар,ПартияПост,,тбПартии.Поставщик, тбпартии.ПрихДокумент, Списать,,НовыйСклад);
			Если ОсталосьСписать = 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ОсталосьСписать <> 0 Тогда
			Сообщить("Для товара " + Товар + " по партии поставщика остаток = " + тбПартии.ОстатокТовара + ". Не хватает " 
			+ ОсталосьСписать);
			Если НазваниеНабораПрав() <> "Администратор" Тогда
				Возврат 0;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	
	Возврат 1;			
КонецФункции

Процедура ПересчетРегистров()
	ОбщРег=СоздатьОбъект("Регистры");
	ОстаткиТоваров=ОбщРег.ОстаткиТоваров;
	РезервыТоваров=ОбщРег.РезервыТоваров;
	Если ДатаДок<ПолучитьДатуТА() Тогда
	    ОстаткиТоваров.ВременныйРасчет();
		РезервыТоваров.ВременныйРасчет();
		ОбщРег.РассчитатьРегистрыПо(ДатаДок);
	КонецЕсли;
КонецПроцедуры   

//-------------------------------------
Процедура ОбработкаПроведения()
	ЭтоГрупповаяОбработка = Макс(ГрупповаяОбработка(),глГрупповоеПроведение);

	Если ДатаДок>РабочаяДата() Тогда
		глНеПроводить(Контекст,"Нельзя проводить документ будущей датой!");
		Возврат;
	КонецЕсли;
	
	Если глПроверкаДублейСтрок(Контекст)=1 Тогда
		глНеПроводить(Контекст,"В документе строки с одинаковым товаром, но разной ценой!");
		Возврат;
	КонецЕсли;
	
	Если ПроверкаШапки() = 0 Тогда
		глНеПроводить(Контекст); 
		Возврат;
	КонецЕсли;                      
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ПроверкаСтроки() = 0 Тогда
			глНеПроводить(Контекст); 
			Возврат;
		КонецЕсли;
	КонецЦикла;		                                 
	
	спФирмы = глПолучитьФирмы(Контекст);
	
	Если спФирмы.РазмерСписка()>0 Тогда
		
		ДвиженияОстатки();
		
		ДвиженияПартии();
		
	КонецЕсли;
	попытка
		ПересчетРегистров();		
		Рег=СоздатьОбъект("Регистр.ПартииТоваров");
		Рег.ВыбратьДвиженияДокумента(ТекущийДокумент());
		
		Пока Рег.ПолучитьДвижение()=1 Цикл  
			
			Если ТипУчета = Упр Тогда
				Если ПустоеЗначение(Рег.Фирма)=0 Тогда
					Продолжить;
				КонецЕсли;
			Иначе
				Если ПустоеЗначение(Рег.Фирма)=1 Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			НомСтрДок = Рег.НомерСтроки();
			ПолучитьСтрокуПоНомеру(НомСтрДок);
			
			СуммаУчета=Рег.Стоимость;
			попытка      
				ЦенаУчета=Рег.Стоимость/Рег.ОстатокТовара;
			исключение
			конецпопытки;	
		КонецЦикла;	
	исключение
	конецпопытки;	
	ДвиженияПартииПоставщика();
КонецПроцедуры


