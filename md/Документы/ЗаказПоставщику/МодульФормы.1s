//*****************************************************************************
// Описание переменных 
Перем ДатаОплаты;
Перем СписокДействий;
Перем СтарыйКонтрагент;
Перем СтараяДата,стВалюта,стКурс;
Перем ОтправленоНаЕмаил Экспорт; //на какой емаил отправили письмо
Перем текФрейм;
Перем НачальнаяДатаДокумента;
//*****************************************************************************
// "служебные" функции и процедуры 

//======================================================================
Процедура ПередатьДокументНаОтправку()
	ОтправленоНаЕмаил = "";
	_email = СоздатьОбъект("_email");
	Расш = _email.создатьСписокПараметров(Контекст,Контрагент.АдресПолучателя,1,"pdf");
	ТаблДок = текФрейм.ПанельИнструментов.Документ;
	_email.ОтправкаПисьма(Расш,ТаблДок);
	Если ПустаяСтрока(ОтправленоНаЕмаил) = 0 Тогда
		//готовим запись в спр. состояний документа
		спсДанные = дополненияТорговля.ПодготовитьДанныеОбОтправкеЕмаил(ОтправленоНаЕмаил,глПользователь);
		дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"инфоОбОтправкеЕмаил",спсДанные);
		флОтправлен = 1;
		ЗаписьЖурналаРегистрации("Письмо отправлено: " + ОтправленоНаЕмаил ,,,,4);
	Иначе
		Сообщить("Письмо не отправлено.");
		ЗаписьЖурналаРегистрации("Письмо не отправлено." ,,,,4);
	КонецЕсли;
КонецПроцедуры // ПередатьДокументНаОтправку

//----работа  с фреймом -------

//======================================================================
//Процедура ОбработкаЯчейкиТаблицы (Значение, ФлагСтандОбр, Таблица, Адрес)
//	Сообщить ("ОбработкаЯчейкиТаблицы: Значение = " + Значение);
//КонецПроцедуры

//Процедура ПриВыбореЯчейки(Документ, НомерСтроки, номерКолонки)
//	Если НазваниеНабораПрав() <> "Администратор" Тогда
//		Возврат;
//	КонецЕсли;
//	//Сообщить("Выбрана ячейка " + номерСтроки + ":" + НомерКолонки);
//	Обл = Документ.область(НомерСтроки,номерКолонки);
//	//Сообщить(обл.цветФона);
//	Если Обл.ЦветФона <> ЦветВыкл Тогда
//		Обл.цветФона = ЦветВыкл;
//	Иначе
//		Обл.ЦветФона = ЦветВкл;
//	КонецЕсли;
//	текФрейм.обновить();
//КонецПроцедуры

Процедура ЗакрытьФрейм ()
	Если ТипЗначенияСтр (текФрейм) <> "ТабличныйДокумент.Фрейм" Тогда
		//Сообщить ("Фрейм не был открыт");
		Возврат;
	КонецЕсли;
	текФрейм.Закрыть ();
КонецПроцедуры

//======================================================================
Функция СоздатьМеню()
	меню = СоздатьОбъект("Йоксель.Меню");
	меню.Добавить("емаил","емаил","емаил1");
	меню.Добавить("контрагент","выбрать клиента","контрагент1");
	Возврат меню;
КонецФункции // СоздатьМеню

Процедура ДобавитьКнопку(идКн,заголовокКн,значениеКн,доступностьКн = 1,этоФлажок = 0,ВыбКнопкаЗначениеФлажка = 0,ВыбКнопкаСМеню = 0)
	Если ТипЗначенияСтр (текФрейм) <> "ТабличныйДокумент.Фрейм" Тогда
		Сообщить ("Фрейм не был открыт");
		Возврат;
	КонецЕсли;
	
	Панель = текФрейм.ПанельИнструментов;
	Кнопка = Панель.ДобавитьКнопку (идКн);
	Кнопка.Заголовок = заголовокКн;
	Кнопка.Значение = значениеКн;
	Кнопка.Доступность = доступностьКн;
	Кнопка.ЭтоФлажок = этоФлажок;
	Кнопка.ЗначениеФлажка = ВыбКнопкаЗначениеФлажка; //1/0
	Если ВыбКнопкаСМеню = 1 Тогда
		Кнопка.Меню = СоздатьМеню ();
	Иначе
		Кнопка.Меню = 0;
	КонецЕсли;
КонецПроцедуры

Процедура ПоКомандеПользователя (Документ, Команда, Значение)
	//Сообщить ("Поступила команда: " + Команда + ", Ассоциированное значение: " + Значение);
	//Если Значение = "обновить" Тогда
	//	ЗакрытьФрейм();
	//	ОбработкаЯчейкиТаблицы(Расшифровка, 0, Т);
	//КонецЕсли;
	
	//Если Значение = "сохрИзм" Тогда
	//	СохранитьИзмененияВТоварах();
	//КонецЕсли;
	
	Если Значение = "sendEmail" Тогда
		//-ralex, 17-02-23 15:53
		//спсПарам = СоздатьОбъект("СписокЗначений");
		//спсПарам.Установить("Формат",1); //excel
		//спсПарам.Установить("ИДКонтекста",Метаданные.ПолныйИдентификатор());
		//спсПарам.Установить("Тема",Метаданные.Идентификатор);
		//-/------------------------
		ПередатьДокументНаОтправку();
	КонецЕсли;
	//Если Значение = "счРасш" Тогда
	//	ТаблДок = текФрейм.ПанельИнструментов.Документ;
	//	Обл = ТаблДок.область(15,1);
	//	Если Обл.содержитРасшифровку = 1 Тогда
	//		Сообщить(Обл.Расшифровка() + " :: " + Обл.Расшифровка().код);
	//	Иначе
	//		Сообщить(Обл + " не содержит расшифровки");
	//	КонецЕсли;
	//КонецЕсли;

КонецПроцедуры

//======================================================================
Процедура ВставитьКолонки(передКолонкой,квоКолонок)
	//ТабЭлемент.Документ.ВставитьКолонки (ВыбКолонка, ВыбКоличествоКолонок);
	//ТабЭлемент.Обновить ();
	текФрейм.ПанельИнструментов.Документ.ВставитьКолонки(передКолонкой,квоКолонок);
КонецПроцедуры // ВставитьКолонки

//======================================================================
Процедура ВызовКонтекстногоМеню()
КонецПроцедуры // гл

Процедура ВывестиВоФрейм(ТаблМХЛ,еМаил = 0)
	ТаблДок = СоздатьОбъект ("ТабличныйДокумент");
	ТаблДок.ЗагрузитьИзТаблицы (ТаблМХЛ);
	
	текФрейм = ТаблДок.Показать ("" + ТекущийДокумент());
	текФрейм.ТолькоПросмотр(1);
	Панель = текФрейм.ПанельИнструментов;
	ЭлемУправления = текФрейм.получитьЭлементУправления(1);
	Панель.ПодписатьсяНаСобытие ("КомандаПользователя", "ПоКомандеПользователя");
	//ЭлемУправления.ПодписатьсяНаСобытие ("ВыборЯчейки", "ПриВыбореЯчейки");
	//ЭлемУправления.ПодписатьсяНаСобытие ("ВызовКонтекстногоМеню", "ВызовКонтекстногоМеню");
	//текФрейм.ФиксироватьСтрокиСверху(фиксСтрок);
	//Панель.ПодписатьсяНаСобытие ("ОбработкаЯчейкиТаблицы", "ОбработкаЯчейкиТаблицы");
	ДобавитьКнопку("email","email","sendEmail",,,,0);
	//ДобавитьКнопку("обновить","Обновить","обновить");
	//Если НазваниеНабораПрав() = "Администратор" Тогда
	//	ДобавитьКнопку("сохрИзм","Записать изм.","сохрИзм");
	//КонецЕсли;
	//ДобавитьКнопку("СчитатьРасшифровку","Расшифровка","счРасш");
	Панель.Видимость = 1;
	Если еМаил = 1 Тогда
		ПередатьДокументНаОтправку();
		ЗакрытьФрейм();
	КонецЕсли;
	//ТаблДок.ВставитьКолонки(ТаблДок.ШиринаТаблицы() + 1, 2);
КонецПроцедуры // ВывестиВоФрейм
//---конец работы с фреймом -------

//======================================================================
Процедура измТМЦ()
	Если дополненияТорговля.ЗаказнойЛиТовар(Товар) = 1 Тогда
		Если ПустоеЗначение(ДокументОснование) = 1 Тогда
			Сообщить("Заказ на этот товар создается только на основании документа ""Счет"".");
			УдалитьСтроку();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // измТМЦ() 

//======================================================================
Функция квоУпаковок()
	классУпаковка = гл_ПолучитьЗначениеДопКонстанты("упаковка");
	едИзмУпаковка = гл_ВернутьЕдиницуИзмеренияТовара(классУпаковка,Товар,0);
	квоУп = "";
	Если ПустоеЗначение(едИзмУпаковка) = 0 Тогда
		квоУп = Окр(количество * Единица.Коэффициент / едИзмУпаковка.коэффициент,2); 
	КонецЕсли;
	Возврат квоУп;
КонецФункции // квоУпаковок

//======================================================================
Процедура ПоказатьДокументОснование()
	Если ДокументОснование.Выбран() = 1 Тогда
		ОткрытьФормуМодально(ДокументОснование);
	КонецЕсли;
КонецПроцедуры // ПоказатьДокументОснование

//======================================================================
Функция ПоказатьСтатусДокумента()
	Возврат дополненияТорговля.УстановитьНадписьРаспечатанОтгружен(Контекст,0,0,1);///только емаил
КонецФункции // ПоказатьСтатусДокумента

Процедура ОбновитьНадписи()
	Форма.ТекстВалюты.Заголовок(глСтрокаВалюты(Контекст));
	Форма.ТекстВалютыПересчета.Заголовок(глСтрокаВалютыПересчета(Контекст));
	//Форма.ТекстОснования.Заголовок(СокрП(Основание));
КонецПроцедуры

//*****************************************************************************
Функция ЗаголовокФормы() 
	Перем Заголовок, Название;
	Заголовок = "Заказ поставщику ";
	Название ="Заказ поставщику №";
	
	Заголовок = Заголовок + глЗаголовок(Контекст);
	
	Форма.Заголовок(Заголовок);     
	Возврат Название;
КонецФункции //ЗаголовокФормы

//*****************************************************************************
// функции и процедуры, вызываемые из формул элементов диалога

//******************************************************************************
Процедура Взаиморасчеты()
	глПоказатьДолг(Контекст, Контрагент, "Закупка");
КонецПроцедуры

//*****************************************************************************
Процедура ВыборФирмы()
	// по кнопке редактирования параметров фирмы в докумнете
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ИнформацияОфирме", КонтекстДокумента);
	ОбновитьНадписи();
КонецПроцедуры	
	
//*****************************************************************************
Процедура ВыборОплаты()
	// Процедура по кнопке редактирования параметров оплаты в докумнете
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ИнформацияОценах", КонтекстДокумента);
	ОбновитьНадписи();
КонецПроцедуры	

//*****************************************************************************
Процедура ИзмКонтрагент() // Процедура при выборе Контрагента в документе
    Если Контрагент.Выбран()=1 Тогда                                      
		Если СтарыйКонтрагент <> Контрагент Тогда
			// изменили Контрагента
			// очистим договор
			Договор = ПолучитьПустоеЗначение("Документ.Договор");
			Если Константа.ПодставлятьОсновнойДоговор = Да Тогда
				// подставим договор по умолчанию                                 
				Если ПустоеЗначение(Контрагент.ОсновнойДоговорТорг) = 0 Тогда
					Если Фирма = Контрагент.ОсновнойДоговорТорг.Фирма Тогда
						Договор = Контрагент.ОсновнойДоговорТорг;
					КонецЕсли;	
				КонецЕсли;	
			КонецЕсли;
			//+ralex, 04-02-21 12:24
			Валюта = Контрагент.ВалютаВзаиморасчетов;
			Курс = Контрагент.ВалютаВзаиморасчетов.Курс.получить(ДатаДок);
			Если ((стВалюта <> Валюта) ИЛИ (стКурс <> Курс)) И (КоличествоСтрок() <> 0) Тогда  
				Если Вопрос("Пересчитать суммы в документе?","Да+Нет")="Да" Тогда
					глУстан_Вал(Контекст, Валюта, стВалюта, Курс,стКурс);
				КонецЕсли;	
			КонецЕсли;
			
			ОбновитьНадписи();
			//+/ralex, 04-02-21 12:24
		КонецЕсли;
	Иначе
		//Не выбран Контрагент - не имеет смысла показывать глубину и дату оплаты и договор
		Договор = ПолучитьПустоеЗначение("Документ.Договор");
	КонецЕсли;
	// Формирует и показывает дату оплаты
	СтарыйКонтрагент = Контрагент;
	ОбновитьНадписи();
КонецПроцедуры	
	
//*****************************************************************************
Процедура ВыборОснования()
	// Процедура по кнопке редактирования основания в докумнете
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", КонтекстДокумента);
	// Могли изменить Контрагента 	
	ОбновитьНадписи();
КонецПроцедуры	

//******************************************************************************
//*ralex, 28-10-21 01:06
//Функция КонтрольОстаткаВсего()
//	// Вычислим, сколько всего данного товара
//	ПолныйОстаток= Регистр.ОстаткиТоваров.СводныйОстаток(глПустаяФирма,Товар,гл_ПолучитьСписокСкладов(),КондиционныйТовар,"ОстатокТовара");
//	Резерв= 0;
//	// проверяем резерв товара
//	Если Константа.РазрешитьПродаватьРезерв=Перечисление.ДаНет.Нет Тогда
//		// Вычислим, сколько зарезервировано всего данного товара
//		Резерв= Регистр.РезервыТоваров.СводныйОстаток(Товар,,"РезервТовара");
//	КонецЕсли;
//    Если Коэффициент>0 Тогда
//		Возврат (ПолныйОстаток-Резерв)/Коэффициент;
//    Иначе
//		Возврат 0;
//	КонецЕсли;
//КонецФункции
// -------- заменено на:
Функция КонтрольОстаткаВсего()
	// Вычислим, сколько всего данного товара
	спсСклады = гл_ПолучитьСписокСкладов();
	ПолныйОстаток = 0;
	Для сч = 1 по спсСклады.РазмерСписка() Цикл
		текСклад = спсСклады.ПолучитьЗначение(сч,);
		ПолныйОстаток= ПолныйОстаток + Регистр.ОстаткиТоваров.СводныйОстаток(глПустаяФирма,Товар,текСклад,КондиционныйТовар,,"ОстатокТовара");
	КонецЦикла;
	
	Резерв= 0;
	// проверяем резерв товара
	Если Константа.РазрешитьПродаватьРезерв=Перечисление.ДаНет.Нет Тогда
		// Вычислим, сколько зарезервировано всего данного товара
		Резерв= Регистр.РезервыТоваров.СводныйОстаток(Товар,,"РезервТовара");
	КонецЕсли;
    Если Коэффициент>0 Тогда
		Возврат "" + (Окр((ПолныйОстаток-Резерв)/Коэффициент,2)) + " " + Единица;
    Иначе
		Возврат 0;
	КонецЕсли;
КонецФункции
//*/------------------------

//======================================================================
Процедура УстановитьВес()
	Вес = гл_ПолучитьВесТовараДляЕд(Контекст);
КонецПроцедуры // УстановитьВес
//*****************************************************************************

// Предопределенные процедуры

//******************************************************************************
Процедура ВводНового(Скопирован) //Предопределенная процедура

	глЗаполнитьШапку(Контекст);
	Если Скопирован=1 Тогда	//копирование документа
		Возврат;
	КонецЕсли;

	ДатаДок=РабочаяДата();
	
	Если ПустоеЗначение(Контрагент) = 1 Тогда
		Контрагент=Константа.ОсновнойПоставщик;
	КонецЕсли;
	
	Если ПустоеЗначение(Контрагент) = 0 Тогда
		КатегорияЦен = Контрагент.КатегорияЦенПоставщика;
	КонецЕсли;               
	
	ИзмКонтрагент();
	
	Валюта=Константа.ОсновнаяВалютаЗакупки;
	Дата_Курса = ДатаДок;
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта = Гривня;
	КонецЕсли;
	Курс=глКурсДляВалюты(Валюта,Дата_Курса);
	
	Если ПустоеЗначение(КатегорияЦен) = 1 Тогда
		КатегорияЦен = Автор.КатегорияЦен;
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
Процедура ВводНаОсновании(ДокОснование) //Предопределенная процедура

	ВидДок = ДокОснование.Вид();
	Если НЕ((ВидДок = "Договор") или (ВидДок = "Счет") или (ВидДок = "РасходнаяНакладная")) Тогда
		Предупреждение("Заказ поставщику нельзя вводить на основании данного вида документов!");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	ДокументОснование = ДокОснование;                                               	
	глЗаполнитьШапкуНаОсн(Контекст,ДокОснование);
	Валюта = Контрагент.ВалютаВзаиморасчетов;
	Курс = Валюта.Курс.получить(ДатаДок);
	Дата_курса = ДатаДок;
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта = Гривня;
		Курс = 1;
	КонецЕсли;
	
	Если (ДокОснование.Вид() = "Счет") или (ДокОснование.Вид() = "РасходнаяНакладная") Тогда
		ДокОснование.ВыбратьСтроки();
		Пока ДокОснование.ПолучитьСтроку() = 1 Цикл
			НоваяСтрока();
			Товар = ДокОснование.Товар;
			Единица = ДокОснование.Единица;
			Количество = ДокОснование.Количество;
			Коэффициент = ДокОснование.Коэффициент;
			Вес = гл_ПолучитьВесТовараДляЕд(Контекст);
//
			ВалютаЦены = 0; ЦенаТовара = 0; 
			глПолучитьЦенуТовара(Константа.Закупочная,Товар,Единица,ДатаДок,ЦенаТовара,ВалютаЦены);
			ЦенаСНДС = глПересчет(ЦенаТовара,ВалютаЦены,ДатаДок,Валюта,Курс);
			СуммаСНДС = ЦенаСНДС * Количество; //без коэф т.к. цену получили уже за эту единицу измерения.
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

//*****************************************************************************
Процедура ПриОткрытии() //Предопределенная процедура
	НачальнаяДатаДокумента = ДатаДок;
	глПроверкаРазрешенияРедактирования(Контекст);
	Если НазваниеНабораПрав() <> "Администратор" Тогда
		Форма.ТолькоПросмотр(флОтправлен);
	КонецЕсли;
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кнОК.Доступность(0);
		Форма.кнДействия.Доступность(0);

	Иначе
		Форма.КнопкаПоУмолчанию("кнОК");
	КонецЕсли;
	          
	глУстВидимостьЦен(Контекст);
	
	Если НазваниеНабораПрав() <> "Администратор" Тогда
		Форма.КомментарийАдм.Видимость(0);
		Форма.тхтКомментАдм.Видимость(0);
	КонецЕсли;
    ОбновитьНадписи();        
	
	СтараяДата = ДатаДок;  
	//+ralex, 04-02-21 12:24
	стВалюта = Валюта;
	стКурс = Курс;
	
	//проверяем вес
	итогоВес = Итог("Вес");
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Вес = 0 Тогда
			Если Товар.Вес <> 0 Тогда
				Вес = гл_ПолучитьВесТовараДляЕд(Контекст);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	н_итогоВес = Итог("Вес");
	Если итогоВес <> н_итогоВес Тогда
		Записать();
	КонецЕсли;
	
	//+/ralex, 04-02-21 12:24
КонецПроцедуры //При открытии

//*****************************************************************************
Процедура ПриНачалеВыбораЗначения(Рекв,Флаг)
	Флаг=0;
	Если Рекв="Фирма" Тогда
		ВыборФирмы();
	ИначеЕсли Рекв="КатегорияЦен" Тогда
	    ВыборОплаты();
	Иначе
		Флаг=1;
	КонецЕсли;
КонецПроцедуры
//*****************************************************************************
Процедура ОбработкаПодбора(Выб) //Предопределенная процедура
	глПриОбработкеПодбора(Выб,Контекст);
КонецПроцедуры //Обработка подбора

//*****************************************************************************
Процедура ПриЗаписи() //Предопределенная процедура
	Если глМожноЗаписатьДокумент(Контекст)=0 Тогда
		СтатусВозврата(0);                        
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	Если (Выбран() = 0) и (ПустоеЗначение(Автор) = 1) Тогда
		Автор = глПользователь;
	КонецЕсли;
	МенеджерОтбор = Автор.Сотрудник;
	
	//проверяем вес
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Вес = 0 Тогда
			Если Товар.Вес <> 0 Тогда
				Вес = гл_ПолучитьВесТовараДляЕд(Контекст);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ШтрКод = СформироватьШтрихКодДокумента(Контекст,ТекущийДокумент());

КонецПроцедуры
 
Функция Итого()
	// Показ итоговых сумм по документу
	Перем Результат,СуммаБезНДС, СуммаСНДС, СуммаНДС;
	СуммаСНДС = Итог("СуммаСНДС");
	Результат = ?(СуммаСНДС= 0,""," Всего=" + глФРМ(СуммаСНДС, Валюта, 1));
	Возврат Результат;
КонецФункции

Функция Вес()
	// Показ итоговых сумм по документу
	Возврат Итог("Вес");
КонецФункции

//======================================================================
Процедура ОтправитьТаблицуЕмаил(еТабл)
	КаталогВложений = КаталогИБ() + СокрЛП(Фирма.КаталогИсхВложений);
	Если ПустаяСтрока(КаталогВложений) = 1 Тогда
		Предупреждение("Не указан каталог вложений для исходящих писем для фирмы " + Фирма + ". Письмо не отправлено." );
		Возврат;
	Иначе
		Если Прав(КаталогВложений,1) <> "\" Тогда
			КаталогВложений = КаталогВложений + "\";
		КонецЕсли;
	КонецЕсли;
	Вложение = КаталогВложений + Шаблон("[ТекущийДокумент().Вид()]_[ТекущийДокумент().номерДок]");
	еТабл.Записать(Вложение,1); //в формате XLS
	Если ПустаяСтрока(Фирма.ПутьКЕРТпочты) = 1 Тогда
		Предупреждение("В справочнике ""Фирмы"" не указан путь к внешней обработке работы с почтой. Отправка почты невозможна.");
		Возврат;
	КонецЕсли;
	спсПар = СоздатьОбъект("СписокЗначений");
	спсПар.ДобавитьЗначение(Контекст,"конт");
	спсПар.ДобавитьЗначение(Вложение + ".xls","Вложение");
	
//	СКИДЫВАТЬ НА ПОЧТУ МЕНЕДЖЕРОВ(почта заполнена у сотрудников ),прайсы и информацию скидывать на info@stroibum.com.ua,сверки на 
//stroibum@ukr.net

	текСотр = глПользователь.Сотрудник;
	Если ПустоеЗначение(текСотр) = 1 Тогда
		Сообщить("У пользователя " + глПользователь + " не указан сотрудник.");
	Иначе
		емаил = СокрЛП(текСотр.email);
		Если ПустаяСтрока(емаил) = 1 Тогда
			Сообщить("У сотрудника " + глПользователь.Сотрудник + " не указан email");
		КонецЕсли;
	КонецЕсли;
	тхтЕмаил = " информацию по заказу отправлять на почту менеджера: " + емаил + ", ";	
	тхтТема = "Просьба " + ?(ПустаяСтрока(емаил) = 1,"",тхтЕмаил) +"прайсы и информацию на info@stroibum.com.ua, сверки на stroibum@ukr.net";	
	
	спсПар.ДобавитьЗначение(тхтТема,"Тема");
	спсПар.ДобавитьЗначение(СокрЛП(КомментарийПоставщику),"ТекстПисьма");

	ОтправленоНаЕмаил = "";
	ОткрытьФорму("Отчет",спсПар,КаталогИБ() + СокрЛП(Фирма.ПутьКЕРТпочты));
	Если ПустаяСтрока(ОтправленоНаЕмаил) = 0 Тогда
		//готовим запись в спр. состояний документа
		спсДанные = дополненияТорговля.ПодготовитьДанныеОбОтправкеЕмаил(ОтправленоНаЕмаил,глПользователь);
		дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"инфоОбОтправкеЕмаил",спсДанные);
		флОтправлен = 1;
		ЗаписьЖурналаРегистрации("Письмо отправлено: " + ОтправленоНаЕмаил ,,,,4);
	Иначе
		Сообщить("Письмо не отправлено.");
		ЗаписьЖурналаРегистрации("Письмо не отправлено." ,,,,4);
	КонецЕсли;
	Форма.Обновить();
КонецПроцедуры // ОтправитьЕмаил()

Процедура Печать(еМаил = 0)
	Таб = СоздатьОбъект("Таблица");    
	Таб.ИсходнаяТаблица("Таблица1");
	Если Провести() = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	Форма.Обновить();
	глУстПропись(Гривня);
	Фирма.ИспользоватьДату(ДатаДок,1);
	//-ralex, 18-02-23 22:03
	//Если (ПустаяСтрока(Фирма.АдресОтправителя) = 0) и (ПустаяСтрока(Контрагент.АдресПолучателя) = 0) Тогда
	//	Таб.ВывестиСекцию("Кнопки");	
	//КонецЕсли;
	//-/------------------------
	
	Если ПустаяСтрока(КомментарийПоставщику) = 1 Тогда
		Таб.ВывестиСекцию("Шапка<");
		Таб.ВывестиСекцию("Шапка>");
	Иначе
		Таб.ВывестиСекцию("Шапка");
	КонецЕсли;
	Ном = 1;

	классУпаковка = гл_ПолучитьЗначениеДопКонстанты("упаковка");
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл     
		
		едИзмУпаковка = гл_ВернутьЕдиницуИзмеренияТовара(классУпаковка,Товар,0);
		количествоУп = ""; Единица2 = "";
		Если ПустоеЗначение(едИзмУпаковка) = 0 Тогда
			количествоУп = Окр(количество * Единица.Коэффициент / едИзмУпаковка.коэффициент,2); 
			Единица2 = едИзмУпаковка;	
		КонецЕсли;
		
		Таб.ВывестиСекцию("Строка");
		Ном = Ном+1;
	КонецЦикла;

	//нижняя рамка в последней строке
	Обл = Таб.Область(Таб.ВысотаТаблицы(),1,Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы());
	Обл.РамкаСнизу(3);
	
	Таб.ВывестиСекцию("Дно"); 

	Если (ПустаяСтрока(Фирма.АдресОтправителя) = 0) и (ПустаяСтрока(Контрагент.АдресПолучателя) = 0) Тогда
		Таб.ОбластьПечати(2,1,Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы());
	КонецЕсли;
	
	Если (названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер")  ИЛИ (названиенабораправ()="МенеджерТоварищ") Тогда
		Таб.Защита(1);
		//Таб.ОбластьПечати(3,1,3,2); //-ralex, 18-02-23 22:03 //-ralex, 18-02-23 22:03
	КонецЕсли;
	
	Таб.Опции(0,0,,);
	Таб.ТолькоПросмотр(1);
	Если еМаил = 1 Тогда
		ОтправитьТаблицуЕмаил(Таб);
	Иначе
		ВывестиВоФрейм(Таб,0);
		//Таб.Показать("ПЕЧАТЬ: Заказ поставщику " + Контрагент,"");
	КонецЕсли;
КонецПроцедуры                                    

Функция РасшифровкаОбновить(Зн)
	Расш = СоздатьОбъект("СписокЗначений");
	Расш.Установить("Exel",1);
	Возврат Расш;
КонецФункции // РасшифровкаОбновить("Exel")

//======================================================================
Процедура ОбработкаЯчейкиТаблицы(Расшифровка, СтандартнаяОбработка, Таблица) 
	Если ПустоеЗначение(Расшифровка.Получить("Exel")) = 0 Тогда
		ОтправитьТаблицуЕмаил(Таблица);
		//флОтправлен = 1;
		//Записать();
		Провести();
		форма.Обновить();
	КонецЕсли;
КонецПроцедуры

Функция Раскраска()
	стр = "";
	Если (Товар.Акция.Получить(ДатаДок) = 1) и (Товар.Распродажа.Получить(ДатаДок) = 1) Тогда
		//*ralex, 20-02-21 23:12
		//стр = "(BRUSH[" + цветАкция +"])()(BRUSH[" + цветРаспродажа + "])(BRUSH[NONE])()()(FONT[10526880])(FONT[NONE])";
		// -------- заменено на:
		стр = "(BRUSH[" + цветАкция +"])()(BRUSH[" + цветРаспродажа + "])";
		//*/ralex, 20-02-21 23:12
	ИначеЕсли Товар.Акция.Получить(ДатаДок) = 1 Тогда
		//*ralex, 20-02-21 23:12
		//стр = "(BRUSH[" + цветАкция + "])()()(BRUSH[NONE])()(FONT[10526880])(FONT[NONE])";
		// -------- заменено на:
		стр = "(BRUSH[" + цветАкция + "])";
		//*/ralex, 20-02-21 23:12
	ИначеЕсли Товар.Распродажа.Получить(ДатаДок) = 1 Тогда
		//*ralex, 20-02-21 23:12
		//стр = "(BRUSH[" + цветРаспродажа + "])()()(BRUSH[NONE])()(FONT[10526880])(FONT[NONE])";
		стр = "(BRUSH[" + цветРаспродажа + "])";
		//*/ralex, 20-02-21 23:12
	Иначе
		//*ralex, 20-02-21 23:11
		//стр = "()()()()()(FONT[10526880])(FONT[NONE])";
		// -------- заменено на:
		стр = "";
		//*/ralex, 20-02-21 23:11
	КонецЕсли;
	//+ralex, 18-12-20 03:13
	Если Товар.тмцЗаблокирован = 1 Тогда
		стр = ("(FONT[0xA5A5A5] FONT_C[0xA5A5A5] FONT_S[0xA5A5A5])") + стр;
	КонецЕсли;
	//+/ralex, 18-12-20 03:13

	Возврат стр;
КонецФункции

Форма.Товар.ВыполнятьФормулуТолькоПриИзменении(1);

//*****************************************************************************
//Инициализирум список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
	|СтруктураПодчиненности,
	|ВводНаОсновании,
	|ДвиженияДокумента,
	|ОткрытьВЖурнале,
	|Подчиненные,
	|ИзмКомментария");

