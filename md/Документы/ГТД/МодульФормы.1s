//*****************************************************************************
// Описание переменных 
Перем СписокДействий;
Перем СтарыйКонтрагент;
Перем СтараяДата;
Перем СтарДоговорТаможни, СтарДоговорПеревозки;
Перем НачальнаяДатаДокумента;
//*****************************************************************************
// "служебные" функции и процедуры 

//*****************************************************************************
Функция ЗаголовокФормы() 
	Перем Заголовок, Название;

	Заголовок = "ГТД ";
	Название ="ГТД №";
	
	Заголовок = Заголовок + глЗаголовок(Контекст);
	
	Форма.Заголовок(Заголовок);     
	Возврат Название;
КонецФункции //ЗаголовокФормы

//******************************************************************************
Процедура ОбновитьНадписи()
	Форма.ТекстВалюты.Заголовок(глСтрокаВалюты(Контекст));
	Форма.ТекстОснования.Заголовок(СокрП(Основание));
	Форма.ТекстПорядокОплаты.Заголовок(глСтрокаПорядокОплаты(Контекст));
КонецПроцедуры
                     

//******************************************************************************
Функция Итого()
	// Показ итоговых сумм по документу
	Перем Результат, ИтогоСуммаБезНДС, ИтогоСуммаСНДС, ИтогоСуммаНДС;
	ИтогоСуммаБезНДС = Итог("СуммаБезНДС");
	ИтогоСуммаСНДС = Итог("СуммаСНДС");
	ИтогоСуммаНДС = ИтогоСуммаСНДС - ИтогоСуммаБезНДС;
	Результат = ?(ИтогоСуммаБезНДС =0,"","Сумма="+ глФРМ(ИтогоСуммаБезНДС, Валюта, 1))+
	            ?(ИтогоСуммаНДС = 0,""," НДС=" + глФРМ(ИтогоСуммаНДС, Валюта, 1))+
	            ?(ИтогоСуммаСНДС= 0,""," Всего=" + глФРМ(ИтогоСуммаСНДС, Валюта, 1));
	Возврат Результат;
КонецФункции
                
//================================
Процедура УстДоступностьГлубина()
	// нет кредита - нет глубины
	Если Контрагент.ГлубинаКредитаПоставщика.Получить(ДатаДок) = 0 тогда
		Форма.ДатаОплПодпись.Видимость(0);
		Форма.ДатаОпл.Видимость(0);			
		Форма.ГлубинаПодпись.Видимость(0);
		Форма.Глубина.Видимость(0);			
	Иначе
		Форма.ДатаОплПодпись.Видимость(1);
		Форма.ДатаОпл.Видимость(1);			
		Форма.ГлубинаПодпись.Видимость(1);
		Форма.Глубина.Видимость(1);			
	КонецЕсли;	
КонецПроцедуры      

//*****************************************************************************
Процедура ИзмГлубина()
	Если ПустоеЗначение(Глубина) = 1 Тогда              
		Глубина = 0;
	КонецЕсли;	
	ДатаОплаты=глБанковскаяДата(ДатаДок,Глубина);	
КонецПроцедуры

//*****************************************************************************
Процедура УстГлубина() 
	// Формирует и показывает дату оплаты и глубину кредита
	Если Контрагент.ГлубинаКредитаПоставщика.Получить(ДатаДок) <> 0 тогда
		Если Глубина <> Контрагент.ГлубинаКредитаПоставщика.Получить(ДатаДок) тогда
			Глубина=Контрагент.ГлубинаКредитаПоставщика.Получить(ДатаДок);
		КонецЕсли;	
	КонецЕсли;	
	ИзмГлубина();	
КонецПроцедуры //Выбор Глубины
                                                 
// ===============================
Процедура ИзмДоговор()
	Если ПустоеЗначение(Договор)=0 Тогда
		Если Договор.ВидТорговли <> Перечисление.ВидыТорговли.Предоплата Тогда
			глТрассировка(Шаблон("Нельзя выбирать Договор с видом торговли [Договор.ВидТорговли]!!!"),1);
			Договор=0;
		КонецЕсли;                              
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура РаспределитьДопИздержки()
	Если (КоличествоСтрок() = 0) или (Итог("СуммаБезНДС") = 0) Тогда
	    Предупреждение("Табличная часть пуста или валютные суммы нулевые! Не на что распределять дополнительные издержки!");
		ВсегоСуммаАкциза = 0;
		ВсегоСуммаПошлины = 0;
		ВсегоСуммаУслуг = 0;
		ВсегоСуммаПеревозки = 0;
	Иначе
		// распределяем пропорционально сумме вал без НДС
		ВсегоСуммаАкцизаВал = глПересчет(ВсегоСуммаАкциза,Гривня,Дата_курса,Валюта,Курс);
		ВсегоСуммаПошлиныВал = глПересчет(ВсегоСуммаПошлины,Гривня,Дата_курса,Валюта,Курс);
		ВсегоСуммаУслугВал = глПересчет(ВсегоСуммаУслуг,Гривня,Дата_курса,Валюта,Курс);
		ВсегоСуммаПеревозкиВал = глПересчет(ВсегоСуммаПеревозки,ВалютаПеревозки,КурсПеревозки,Валюта,Курс);
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Коэф = СуммаБезНДС/Итог("СуммаБезНДС");
			СуммаАкциза = ВсегоСуммаАкцизаВал * Коэф;
			СуммаПошлины = ВсегоСуммаПошлиныВал * Коэф;
			СуммаУслуг = ВсегоСуммаУслугВал * Коэф;
			СуммаПеревозки = ВсегоСуммаПеревозкиВал * Коэф;
			глВыч_суммы_накл(Контекст,3);
		КонецЦикла;
		// если возникли ошибки округлений, то дельту - в первую строку
		ПолучитьСтрокуПоНомеру(1);
		СуммаАкциза = СуммаАкциза + ВсегоСуммаАкцизаВал - Итог("СуммаАкциза");
		СуммаПошлины = СуммаПошлины + ВсегоСуммаПошлиныВал - Итог("СуммаПошлины");
		СуммаУслуг = СуммаУслуг + ВсегоСуммаУслугВал - Итог("СуммаУслуг");
		СуммаПеревозки = СуммаПеревозки + ВсегоСуммаПеревозкиВал - Итог("СуммаПеревозки");
		глВыч_суммы_накл(Контекст,3);
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмВсегоСуммаПеревозки()
	времВсегоСуммаПеревозки = Окр(глПересчет(Итог("СуммаПеревозки"),Валюта,Курс,ВалютаПеревозки,КурсПеревозки),2);
	Если ВсегоСуммаПеревозки <> времВсегоСуммаПеревозки Тогда
	    Рез = Вопрос("Указанная сумма перевозки отличается от итоговой по табличной части. Распределить дополнительные издержки?","Да+Нет");
		Если Рез = "Нет" Тогда
		    ВсегоСуммаПеревозки = времВсегоСуммаПеревозки;
		Иначе
			РаспределитьДопИздержки();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмВалютаПеревозки()
	КурсПеревозки = глКурсДляВалюты(ВалютаПеревозки, Дата_Курса);
	ИзмВсегоСуммаПеревозки();
КонецПроцедуры

// ===============================
Процедура ИзмКурсПеревозки()
	ИзмВсегоСуммаПеревозки();
КонецПроцедуры

// ===============================
Процедура ИзмДата_КурсаПеревозки()
	КурсПеревозки = глКурсДляВалюты(ВалютаПеревозки, Дата_Курса);
	ИзмВсегоСуммаПеревозки();
КонецПроцедуры

// ===============================
Процедура ИзмПеревозчик()
	Если Константа.ПодставлятьОсновнойДоговор = Да Тогда
		ДоговорПеревозки = Перевозчик.ОсновнойДоговорТорг;    
	КонецЕсли;
	ВалютаПеревозки = Константа.ОсновнаяВалютаЗакупки;
	Дата_курсаПеревозки = ДатаДок;
	КурсПеревозки = глКурсДляВалюты(ВалютаПеревозки,Дата_КурсаПеревозки);
КонецПроцедуры

// ===============================
Процедура ИзмТаможня()
	Если Константа.ПодставлятьОсновнойДоговор = Да Тогда
		ДоговорТаможни = Таможня.ОсновнойДоговорТорг;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмВсегоСуммаПошлины()
	времВсегоСуммаПошлины = Окр(глПересчет(Итог("СуммаПошлины"),Валюта,Курс,Гривня,Дата_курса),2);
	Если ВсегоСуммаПошлины <> времВсегоСуммаПошлины Тогда
	    Рез = Вопрос("Указанная сумма пошлины отличается от итоговой по табличной части. Распределить дополнительные издержки?","Да+Нет");
		Если Рез = "Нет" Тогда
		    ВсегоСуммаПошлины = времВсегоСуммаПошлины;
		Иначе
			РаспределитьДопИздержки();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмВсегоСуммаАкциза()
	времВсегоСуммаАкциза = Окр(глПересчет(Итог("СуммаАкциза"),Валюта,Курс,Гривня,Дата_курса),2);
	Если ВсегоСуммаАкциза <> времВсегоСуммаАкциза Тогда
	    Рез = Вопрос("Указанная сумма пошлины отличается от итоговой по табличной части. Распределить дополнительные издержки?","Да+Нет");
		Если Рез = "Нет" Тогда
		    ВсегоСуммаАкциза = времВсегоСуммаАкциза;
		Иначе
			РаспределитьДопИздержки();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмВсегоСуммаУслуг()
	времВсегоСуммаУслуг = Окр(глПересчет(Итог("СуммаУслуг"),Валюта,Курс,Гривня,Дата_курса),2);
	Если ВсегоСуммаУслуг <> времВсегоСуммаУслуг Тогда
	    Рез = Вопрос("Указанная сумма пошлины отличается от итоговой по табличной части. Распределить дополнительные издержки?","Да+Нет");
		Если Рез = "Нет" Тогда
		    ВсегоСуммаУслуг = времВсегоСуммаУслуг;
		Иначе
			РаспределитьДопИздержки();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры              

// ===============================
Процедура ИзмСуммаПеревозки()
	ВсегоСуммаПеревозки = глПересчет(Итог("СуммаПеревозки"),Валюта,Курс,ВалютаПеревозки,КурсПеревозки);
	ИзмВсегоСуммаПеревозки();
КонецПроцедуры

// ===============================
Процедура ИзмСуммаПошлины()
	ВсегоСуммаПошлины = глПересчет(Итог("СуммаПошлины"),Валюта,Курс,Гривня,Дата_курса);
	ИзмВсегоСуммаПошлины();	
КонецПроцедуры

// ===============================
Процедура ИзмСуммаАкциза()
	ВсегоСуммаАкциза = глПересчет(Итог("СуммаАкциза"),Валюта,Курс,Гривня,Дата_курса);
	ИзмВсегоСуммаАкциза();		
КонецПроцедуры
    
// ===============================
Процедура ИзмСуммаУслуг()
	ВсегоСуммаУслуг = глПересчет(Итог("СуммаУслуг"),Валюта,Курс,Гривня,Дата_курса);
	ИзмВсегоСуммаУслуг();			
КонецПроцедуры

// ===============================
Процедура Печать()
	Таб = СоздатьОбъект("Таблица");  

	ПечФорма = "Накладная";
	Язык = глЯзык(ПечФорма); 	
	Таб.ИсходнаяТаблица(ПечФорма);
	глУстПропись(Валюта,Язык);
	
	Фирма.ИспользоватьДату(ДатаДок,1);
	
	Таб.ВывестиСекцию("Шапка");
	Ном = 1;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл             
		ПечЦена = глФРМ(ЦенаБезНДС,Валюта,0);
		ПечСумма = глФРМ(СуммаБезНДС,Валюта,0);
		Таб.ВывестиСекцию("Строка");
		Ном = Ном+1;
	КонецЦикла;          
	ПечБезНДС = глФРМ(Итог("СуммаБезНДС"),Валюта,0);
	ПечНДС = глФРМ(Итог("СуммаСНДС") - Итог("СуммаБезНДС"),Валюта,0);
	ПечСНДС = глФРМ(Итог("СуммаСНДС"),Валюта,0);	
	// суммы прописью
	СуммаВалПрописью = Формат(Итог("СуммаСНДС"),"ЧПДС");
	глУстПропись(Гривня,Язык);
	СуммаГрнПрописью = Формат(глПересчет(Итог("СуммаСНДС"),Валюта,Курс,Гривня,Дата_курса),"ЧПДС");
	глУстПропись(Валюта,Язык);
	
	СуммаНДС = глПересчет(Итог("СуммаСНДС")-Итог("СуммаБезНДС")+(Итог("СуммаАкциза")+Итог("СуммаПошлины")+Итог("СуммаУслуг"))*глПроцентНДС(Перечисление.ЗначенияНДС.ОсновнаяСтавкаНДС)/100,Валюта,Курс,Гривня,Дата_курса);
	
	Таб.ВывестиСекцию("Дно");
	Таб.ТолькоПросмотр(1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.Опции(0,0,,);
	Таб.Показать("ПЕЧАТЬ: Приходная накладная","");

КонецПроцедуры
    
//******************************************************************************
Процедура ПриВводеНаОсновании(ДокОснование)
	Перем ВидОсн;
	
	Если ПустоеЗначение(ДокОснование) = 1 Тогда
		Возврат;
	КонецЕсли;

	ВидОсн = ДокОснование.Вид();

	Валюта = ДокОснование.Валюта;
	Дата_Курса = ДокОснование.Дата_Курса;
	Курс = ДокОснование.Курс;
	
	глЗаполнитьШапкуНаОсн(Контекст,ДокОснование); 
	
	ИзмДоговор();
	УстГлубина();
	УстДоступностьГлубина();
	
КонецПроцедуры


//*****************************************************************************
// функции и процедуры, вызываемые из формул элементов диалога

//******************************************************************************
Процедура Взаиморасчеты(Кл)
	глПоказатьДолг(Контекст, Кл, "Закупка");
КонецПроцедуры

//*****************************************************************************
Процедура ВыборФирмы()
	// по кнопке редактирования параметров фирмы в докумнете
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ИнформацияОфирме", КонтекстДокумента);
	ОбновитьНадписи();
КонецПроцедуры	
	
//*****************************************************************************
Процедура ВыборОплаты()
	// Процедура по кнопке редактирования параметров оплаты в докумнете
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ИнформацияОценах", КонтекстДокумента);
	ОбновитьНадписи();
КонецПроцедуры	

//*****************************************************************************
Процедура ИзмКонтрагент() // Процедура при выборе Контрагента в докумнете
    Если Контрагент.Выбран()=1 Тогда                                      
		Если СтарыйКонтрагент <> Контрагент Тогда
			// изменили Контрагента  
			Если Контрагент.ВидКонтрагента <> Перечисление.ВидыКонтрагентов.Нерезидент Тогда
				Контрагент = СтарыйКонтрагент;
				глТрассировка("Контрагент должен быть нерезидентом !!!",1);
				Возврат;
			КонецЕсли;
			// очистим договор
			Договор = ПолучитьПустоеЗначение("Документ.Договор");
			Если Константа.ПодставлятьОсновнойДоговор = Да Тогда
				// подставим договор по умолчанию                                 
				Если ПустоеЗначение(Контрагент.ОсновнойДоговорТорг) = 0 Тогда
					Если Фирма = Контрагент.ОсновнойДоговорТорг.Фирма Тогда
						Договор = Контрагент.ОсновнойДоговорТорг;
					КонецЕсли;	
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
	Иначе
		//Не выбран Контрагент - не имеет смысла показывать глубину и дату оплаты и договор
		Договор = ПолучитьПустоеЗначение("Документ.Договор");
	КонецЕсли;
	СтарыйКонтрагент = Контрагент;
//	УстДоступность(); 
	УстГлубина();
	УстДоступностьГлубина();
// Формирует и показывает дату оплаты
	ОбновитьНадписи();
КонецПроцедуры	
	                    
// ===============================
Процедура Подбор()
	Варианы= СоздатьОбъект("СписокЗначений");
	Варианы.ДобавитьЗначение("по каталогу");
	Варианы.ДобавитьЗначение("по прайсу");
	Результат = 0;
	Если Варианы.ВыбратьЗначение(,,Результат,,1)=1 Тогда
	    Если Результат = 1 Тогда
			глПодбор(Контекст,"номенклатура","ДляПодбора")
		ИначеЕсли Результат = 2 Тогда
			глПодбор(Контекст,"прайс_лист","ДляПодбора")
	    КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//*****************************************************************************
Процедура ВыборОснования()
	// Процедура по кнопке редактирования основания в докумнете
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", КонтекстДокумента);
	ИзмДоговор();
	ОбновитьНадписи();
КонецПроцедуры	

//*****************************************************************************
// Предопределенные процедуры
                        
Процедура ПриВыбореЗакладки(Номер,Значение)
	Форма.ИспользоватьСлой("Совместный,"+Значение,2);        
	глУстановкаРеквизитаТип(Контекст);
КонецПроцедуры

//******************************************************************************
Процедура ВводНового(Скопирован) //Предопределенная процедура

	Если Скопирован=1 Тогда	//копирование документа
		Возврат;
	КонецЕсли;

	глЗаполнитьШапку(Контекст);
	
	ДатаДок=РабочаяДата();

	Если ПустоеЗначение(Контрагент) = 1 Тогда
		// находим первого нерезидента в справочнике
		СпрК = СоздатьОбъект("Справочник.Контрагенты");
		СпрК.ВыбратьЭлементы();
		Пока СпрК.ПолучитьЭлемент() = 1 Цикл
			Если СпрК.ВидКонтрагента = Перечисление.ВидыКонтрагентов.Нерезидент Тогда
				Контрагент = СпрК.ТекущийЭлемент();
				Прервать;
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;
	
	Если ПустоеЗначение(Контрагент) = 1 Тогда
		Контрагент=Константа.ОсновнойПоставщик;
	КонецЕсли;
	
	Валюта=Константа.ОсновнаяВалютаЗакупки;
	
	Если ПустоеЗначение(Контрагент) = 0 Тогда
		КатегорияЦен = Контрагент.КатегорияЦенПоставщика;
	КонецЕсли;
	
	ИзмКонтрагент();
	
	Дата_Курса = ДатаДок;
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта = Гривня;
	КонецЕсли;
	Курс=глКурсДляВалюты(Валюта,Дата_Курса);
		
	Если ПустоеЗначение(КатегорияЦен) = 1 Тогда
		КатегорияЦен = Автор.КатегорияЦен;
	КонецЕсли;      
	
	ВидТорговли = Перечисление.ВидыТорговли.Предоплата;
	
	ИзмДоговор();

	УстГлубина();
	УстДоступностьГлубина();
	
КонецПроцедуры
                           
//******************************************************************************
Процедура ВводНаОсновании(ДокОснование)
	Перем ВидОсн;
	
	ВидОсн = ДокОснование.Вид();
	
	Автор = глПользователь;
	
	ДатаДок=РабочаяДата();
	
	ПриВводеНаОсновании(ДокОснование);
	
	Если ПустоеЗначение(КатегорияЦен)=1 Тогда
		Если ПустоеЗначение(Контрагент)=0 Тогда
			КатегорияЦен = Контрагент.КатегорияЦен;    
		КонецЕсли;	    
	КонецЕсли;          
	
	Если ПустоеЗначение(КатегорияЦен)=1 Тогда
		КатегорияЦен = Автор.КатегорияЦен;
	КонецЕсли;        
	
    Если ПустоеЗначение(Контрагент) = 0 Тогда                                      
		Если СтарыйКонтрагент <> Контрагент Тогда
			// изменили Контрагента  
			Если Контрагент.ВидКонтрагента <> Перечисление.ВидыКонтрагентов.Нерезидент Тогда
				Контрагент = СтарыйКонтрагент;
				глТрассировка("Контрагент должен быть нерезидентом !!!",1);
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//*****************************************************************************
Процедура ПриОткрытии() //Предопределенная процедура
	
	НачальнаяДатаДокумента = ДатаДок;
	глПроверкаРазрешенияРедактирования(Контекст);
	
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кнОК.Доступность(0);
		Форма.кнПровести.Доступность(0);
		Форма.кнДействия.Доступность(0);
		
		Форма.кнПодбор.Доступность(0);
		
		Форма.кнОснование.Доступность(0);
	Иначе
		Форма.КнопкаПоУмолчанию("кнОК");
	КонецЕсли;
	          
    ОбновитьНадписи(); 
	глУстВидимостьЦен(Контекст);

	СтараяДата = ДатаДок;

	ВсегоСуммаПошлины = глПересчет(Итог("СуммаПошлины"),Валюта,Курс,Гривня,Дата_Курса);
	ВсегоСуммаАкциза = глПересчет(Итог("СуммаАкциза"),Валюта,Курс,Гривня,Дата_Курса);
	ВсегоСуммаУслуг = глПересчет(Итог("СуммаУслуг"),Валюта,Курс,Гривня,Дата_Курса);
	Если Перевозчик.Выбран() = 1 тогда
		ВсегоСуммаПеревозки = глПересчет(Итог("СуммаПеревозки"),Валюта,Курс,ВалютаПеревозки,КурсПеревозки);
	КонецЕсли;	
	
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной","Основные");
	Форма.Закладки.ДобавитьЗначение("Дополнительный","ГТД");
	Форма.ИспользоватьСлой("Основной, Совместный",2);
	
	УстДоступностьГлубина();
	
	СтарыйКонтрагент = Контрагент;
	глУстановкаРеквизитаТип(Контекст);
	
КонецПроцедуры //При открытии



//*****************************************************************************
// Проверка на соответсвие договра с таможней 
// и кредитного документа таможни
Процедура СоотвДогИКредДокТаможни()
	// проверяем на соответствие с кредитным документом
	Если глЕстьРеквизитШапки("Контрагент",КредДокументТаможни.Вид()) = Да тогда
		Если КредДокументТаможни.Контрагент = ДоговорТаможни.Контрагент тогда
			Если глЕстьРеквизитШапки("Договор",КредДокументТаможни.Вид()) = Да тогда
				Если ДоговорТаможни = КредДокументТаможни.Договор тогда
					Возврат
				Иначе
					глТрассировка("Договор таможни не соответсвует кредитному документу таможни !!!",1);
					КредДокументТаможни = 0;
				КонецЕсли;	
			ИначеЕсли глЕстьРеквизитШапки("ДокументОснование",КредДокументТаможни.Вид()) = Да тогда
				Если ДоговорТаможни = КредДокументТаможни.ДокументОснование тогда
					Возврат;
				Иначе
					глТрассировка("Договор таможни не соответсвует кредитному документу таможни !!!",1);
					КредДокументТаможни = 0;
				КонецЕсли;	
			КонецЕсли;	
			Возврат;
		Иначе                       			
			глТрассировка("Договор таможни не соответсвует кредитному документу таможни !!!",1);
			КредДокументТаможни = 0;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

//*****************************************************************************
// Проверка на соответсвие договра с перевозчиком 
// и кредитного документа перевозчика
Процедура СоотвДогИКредДокПеревозки()
	// проверяем на соответствие с кредитным документом
	Если глЕстьРеквизитШапки("Контрагент",КредДокументПеревозки.Вид()) = Да тогда
		Если КредДокументПеревозки.Контрагент = ДоговорПеревозки.Контрагент тогда
			Если глЕстьРеквизитШапки("Договор",КредДокументПеревозки.Вид()) = Да тогда
				Если ДоговорПеревозки = КредДокументПеревозки.Договор тогда
					Возврат
				Иначе
					глТрассировка("Договор перевозки не соответсвует кредитному документу таможни !!!",1);
					КредДокументПеревозки = 0;
				КонецЕсли;	
			ИначеЕсли глЕстьРеквизитШапки("ДокументОснование",КредДокументПеревозки.Вид()) = Да тогда
				Если ДоговорПеревозки = КредДокументПеревозки.ДокументОснование тогда
					Возврат;
				Иначе
					глТрассировка("Договор перевозки не соответсвует кредитному документу таможни !!!",1);
					КредДокументПеревозки = 0;
				КонецЕсли;	
			КонецЕсли;	
			Возврат;
		Иначе                       			
			глТрассировка("Договор перевозки не соответсвует кредитному документу таможни !!!",1);
			КредДокументТаможня = 0;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры


//*****************************************************************************
Процедура ИзмКредДокументПеревозки()
	Если КредДокументПеревозки.Выбран() = 1 Тогда                 			
		Если глЕстьРеквизитШапки("Контрагент",КредДокументПеревозки.Вид()) = Да тогда
			Если КредДокументПеревозки.Контрагент <> Перевозчик тогда
				глТрассировка("Кредитный документ перевозки не соответсвует перевозчику!!!",1);
				КредДокументТаможня = 0;
				Возврат;
			КонецЕсли;	
		КонецЕсли;
		Если ДоговорПеревозки.Выбран() = 1 тогда
			СоотвДогИКредДокПеревозки();					
		КонецЕсли;
	КонецЕсли;			
КонецПроцедуры
		
//*****************************************************************************
Процедура ИзмКредДокументТаможни()
	Если КредДокументТаможни.Выбран() = 1 Тогда                 
		Если глЕстьРеквизитШапки("Контрагент",КредДокументТаможни.Вид()) = Да тогда
			Если КредДокументТаможни.Контрагент <> Таможня тогда
				глТрассировка("Кредитный документ таможни не соответсвует таможне!!!",1);
				КредДокументТаможни = 0;
				Возврат;
			КонецЕсли;	
		КонецЕсли;
		Если ДоговорТаможни.Выбран() = 1 тогда 
			СоотвДогИКредДокТаможни();					                
		КонецЕсли;
	КонецЕсли;			
КонецПроцедуры


//*****************************************************************************
Процедура ИзмДоговорТаможни()
	Если ДоговорТаможни.Выбран() = 1 Тогда                 
		Если СтарДоговорТаможни = ДоговорТаможни тогда
			Возврат;
		КонецЕсли;	
		// проверяем на соответствие с таможней
		Если Таможня <> ДоговорТаможни.Контрагент тогда
			Таможня = ДоговорТаможни.Контрагент;
		КонецЕсли;	            
		Если КредДокументТаможни.Выбран() = 1 тогда
			СоотвДогИКредДокТаможни();					
		КонецЕсли;	
	КонецЕсли;			
КонецПроцедуры

//*****************************************************************************
Процедура ИзмДоговорПеревозки()
	Если ДоговорПеревозки.Выбран() = 1 Тогда                 
		Если СтарДоговорПеревозки = ДоговорПеревозки тогда
			Возврат;
		КонецЕсли;	
		// проверяем на соответствие с таможней
		Если Перевозчик <> ДоговорПеревозки.Контрагент тогда
			Перевозчик = ДоговорПеревозки.Контрагент;
		КонецЕсли;	            
		Если КредДокументПеревозки.Выбран() = 1 тогда
			СоотвДогИКредДокПеревозки();
		КонецЕсли;	
	КонецЕсли;			
КонецПроцедуры

//*****************************************************************************
Процедура ПриНачалеВыбораЗначения(Рекв,Флаг)
	Флаг=0;
	Если (Рекв="Фирма") или (Рекв="Склад") Тогда
		ВыборФирмы();     
	ИначеЕсли Рекв="КатегорияЦен" Тогда
	    ВыборОплаты();
	ИначеЕсли (Рекв="ДоговорТаможни") Тогда
		Если Таможня.Выбран()=1 Тогда       
			СтарДоговорТаможни = ДоговорТаможни;
			Фрм = СоздатьОбъект("СписокЗначений");
			Фрм.Установить("Контрагент",Таможня);
			Фрм.Установить("ВыбиратьДополнения",0);
			ОткрытьПодбор("Журнал.Договора",,Фрм,0,ДоговорТаможни);			
			ИзмДоговорТаможни();
		КонецЕсли;
	ИначеЕсли (Рекв="ДоговорПеревозки") Тогда
		Если Таможня.Выбран()=1 Тогда
			СтарДоговорПеревозки = ДоговорПеревозки;
			Фрм = СоздатьОбъект("СписокЗначений");
			Фрм.Установить("Контрагент",Перевозчик);
			Фрм.Установить("ВыбиратьДополнения",0);
			ОткрытьПодбор("Журнал.Договора",,Фрм,0,ДоговорПеревозки);
			ИзмДоговорПеревозки();
		КонецЕсли;                      
	Иначе
		Флаг=1;
	КонецЕсли;
КонецПроцедуры
//*****************************************************************************
Процедура ОбработкаПодбора(Выб) //Предопределенная процедура
	глПриОбработкеПодбора(Выб,Контекст);
КонецПроцедуры //Обработка подбора

//*****************************************************************************
Процедура ПриЗаписи() //Предопределенная процедура
	Если глМожноЗаписатьДокумент(Контекст)=0 Тогда
		СтатусВозврата(0);                        
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
КонецПроцедуры
 
Форма.Товар.ВыполнятьФормулуТолькоПриИзменении(1);

//*****************************************************************************
//Инициализирум список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
    |ТоварныйСостав,
	|ОбновлениеЦен,
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ВводНаОсновании,
	|ОткрытьВЖурнале,
	|Подчиненные,
	|ИзмКомментария");