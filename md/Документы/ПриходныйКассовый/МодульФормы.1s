//*****************************************************************************
// Описание переменных 
Перем СписокДействий,новый;
Перем СтарыйКонтрагент;
Перем СтараяДата;
Перем ПравоПользователяКассовые;

Перем НачальнаяДатаДокумента;
//*****************************************************************************
// "служебные" функции и процедуры 
//******************************************************************************
Процедура ОбновитьНадписи()
	// Формируем информационные строки
	Форма.ТекстОснования.Заголовок(СокрП(Основание));
	Форма.ТекстРежимаОплаты.Заголовок(глСтрокаРежимОплаты(Контекст,РежимОплаты));
	Форма.ТекстВалюты.Заголовок(глСтрокаВалюты(Контекст));
КонецПроцедуры


//Процедура ВыборОплаты()
//	// Процедура по кнопке редактирования параметров оплаты в докумнете
//	Перем КонтекстДокумента;
//	КонтекстДокумента = глВзятьКонтекст(Контекст);
//	ОткрытьФормуМодально("Обработка.ИнформацияОценах", КонтекстДокумента);
//	ОбновитьНадписи();
//КонецПроцедуры	


//*ralex.zp@gmail.com, 2015-03-27 23:35:08
////*****************************************************************************
//Функция УстДоступность() 
//	Если названиенабораправ()<>"Администратор" Тогда
//	    Если распечатан=1 Тогда
//	        форма.толькопросмотр(1);
//	    КонецЕсли;
//	КонецЕсли;	
//	Если ВидОперации = Перечисление.ВидыОплаты.Корректировка Тогда
//		Форма.Контрагент.Доступность(0);
//		Форма.тКонтрагент.Доступность(0);
//	Иначе
//		Форма.Контрагент.Доступность(1);
//		Форма.тКонтрагент.Доступность(1);
//	КонецЕсли;	
//	Форма.ИнфКнопка.Доступность(Контрагент.Выбран());
//	Возврат "";
//КонецФункции
// -------- заменено на:
//*****************************************************************************
Функция УстДоступность() 
	Если названиенабораправ()<>"Администратор" Тогда
	    Если распечатан=1 Тогда
	        форма.толькопросмотр(1);
	    КонецЕсли;
	КонецЕсли;	
	Если ВидОперации = Перечисление.ВидыОплаты.Корректировка Тогда
		Форма.Контрагент.Доступность(0);
		Форма.тКонтрагент.Доступность(0);
	Иначе
		Форма.Контрагент.Доступность(1);
		Форма.тКонтрагент.Доступность(1);
	КонецЕсли;	
	Форма.ИнфКнопка.Доступность(Контрагент.Выбран());
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.кнПечать.Доступность(0);
		Форма.кнЗаполнить.Доступность(0);
	Иначе
		Форма.кнПечать.Доступность(Проведен());
	КонецЕсли;
	Возврат "";
КонецФункции
//*/ralex.zp@gmail.com, 2015-03-27 23:35:08

//*****************************************************************************
Функция ЗаголовокФормы() 
	Перем Заголовок, Название;
	Заголовок = "Приходный кассовый ордер";
	Название = "Приходный ордер";
	
	Если ВидОперации = Перечисление.ВидыОплаты.Возврат Тогда
		Заголовок = Заголовок + " (возврат)";
		Название = Название + " (возврат)";
	КонецЕсли;
	Название = Название + " № ";
	
	Заголовок = Заголовок + глЗаголовок(Контекст);
	
    Форма.Заголовок(Заголовок);               
	Возврат Название;
КонецФункции //ЗаголовокФормы

//******************************************************************************
Процедура Заполнить(ПоКнопке = 0)
	
	Если глПереоформитьДокумент(Контекст, ДокументОснование,ПоКнопке) = 0 Тогда
		СуммаСНДС = 0;
		ОбновитьНадписи();
		СуммаСНДС = 0;
		Возврат;
	КонецЕсли;
	Если Контрагент.Выбран() = 1 Тогда
		Если ТипУчета = Упр Тогда
			ВалУч = Контрагент.ВалютаВзаиморасчетов;
		Иначе
			ВалУч = Гривня;
		КонецЕсли;
		
		Если ВидОперации = Перечисление.ВидыОплаты.Оплата Тогда
			СуммаСНДС = глПересчет(глДолгКонтрагента(Контекст ,-1, ТипУчета, Фирма, Контрагент, Договор ,ДокументОснование),ВалУч,ДатаДок,Валюта,ДатаДок);
		Иначе
			СуммаСНДС = глПересчет(глДолгКонтрагента(Контекст ,+1, ТипУчета, Фирма, Контрагент, Договор ,ДокументОснование),ВалУч,ДатаДок,Валюта,ДатаДок);
		КонецЕсли;
	Иначе
		СуммаСНДС = 0;
	КонецЕсли;
	ОбновитьНадписи();
КонецПроцедуры

//*****************************************************************************
// функции и процедуры, вызываемые из формул элементов диалога

//*****************************************************************************
Процедура Взаиморасчеты()
	Если ВидОперации = Перечисление.ВидыОплаты.Оплата Тогда
		// "Продажа"
		глПоказатьДолг(Контекст, Контрагент, "Продажа");
	ИначеЕсли ВидОперации = Перечисление.ВидыОплаты.Возврат Тогда
		// "ВозвратПоставщику"
		глПоказатьДолг(Контекст, Контрагент, "Закупка");
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
Процедура ИзмВидОперации()
	Если ВидОперации = Перечисление.ВидыОплаты.Оплата Тогда
		Форма.тКонтрагент.Заголовок("Покупатель:");
	ИначеЕсли ВидОперации = Перечисление.ВидыОплаты.Возврат Тогда
		Форма.тКонтрагент.Заголовок("Поставщик:");     
	ИначеЕсли ВидОперации = Перечисление.ВидыОплаты.Корректировка Тогда
		Контрагент = 0;
		ДокументОснование = 0;
		Договор = 0;
	КонецЕсли;	
КонецПроцедуры

//******************************************************************************
Процедура ИзмДата()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
	ОбновитьНадписи();
КонецПроцедуры

//*****************************************************************************
Процедура ВыборФирмы()
	// по кнопке редактирования параметров фирмы в докумнете
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ИнформацияОфирме", КонтекстДокумента);
	ОбновитьНадписи();
КонецПроцедуры	
	
//*****************************************************************************
Процедура ВыборОплаты()
	// Процедура по кнопке редактирования параметров оплаты в докумнете
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ИнформацияОценах", КонтекстДокумента);
	ОбновитьНадписи();
КонецПроцедуры	

//******************************************************************************
Процедура ИзмКонтрагент()
	Если Контрагент.Выбран()=1 Тогда
		ПринятоОт=?(ПустоеЗначение(Контрагент.ПолнНаименование)=0,Контрагент.ПолнНаименование,Контрагент.Наименование);
		// ручное изменение Контрагента
		Если СтарыйКонтрагент <> Контрагент Тогда
			// только если изменили
			Если РежимОплаты = Перечисление.РежимыОплаты.АвтоСлужебный Тогда
				Договор = ПолучитьПустоеЗначение("Документ.Договор");
			Иначе
				// очистим договор
				Договор = ПолучитьПустоеЗначение("Документ.Договор");
				Если Константа.ПодставлятьОсновнойДоговор = Да Тогда
					// подставим договор по умолчанию                                 
					Если ПустоеЗначение(Контрагент.ОсновнойДоговорТорг) = 0 Тогда
						Если Фирма = Контрагент.ОсновнойДоговорТорг.Фирма Тогда
							Договор = Контрагент.ОсновнойДоговорТорг;
						КонецЕсли;	
					КонецЕсли;	
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Иначе
		// нет контрагента, нет и договора
		Договор = ПолучитьПустоеЗначение("Документ.Договор");
	КонецЕсли;
	СтарыйКонтрагент = Контрагент;  
	ОбновитьНадписи();
КонецПроцедуры

//*****************************************************************************
Процедура ВыборОснования()
	// Процедура по кнопке редактирования основания в докумнете
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	//*ralex, 11-03-23 14:53
	//ОткрытьФормуМодально("Обработка.ОснованиеДокумента", КонтекстДокумента);        
	// -------- заменено на:
	ОткрытьФорму("Обработка.ОснованиеДокумента", КонтекстДокумента);        
	//*/------------------------
	Если ПустоеЗначение(СуммаСНДС) = 1 Тогда
	    // запоняем только если пользователь не задал сумму
		Заполнить();
	КонецЕсли;
	// Могли изменить Контрагента
	ОбновитьНадписи();
КонецПроцедуры	

// ===============================
Процедура ПечатьОрдера(БыстраяПечать=0)
	Если (названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер")  ИЛИ (названиенабораправ()="МенеджерТоварищ") Тогда
		Если новый=1 Тогда
		    возврат;
		КонецЕсли;
	КонецЕсли;                       
	Если (названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер") ИЛИ (названиенабораправ()="МенеджерТоварищ") Тогда
		Распечатан=1; 		
		провести();			
	    //записать();
		Если проведен()=0 Тогда
		СТАТУСВОЗВРАТА(0);    
		КонецЕсли;
		форма.толькопросмотр(1);
		Если выбран()=1 Тогда
		    новый=0;
		КонецЕсли;		
	КонецЕсли;	
	Таб = СоздатьОбъект("Таблица"); 
	Таб.ИсходнаяТаблица("ОрдерУ");
	
	Фирма.ИспользоватьДату(ДатаДок);
	
	Если ПустоеЗначение(СтавкаНДС)=0 Тогда
		НДС = СуммаСНДС*(глПроцентНДС(СтавкаНДС)/(100+глПроцентНДС(СтавкаНДС)));
	Иначе
		Если Проведен()=0 Тогда
			Предупреждение ("Документ можно распечатать только после проведения, т.к. не задана Ставка НДС");
			Возврат;
		Иначе 
			// определим сумму НДС
			НДС = 0;
			Рег = СоздатьОбъект("Регистр.ВзаиморасчетыПокупателей");
			Рег.ВыбратьДвиженияДокумента(ТекущийДокумент());
			Пока Рег.ПолучитьДвижение()=1 Цикл
				Если ПустоеЗначение(Рег.Фирма)=0 Тогда
					// Фин. учет
					стНДС = Рег.СтавкаНДС;
					Если ПустоеЗначение(стНДС)=1 Тогда
					    стНДС = Константа.ОсновнаяСтавкаНДС;
					КонецЕсли;
				    НДС = НДС + Рег.Долг * глПроцентНДС(стНДС) / (100 + глПроцентНДС(стНДС));
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;                   

	Если (ПустоеЗначение(СокрЛП(Основание)) = 1) И
		(ПустоеЗначение(Договор) = 0) Тогда
		ПечОснование=Договор.ПредставлениеВида()+" № " + Договор.НомерДок + 
			" от " + Формат(Договор.ДатаДок,"ДДММГГ");
	Иначе		
		ПечОснование=Основание;
	КонецЕсли;			
	
	глУстПропись(Валюта,"У");
	
	Таб.Вывести();
	Таб.Опции(0,0,0,0,"");
	Если БыстраяПечать = 1 Тогда
		Таб.ПараметрыСтраницы(,,,,,,,,,1,,);
		Таб.КоличествоЭкземпляров(Константа.ПечКолЭкзПрихОрдераПриБыстройПродаже);
		Таб.Напечатать(глОтладка);
	Иначе
		//*ralex.zp@gmail.com, 2015-03-27 23:02:12
		//Таб.Защита(Константа.ФлагЗащитыТаблиц);
		// -------- заменено на:
		Таб.Защита(1);
		//*/ralex.zp@gmail.com, 2015-03-27 23:02:12
		Таб.ТолькоПросмотр(1);
		Таб.Показать("ПЕЧАТЬ: Приходный кассовый ордер","");
	КонецЕсли;
	
	глУстПропись(Гривня);	
	Распечатан=1;
	//-ralex.zp@gmail.com, 2015-03-27 23:20:33
	//записать();	//не работает т.к. нет прав у пользователя		
	//-/ralex.zp@gmail.com, 2015-03-27 23:20:33
	//+ralex.zp@gmail.com, 2015-03-27 23:15:34
	Провести();
	//+/ralex.zp@gmail.com, 2015-03-27 23:15:34
	УстДоступность();	
КонецПроцедуры
              
// ===============================
Процедура ПечатьНаБланк()

	//-ralex.zp@gmail.com, 2015-03-27 23:26:12
	//Таб = СоздатьОбъект("Таблица");    
	//Таб.ИсходнаяТаблица("НаБланкУ");
	//Фирма.ИспользоватьДату(ДатаДок);
	//глУстПропись(Валюта,"У");
	//// Если впечатывание работает неправильно, измените следующие настройки
	//Ориентация = 1;			// ориентация вывода на печать: 1 - портрет, 2 - ландшафт
	//Масштаб = 100;			// масштаб (в процентах) вывода на печать
	//РежимПечатиКопий = 1;	// 0 - выводить сначала первые страницы копий, 1 - выводить страницы копий по порядку
	//    ПолеСлева = 7;			// расстояние (в миллиметрах) от левого края страницы
	//ПолеСправа = 5;			// расстояние (в миллиметрах) от правого края страницы                                                                             
	//    ПолеСверху = 6;			// расстояние (в миллиметрах) от верхнего края страницы                                                                             
	//    ПолеСнизу = 10;			// расстояние (в миллиметрах) от нижнего края страницы
	//    // Конец задания настроек
	//Таб.ПараметрыСтраницы(Ориентация,Масштаб,РежимПечатиКопий,ПолеСлева,ПолеСправа,ПолеСверху,ПолеСнизу,,);
	////
	//СуммаЦел = ?(Цел(СуммаСНДС) < 1, "Нуль", Формат(Цел(СуммаСНДС),"ЧП"));
	//СуммаКоп = (СуммаСНДС - Цел(СуммаСНДС)) * 100;                                          
	//СуммаКоп = ?(СуммаКоп < 10,"0"+Строка(СуммаКоп),СуммаКоп);
	//ДеньДок = ?(ДатаЧисло(ДатаДок) < 10,"0"+Строка(ДатаЧисло(ДатаДок)),ДатаЧисло(ДатаДок));
	//МесяцДок = Сред(Формат(ДатаДок,"ДДДММММГГГГ"),Найти(Формат(ДатаДок,"ДДДММММГГГГ")," ")+1);
	//МесяцДок = Сред(МесяцДок, 1, Найти(МесяцДок," ")-1);                                                                                           
	//ГодДок = Сред(Строка(ДатаГод(ДатаДок)),3,2);                 
	//Если (ПустоеЗначение(СокрЛП(Основание)) = 1) И
	//	(ПустоеЗначение(Договор) = 0) Тогда
	//	ПечОснование=Договор.ПредставлениеВида()+" № " + Договор.НомерДок + 
	//		" от " + Формат(Договор.ДатаДок,"ДДММГГ");
	//Иначе		
	//	ПечОснование=Основание;
	//КонецЕсли;			
	////
	//Таб.Вывести();        
	//Таб.Опции(0,0,0,0,"");
	//Таб.Показать("Приходный ордер для бланка строгой отчетности","");
	//глУстПропись(Гривня);
	//-/ralex.zp@gmail.com, 2015-03-27 23:26:12
КонецПроцедуры

// ===============================
Процедура ВыборВариантаПечати()
	//*ralex.zp@gmail.com, 2015-03-27 23:41:12
	//Перем ВыбЗначение;
	//ВариантыПечати = СоздатьОбъект("СписокЗначений");
	//ВариантыПечати.ДобавитьЗначение(1,"Кассовый ордер");
	//ВариантыПечати.ДобавитьЗначение(2,"Печать на бланк строгой отчетности");
	//Если ВариантыПечати.ВыбратьЗначение(выбЗначение,"",,,1) <> 1 Тогда
	//    Возврат;
	//КонецЕсли;
	//Если ВыбЗначение = 1 Тогда
	//    ПечатьОрдера();
	//ИначеЕсли ВыбЗначение = 2 Тогда
	//	ПечатьНаБланк();
	//КонецЕсли;
	// -------- заменено на:
	   ПечатьОрдера();
	//*/ralex.zp@gmail.com, 2015-03-27 23:41:12
КонецПроцедуры

// ===============================
Процедура УстНомерОрдера()     
	Если ((РСчет.Выбран()=1) и (ПустоеЗначение(НомерОрдера) = 1)) Тогда
		НомерОрдера = РСчет.ПоследнийПрихДок + 1;
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура УстРСчет()     
	Если РСчет.Выбран() = 1 Тогда
		Если РСчет.БезНал = 0  Тогда
			УстНомерОрдера();
			Возврат;
		КонецЕсли;		
	КонецЕсли;		
	
	СпрРС = СоздатьОбъект("Справочник.НашиДенежныеСчета");
	СпрРС.ИспользоватьВладельца(Фирма);
	
	СпрРС.ВыбратьЭлементы();
	Пока СпрРС.ПолучитьЭлемент() = 1 цикл
		Если ((СпрРС.Валюта = Валюта) и (СпрРС.БезНал = 0)) тогда
			РСчет = СпрРС.ТекущийЭлемент(); 
			Кас = 1;
			Прервать;
		КонецЕсли;	
	КонецЦикла;	          	                                                  
	УстНомерОрдера();
	
КонецПроцедуры

//*****************************************************************************
// Предопределенные процедуры

//******************************************************************************
 Процедура ПриНачалеВыбораЗначения(Элемент,Флаг) // Предопределенная

	Если (Элемент = "Фирма") или (Элемент = "РСчет") Тогда
		Флаг = 0;
		ВыборФирмы();                             
		Валюта = РСчет.Валюта;   
		УстНомерОрдера();
	КонецЕсли;
	
КонецПроцедуры //ПриНачалеВыбораЗначения

//******************************************************************************
Процедура ВводНового(Скопирован)
	Если ПравоПользователяКассовые = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
    новый=1;   
	распечатан=0;	
	глЗаполнитьШапку(Контекст);
	Если Скопирован=1 Тогда	//копирование документа
		Возврат;
	КонецЕсли;
	
	Валюта    = Гривня;
	Дата_Курса = ДатаДок;
	Курс=глКурсДляВалюты(Валюта,Дата_Курса);

	ВидОперации = Перечисление.ВидыОплаты.Оплата;
	РежимОплаты = Перечисление.РежимыОплаты.КонкретныйДоговор;
	СтавкаНДС = Константа.ОсновнаяСтавкаНДС;

	Контрагент = ПолучитьПустоеЗначение("Справочник.Контрагенты");
	Если ПустоеЗначение(глАктивныйДоговор) = 0 Тогда
		Контрагент = глАктивныйДоговор.Владелец;
		Договор = глАктивныйДоговор;
		ПринятоОт=?(ПустоеЗначение(Контрагент.ПолнНаименование)=0,Контрагент.ПолнНаименование,Контрагент.Наименование);
		СтарыйКонтрагент = Контрагент;
	Иначе
		Контрагент=Константа.ОсновнойПокупатель;
		ИзмКонтрагент();
	КонецЕсли;

	УстРСчет();	
	Заполнить(0);
	//+ralex, 15-11-20 02:29
	спрВалюты = СоздатьОбъект("Справочник.Валюты");
	Если спрВалюты.НайтиПоКоду(980) = 1 Тогда
		Валюта = спрВалюты.ТекущийЭлемент();
	Иначе
		Валюта = Гривня;
	//+/ralex, 15-11-20 02:29
	КонецЕсли;
КонецПроцедуры


//******************************************************************************
Процедура ВводНаОсновании(ДокОснование)
	Перем ДокВид, ВидыОснований;
    новый=1;   
	распечатан=0;
	
	Если ПравоПользователяКассовые = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	ДокВид = ДокОснование.Вид();
	ВидКонтрагента = "Контрагенты";
	
	Если ДокВид = "РасходныйКассовый"  Тогда
		Если ДокОснование.ВидОперации = Перечисление.ВидыОплаты.Возврат Тогда
		    СтатусВозврата(0);
			Предупреждение("Приходный ордер нельзя выписывать"+РазделительСтрок+
			               "на основании расходного ордера с признаком 'возврат'!");
			Возврат;
		КонецЕсли;
		ВидОперации=Перечисление.ВидыОплаты.Возврат;
	
	ИначеЕсли ДокВид = "РасходнаяНакладная" Тогда
		Если ДокОснование.ВидОперации = 1 Тогда
			ВидОперации = Перечисление.ВидыОплаты.Возврат;
		Иначе
			ВидОперации = Перечисление.ВидыОплаты.Оплата;
		КонецЕсли;
		
	ИначеЕсли ДокВид = "РасходнаяРеализатора" Тогда
		Если ДокОснование.ВидОперации = 0 Тогда
		    СтатусВозврата(0);
			Предупреждение("Приходный ордер нельзя выписывать"+РазделительСтрок+
			               "на основании расходной реализатора с признаком 'возврат'!");
			Возврат;
		Иначе
			ВидОперации = Перечисление.ВидыОплаты.Оплата;
		КонецЕсли;
		
	ИначеЕсли ДокВид = "РасходнаяРозничная" Тогда
		
		Если ДокОснование.ЧекНаВозврат = 1 Тогда
			ВидОперации=Перечисление.ВидыОплаты.Возврат;
		Иначе
		    ВидОперации=Перечисление.ВидыОплаты.Оплата;
		КонецЕсли;
		
	ИначеЕсли ДокВид = "ОтчетКА" Тогда
		
		ВидОперации=Перечисление.ВидыОплаты.Оплата;
		
	Иначе
		ВидОперации = Перечисление.ВидыОплаты.Оплата;
	КонецЕсли;	

	Автор=глПользователь;
	ДатаДок=РабочаяДата();
	РежимОплаты = Перечисление.РежимыОплаты.КонкретныйДоговор;
	
	глЗаполнитьШапкуНаОсн(Контекст, ДокОснование);

	ПринятоОт = Контрагент.Наименование;
	
	Если ПустоеЗначение(Валюта) = 1 тогда
		Валюта=глВалютаВзаиморасчетов(Контрагент);
		Курс = глКурсДляВалюты(Валюта,ДатаДок);
	КонецЕсли;

	УстРСчет();
	Заполнить();   
	
	Если глЕстьРеквизитМнЧ("СуммаСНДС",ДокОснование.Вид()) = Да Тогда
		Если СуммаСНДС = 0 Тогда                                                             
			ВалУч = ?(ТипУчета = Упр,глВалютаВзаиморасчетов(Контрагент),Гривня);
			Вл = ?(глЕстьРеквизитШапки("Валюта",ДокОснование.Вид()) = Да,ДокОснование.Валюта,ВалУч);
			СуммаСНДС = глПересчет(ДокОснование.Итог("СуммаСНДС"),Вл,ДатаДок,Валюта,ДатаДок);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

//******************************************************************************
Процедура ПриОткрытии()
	Перем Позиция;  
	
	Если ПравоПользователяКассовые = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;

	Если новый<>1 тогда
		новый=0;
	КонецЕсли;  
	Если (названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер")  ИЛИ (названиенабораправ()="МенеджерТоварищ") Тогда
		ЕСли (проведен()=1) ИЛИ (ПометкаУдаления()=1) тогда		
			форма.толькопросмотр(1);			
		КонецЕсли;		
		форма.распечатан.доступность(0);
	Иначе
		форма.распечатан.доступность(1);
	КонецЕсли;
	
	НачальнаяДатаДокумента = ДатаДок;
	глПроверкаРазрешенияРедактирования(Контекст);
	глУстановкаРеквизитаТип(Контекст);
	
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кнОК.Доступность(0);
		Форма.кнПровести.Доступность(0);
		Форма.кнДействия.Доступность(0);
		
		Форма.кнОчиститьНДС.Доступность(0);
		Форма.кнЗаполнить.Доступность(0);
		
		Форма.кнОснование.Доступность(0);
	Иначе
	    Форма.КнопкаПоУмолчанию("кнОК");
	КонецЕсли;
	
	Если НазваниеНабораПрав() <> "Администратор" Тогда
		Форма.тхтКомментАдм.Видимость(0);
		Форма.КомментарийАдм.Видимость(0);
	КонецЕсли;
	
	ОбновитьНадписи();
	ИзмВидОперации();
	СтараяДата = ДатаДок;
	УстДоступность();
	                      
	Если ПустоеЗначение(Форма.Параметр)=0 Тогда
		Если ТипЗначенияСтр(Форма.Параметр)="Строка" Тогда
			Если ВРег(Форма.Параметр)="БЫСТРАЯПЕЧАТЬ" Тогда
				//Если вызвано для из операции "быстрой продажи"
				ПечатьОрдера(1);
				СтатусВозврата(0); 
				Возврат;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
Процедура ПриЗаписи()
	Если ПравоПользователяКассовые = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	Если глМожноЗаписатьДокумент(Контекст)=0 Тогда
		СтатусВозврата(0);                        
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;               
	
	Если РСчет.ПоследнийПрихДок < НомерОрдера Тогда
		Сч = СоздатьОбъект("Справочник.НашиДенежныеСчета");
		Сч.ИспользоватьВладельца(Фирма);
		Сч.НайтиЭлемент(РСчет);
		Сч.ПоследнийПрихДок = НомерОрдера;
		Сч.Записать();
	КонецЕсли;
	новый=0;
	ГруппаПользователей = Автор.Родитель;
КонецПроцедуры

//*****************************************************************************
//Инициализирум список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ВводНаОсновании,
	|ОткрытьВЖурнале,
	|Подчиненные,
	|ИзмКомментария");
	
спрКонтрПрава = СоздатьОбъект("КонтрагентыПрава");
ПравоПользователяКассовые = спрКонтрПрава.ПолучитьПравоПользователя(,"флКассовые"); 