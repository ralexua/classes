//*****************************************************************************
// Описание переменных 
Перем ДатаОплаты,новый;
Перем СписокДействий;
Перем СтарыйКонтрагент;
Перем СтараяДата;
Перем РезервыТоваров;
Перем НачальнаяДатаДокумента;
Перем стНеликвид,стСорт;
Перем спрКонтрПрава;
Перем стТовар; 
перем текФрейм;
Перем ЗаказДвери;
Перем разрешеныСкидки;

Функция ПоставитьЗадачуВCRM(структураВходПарам = 0)
	спсПарам = СоздатьОбъект("Структура");
	Если структураВходПарам = 0 Тогда
		спсПарам.Вставить("Заголовок", " " + ТекущийДокумент());
		спсПарам.Вставить("Описание", СокрЛП(ОписаниеЗадачи));
		спсПарам.Вставить("ДатаНачала", ДатаДок);
		спсПарам.Вставить("ДатаКонца", срокИсполненияЗадачи);
		спсПарам.Вставить("users_id", СотрудникЗадачи);
		спсПарам.Вставить("конт", глВернутьКонтекст(Контекст));
	Иначе
		спсПарам = структураВходПарам;
	КонецЕсли;
	
	API_CRM = СоздатьОбъект("API_CRM");
	рез = API_CRM.ПоставитьЗадачу_API(спсПарам);
	Если рез <> 0 Тогда
		id_задачиВ_CRM = СокрЛП(id_задачиВ_CRM) + ?(ПустаяСтрока(id_задачиВ_CRM) = 1,"",",") + рез;
		Записать();
	КонецЕсли;
	Возврат рез;  //если о то задача не поставлена
КонецФункции // ПоставитьЗадачуВCRM()

Процедура ОткрытьДокОснование()
	Если ПустоеЗначение(ДокументОснование) = 0 Тогда
		ОткрытьФорму(ДокументОснование,,1);
	КонецЕсли;
КонецПроцедуры

//======================================================================
//открываем спр "Контрагенты с отбором по списку найденых контрагентов с указанным номером
Процедура ПоискПоТелефону()
	перем стр;
	Если ВвестиСтроку(стр,"введите номер телефона или его часть",18,) = 0 Тогда
		Возврат;
	КонецЕсли;
	допТорг = СоздатьОбъект("дополненияТорговля");
	тз = допТорг.НайтиКонтрагентаПоНомеруТелефона(стр);
	Если тз = 0 Тогда
		Предупреждение("Контрагент с номером " + сокрЛП(стр) + " не найден.");
		Возврат;
	КонецЕсли;
	спс = СоздатьОбъект("СписокЗначений");
	тз.выгрузить(спс,,,"Контрагент");
	ОткрытьПодбор("Справочник.Контрагенты","ДляВыбора",спс,0);
КонецПроцедуры // ПоискПоТелефону

//======================================================================
Процедура ПередатьДокументНаОтправку()
	_email = СоздатьОбъект("_email");
	Расш = _email.создатьСписокПараметров(Контекст,,1,"pdf");
	ТаблДок = текФрейм.ПанельИнструментов.Документ;
	_email.ОтправкаПисьма(Расш,ТаблДок);
КонецПроцедуры // ПередатьДокументНаОтправку

//----работа  с фреймом -------

//======================================================================
//Процедура ОбработкаЯчейкиТаблицы (Значение, ФлагСтандОбр, Таблица, Адрес)
//	Сообщить ("ОбработкаЯчейкиТаблицы: Значение = " + Значение);
//КонецПроцедуры

//Процедура ПриВыбореЯчейки(Документ, НомерСтроки, номерКолонки)
//	Если НазваниеНабораПрав() <> "Администратор" Тогда
//		Возврат;
//	КонецЕсли;
//	//Сообщить("Выбрана ячейка " + номерСтроки + ":" + НомерКолонки);
//	Обл = Документ.область(НомерСтроки,номерКолонки);
//	//Сообщить(обл.цветФона);
//	Если Обл.ЦветФона <> ЦветВыкл Тогда
//		Обл.цветФона = ЦветВыкл;
//	Иначе
//		Обл.ЦветФона = ЦветВкл;
//	КонецЕсли;
//	текФрейм.обновить();
//КонецПроцедуры

Процедура ЗакрытьФрейм ()
	Если ТипЗначенияСтр (текФрейм) <> "ТабличныйДокумент.Фрейм" Тогда
		//Сообщить ("Фрейм не был открыт");
		Возврат;
	КонецЕсли;
	текФрейм.Закрыть ();
КонецПроцедуры

//======================================================================
Функция СоздатьМеню()
	меню = СоздатьОбъект("Йоксель.Меню");
	меню.Добавить("емаил","емаил","емаил1");
	меню.Добавить("контрагент","выбрать клиента","контрагент1");
	Возврат меню;
КонецФункции // СоздатьМеню

Процедура ДобавитьКнопку(идКн,заголовокКн,значениеКн,доступностьКн = 1,этоФлажок = 0,ВыбКнопкаЗначениеФлажка = 0,ВыбКнопкаСМеню = 0)
	Если ТипЗначенияСтр (текФрейм) <> "ТабличныйДокумент.Фрейм" Тогда
		Сообщить ("Фрейм не был открыт");
		Возврат;
	КонецЕсли;
	
	Панель = текФрейм.ПанельИнструментов;
	Кнопка = Панель.ДобавитьКнопку (идКн);
	Кнопка.Заголовок = заголовокКн;
	Кнопка.Значение = значениеКн;
	Кнопка.Доступность = доступностьКн;
	Кнопка.ЭтоФлажок = этоФлажок;
	Кнопка.ЗначениеФлажка = ВыбКнопкаЗначениеФлажка; //1/0
	Если ВыбКнопкаСМеню = 1 Тогда
		Кнопка.Меню = СоздатьМеню ();
	Иначе
		Кнопка.Меню = 0;
	КонецЕсли;
КонецПроцедуры

Процедура ПоКомандеПользователя (Документ, Команда, Значение)
	//Сообщить ("Поступила команда: " + Команда + ", Ассоциированное значение: " + Значение);
	//Если Значение = "обновить" Тогда
	//	ЗакрытьФрейм();
	//	ОбработкаЯчейкиТаблицы(Расшифровка, 0, Т);
	//КонецЕсли;
	
	//Если Значение = "сохрИзм" Тогда
	//	СохранитьИзмененияВТоварах();
	//КонецЕсли;
	
	Если Значение = "sendEmail" Тогда
		спсПарам = СоздатьОбъект("СписокЗначений");
		спсПарам.Установить("Формат",1); //excel
		спсПарам.Установить("ИДКонтекста",Метаданные.ПолныйИдентификатор());
		спсПарам.Установить("Тема",Метаданные.Идентификатор);
		ПередатьДокументНаОтправку();
	//ИначеЕсли Значение = "контрагент1"  Тогда
	//	текКонтрагент = выбКонтрагент;
	//	Если ВвестиЗначение(текКонтрагент,"Справочник.Контрагенты") <> 1 Тогда
	//		Возврат;
	//	КонецЕсли;
	//	Если ПустаяСтрока(текКонтрагент.АдресПолучателя) = 1 Тогда
	//		Предупреждение("У клиента не указан email");
	//		Возврат;
	//	КонецЕсли;
	//	спсПарам = СоздатьОбъект("СписокЗначений");
	//	спсПарам.Установить("Формат",1); //excel
	//	спсПарам.Установить("ИДКонтекста","Отчет.РабочийПрайс");
	//	спсПарам.Установить("Тема","Прайс");
	//	спсПарам.установить("емаил",СокрЛП(текКонтрагент.АдресПолучателя));
	//	ОтправитьЕмаил(спсПарам);
	КонецЕсли;
	//Если Значение = "счРасш" Тогда
	//	ТаблДок = текФрейм.ПанельИнструментов.Документ;
	//	Обл = ТаблДок.область(15,1);
	//	Если Обл.содержитРасшифровку = 1 Тогда
	//		Сообщить(Обл.Расшифровка() + " :: " + Обл.Расшифровка().код);
	//	Иначе
	//		Сообщить(Обл + " не содержит расшифровки");
	//	КонецЕсли;
	//КонецЕсли;

КонецПроцедуры

//======================================================================
Процедура ВставитьКолонки(передКолонкой,квоКолонок)
	//ТабЭлемент.Документ.ВставитьКолонки (ВыбКолонка, ВыбКоличествоКолонок);
	//ТабЭлемент.Обновить ();
	текФрейм.ПанельИнструментов.Документ.ВставитьКолонки(передКолонкой,квоКолонок);
КонецПроцедуры // ВставитьКолонки

//======================================================================
Процедура ВызовКонтекстногоМеню()
КонецПроцедуры // гл

Процедура ВывестиВоФрейм(ТаблМХЛ,еМаил = 0)
	ТаблДок = СоздатьОбъект ("ТабличныйДокумент");
	ТаблДок.ЗагрузитьИзТаблицы (ТаблМХЛ);
	
	текФрейм = ТаблДок.Показать ("" + ТекущийДокумент());
	текФрейм.ТолькоПросмотр(1);
	Панель = текФрейм.ПанельИнструментов;
	ЭлемУправления = текФрейм.получитьЭлементУправления(1);
	Панель.ПодписатьсяНаСобытие ("КомандаПользователя", "ПоКомандеПользователя");
	//ЭлемУправления.ПодписатьсяНаСобытие ("ВыборЯчейки", "ПриВыбореЯчейки");
	//ЭлемУправления.ПодписатьсяНаСобытие ("ВызовКонтекстногоМеню", "ВызовКонтекстногоМеню");
	//текФрейм.ФиксироватьСтрокиСверху(фиксСтрок);
	//Панель.ПодписатьсяНаСобытие ("ОбработкаЯчейкиТаблицы", "ОбработкаЯчейкиТаблицы");
	ДобавитьКнопку("email","email","sendEmail",,,,0);
	//ДобавитьКнопку("обновить","Обновить","обновить");
	//Если НазваниеНабораПрав() = "Администратор" Тогда
	//	ДобавитьКнопку("сохрИзм","Записать изм.","сохрИзм");
	//КонецЕсли;
	//ДобавитьКнопку("СчитатьРасшифровку","Расшифровка","счРасш");
	Панель.Видимость = 1;
	Если еМаил = 1 Тогда
		ПередатьДокументНаОтправку();
		ЗакрытьФрейм();
	КонецЕсли;
	//ТаблДок.ВставитьКолонки(ТаблДок.ШиринаТаблицы() + 1, 2);
КонецПроцедуры // ВывестиВоФрейм
//---конец работы с фреймом -------

//*****************************************************************************
Функция ЗаголовокФормы() 
	Перем Заголовок, Название;
	Заголовок = "Доставка ";
	Название ="Доставка №";
	Заголовок = Заголовок + глЗаголовок(Контекст);
	Форма.Заголовок(Заголовок);     
	Возврат Название;
КонецФункции //ЗаголовокФормы

//******************************************************************************
Процедура ОбновитьНадписи()
	//*ralex, 16-09-21 01:26
	//Форма.ТекстОснования.Заголовок(СокрП(Основание));
	// -------- заменено на:
	Форма.кнОснование.Заголовок(СокрП(Основание));
	//*/------------------------
КонецПроцедуры
                       
Процедура ИзмТовар()
	Если стТовар <> Товар Тогда
		СуммаСкидки = 0;
	КонецЕсли;	
КонецПроцедуры // ИзмТовар

//******************************************************************************
Процедура ИзмДатаДок()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
	ОбновитьНадписи();
КонецПроцедуры

Процедура ИзмДатаДоставки()
	Если НазваниеНабораПрав() <> "Администратор" Тогда
		срокИсполненияЗадачи = ДатаДоставки;
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
Функция Итого()
	// Показ итоговых сумм по документу
	Перем Результат,СуммаБезНДС, СуммаСНДС, СуммаНДС;
	СуммаБезНДС = Итог("СуммаБезНДС");
	СуммаСНДС = Итог("СуммаСНДС");
	СуммаНДС = СуммаСНДС - СуммаБезНДС;
	Результат = ?(СуммаБезНДС =0,"","Сумма="+ глФРМ(СуммаБезНДС, Валюта, 1))+
	            ?(СуммаНДС = 0,""," НДС=" + глФРМ(СуммаНДС, Валюта, 1))+
	            ?(СуммаСНДС= 0,""," Всего=" + глФРМ(СуммаСНДС, Валюта, 1));
	Возврат Результат;
КонецФункции
                           
//*****************************************************************************
// функции и процедуры, вызываемые из формул элементов диалога

Функция УстДоступность()
	Если названиенабораправ()<>"Администратор" Тогда
		Если распечатан=1 Тогда
			форма.толькопросмотр(1);
		КонецЕсли;
		Форма.КомментарийАдм.Доступность(0);
	КонецЕсли;
	Форма.Этаж.Доступность(Занос);
	Попытка
		Если НазваниеНабораПрав() <> "Администратор" Тогда
			поз = Форма.Закладки.НайтиЗначение("CRM");
			Если ДатаДоставки = Дата(0) Тогда
				Если поз <> 0 Тогда
					Форма.Закладки.УдалитьЗначение(поз);
					Форма.Обновить();
				КонецЕсли;
			ИначеЕсли поз = 0 Тогда
				Форма.Закладки.ДобавитьЗначение("CRM","CRM");
				Форма.Обновить();
			КонецЕсли;
		КонецЕсли;
	Исключение
	КонецПопытки;
	
	Возврат "";
КонецФункции

//******************************************************************************
//возвращает многострочный текст с остатками товара по складам
//Функция ОстаткиСтрокой(ОстаткиТоваров,текТовар,текЕд)
//	Перем Результат;
//	Если ПустоеЗначение(текТовар)=1 Тогда
//		Возврат "";
//	КонецЕсли;
//	ИзмФирма=глПустаяФирма;
//	Результат="";
//	
//	Если ТипЗначенияСтр(спсМХ) <> "СписокЗначений" Тогда
//		спсМХ =  СоздатьОбъект("СписокЗначений");
//		спсМХ.ДобавитьЗначение(Склад);
//	КонецЕсли;
//	
//	// если объекты регистры не переданы через параметры процедуры, то создаем.
//	// при этом врем. расчет не производим
//	Если ПустоеЗначение(ОстаткиТоваров)=1 Тогда
//		ОстаткиТоваров=СоздатьОбъект("Регистр.ОстаткиТоваров");
//	КонецЕсли;
//	Для сч = 1 По спсМХ.РазмерСписка() Цикл
//		текМХ = спсМХ.ПолучитьЗначение(сч,);
//		ОстатокТовара=ОстаткиТоваров.Остаток(ИзмФирма,текТовар,текМХ,Сорт,"ОстатокТовара"); 
//		Попытка
//			Если текЕд.Коэффициент <> 1 Тогда
//				ОстатокТовара = ОстатокТовара/текЕд.Коэффициент;
//			КонецЕсли;
//		Исключение
//			//разберем ошибку
//			Если ПустоеЗначение(текЕд) = 1 Тогда
//				Сообщить("Для товара " + текТовар.Код + " " + текТовар + " не найдена единица измерения " + текЕд);
//			КонецЕсли;
//			Если ПустоеЗначение(текТовар) = 1 Тогда
//				Сообщить("В функцию передан пустой параметр ""текТовар""");
//			КонецЕсли;
//			Сообщить(ОписаниеОшибки());			
//		КонецПопытки;
//		Если ОстатокТовара = 0 Тогда
//			Продолжить;
//		КонецЕсли;
//		Результат = Результат + СокрЛП(текМХ)+ ": " + СокрЛП(Формат(Окр(ОстатокТовара,2),глФорматКоличестваВформах))+" "+текЕд.Единица;
//	КонецЦикла;
//	Если ПустаяСтрока(Результат) = 1 Тогда
//		Результат = "товар отсутствует."
//	КонецЕсли;
//	Возврат Результат;
//КонецФункции

//======================================================================
Процедура ВывестиСтрокуТовара(Таб,допТорг,старыйТовар,КвоБаз,ном,КвоВДок,ЕдВДок,текПартияПост)
	ЕдИзмМесто = допТорг.ПолучитьЕдиницуИзмеренияТовараПоКлассификатору(старыйТовар,гл_ПолучитьЗначениеДопКонстанты("упаковка"));
	ЕдИзмБазовая = допТорг.ПолучитьЕдиницуИзмеренияТовараПоКлассификатору(старыйТовар,старыйТовар.БазоваяЕдиница);
	ном = ном + 1;	ОстатокСтрокой = ""; тхтМест = "";  тхтКоличествоСклад = "";
	Если ЕдИзмМесто <> 0 Тогда
		ВМестах = Окр(КвоБаз/ЕдИзмМесто.Коэффициент,3);
		Разница = ВМестах-Цел(ВМестах);
		Если ВМестах < 1 Тогда
			тхтМест = "" + КвоБаз +  " " + ЕдИзмБазовая;
		Иначе
			тхтМест = "" + Цел(ВМестах) + " " + ЕдИзмМесто + ?(Разница = 0, "", " + "+(КвоБаз - Цел(ВМестах)*ЕдИзмМесто.Коэффициент) + " " + ЕдИзмБазовая);
		КонецЕсли;
		тхтКоличествоСклад = "" + КвоБаз +  " " + ЕдИзмБазовая;
		//ОстатокСтрокой = ОстаткиСтрокой(ОстаткиТоваров,старыйТовар,ЕдИзмБазовая);
	Иначе //если у товара нет единицы измерения = Константа.Упаковка. Выводим в той единице, которая в документе
		ВМестах = КвоВДок;
		тхтМест = "" + ВМестах + " " + ЕдВДок;
		тхтКоличествоСклад = "" + КвоВДок +  " " + ЕдВДок;
		//ОстатокСтрокой = ОстаткиСтрокой(ОстаткиТоваров,старыйТовар,ЕдВДок);
	КонецЕсли;
	
	Если ПустоеЗначение(текПартияПост) = 1 Тогда
		стрСтрока = "Строка_Доставка";
		тхтПартия = "";
	Иначе
		стрСтрока = "Строка_Партия_Доставка";
		тхтПартия = "партия: " + текПартияПост;
	КонецЕсли;
	
	Если НЕ(старыйТовар = "") Тогда
		высота1 = Таб.ВысотаТаблицы();
		Таб.ВывестиСекцию(стрСтрока);
		высота2 = Таб.ВысотаТаблицы();
		Если старыйТовар.Распродажа.Получить(ДатаДок) = 1 Тогда
			текСекция = таб.Область(высота1 + 1,1,высота2,таб.ШиринаТаблицы());
			текСекция.ЦветФона(14342874);
		КонецЕсли;
	КонецЕсли;
	
	//Если флСОстатками = 1 Тогда
	//	Таб.ВывестиСекцию("Остаток");
	//КонецЕсли;
КонецПроцедуры // ВывестиСтрокуТовара(Таб,старыйТовар,КвоБаз,ном);

Процедура Печать(БыстраяПечать=0,еМаил = 0)
	Если (названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер") ИЛИ (названиенабораправ()="МенеджерТоварищ") Тогда
		Если новый=1 Тогда
			возврат;
		КонецЕсли; 
		Если пометкаудаления()=1 тогда
			сообщить("Документ помечен на удаление!!!"); 
			статусвозврата(0);
			возврат;
		КонецЕсли;	
		//0000000
		Если датадок>рабочаядата() тогда
			сообщить("Можно печатать документ только в текущей дате!!!");  
			статусвозврата(0);
			возврат;
		КонецЕсли;	     
		Если Проведен() = 0 Тогда
			Если (Провести() = 0) Тогда
				Сообщить("Перед печатью документ должен быть проведен.");
				СтатусВозврата(0); Возврат;
			КонецЕсли;			
		КонецЕсли;
		
		Если Проведен() = 1 Тогда
			Если Форма.ТолькоПросмотр() = 0 Тогда
				Если (Провести() = 0) Тогда
					Сообщить("Перед печатью документ должен быть проведен.");
					СтатусВозврата(0); Возврат;
				КонецЕсли;			
			КонецЕсли;
		КонецЕсли;
		//форма.толькоПросмотр(1);
		Форма.Обновить();
		Если выбран()=1 Тогда
			новый=0;
		КонецЕсли;		
	КонецЕсли;		
	
	Таб = СоздатьОбъект("Таблица");  	
	ВП = ДокументОснование.Валюта;  
	КурсПечати = ДокументОснование.Курс;                     
	ДатаКурса = ДокументОснование.Дата_Курса;
	АвторКратко = Врег(Лев(Автор,2));
	склад = ДокументОснование.склад;
	
	тхтЗанос = "БЕЗ ЗАНОСА";
	Если Занос = 1 Тогда
		тхтЗанос = "ЗАНОС " + ?(Этаж <> 0,"" + Этаж + " этаж","");
	КонецЕсли;
	
	Если ПустоеЗначение(Контрагент) = 0 Тогда
		Если Контрагент.ВидКонтрагента <> Перечисление.ВидыКонтрагентов.Нерезидент Тогда
			Если ТипУчета > 0 Тогда
				ВП = Гривня;  
				КурсПечати = глКурсДляВалюты(ВП,ДокументОснование.ДатаДок);                     
				ДатаКурса = ДокументОснование.ДатаДок;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;	
	
	ИмяФайлаПечатнойФормы = КаталогИБ()+"ExtForms\PrnForms\Dostavka_ukr.mxl";		
	Если ФС.СуществуетФайл(ИмяФайлаПечатнойФормы) = 1 Тогда
		ПечФорма = ИмяФайлаПечатнойФормы;
	Иначе
		ПечФорма = "Доставка";
		Язык = глЯзык(ПечФорма); 	
	КонецЕсли;
	Если Распечатан = 1 Тогда
		ИмяФайлаПечатнойФормы = КаталогИБ()+"ExtForms\PrnForms\Dostavka_ukr_Дубликат.mxl";		
		Если ФС.СуществуетФайл(ИмяФайлаПечатнойФормы) = 1 Тогда
			ПечФорма = ИмяФайлаПечатнойФормы;
		Иначе
			ПечФорма = "Доставка";
			Язык = глЯзык(ПечФорма); 	
			ПечФорма = ПечФорма + "_Дубликат";
		КонецЕсли;
	КонецЕсли;
	Таб.ИсходнаяТаблица(ПечФорма);
	Язык = глЯзык(ПечФорма); 	
	глУстПропись(ДокументОснование.Валюта,Язык);
	
	тхтТекущаяДата = "" + ТекущаяДата() + " " + ТекущееВремя(); //+ralex, 16-03-19 23:23
	Фирма.ИспользоватьДату(ДатаДок,1); 
	//Если ШтрКод = 0 Тогда
	//	Предупреждение("Для документа не сгенерирован штрихкод. Необходимо записать документ.");
	//	Возврат;
	//КонецЕсли;
	//ПечШтрихКод=Строка(ШтрКод);
	//Если (Фирма.менятьПоставщика=1) И (Контрагент.печатьФОП=1) тогда
	//	Таб.ВывестиСекцию("Секция_8"); 
	//Иначе	
	//	Таб.ВывестиСекцию("Шапка"); 
	//КонецЕсли;	
	//номерЭкземпляра = 1;
	//Таб.ВывестиСекцию("Секция_7_Склад"); 
	Ном = 1;
	ВСоставе = 0;  ИтВес=0;
	
	//*********** доставка *****************
	//color14286732
	датаВремяДоставки = "доставка " + Формат(ДатаДоставки,"ДДММММГГ") + ?(ПустаяСтрока(ВремяДоставки) = 1,""," в " + СокрЛП(ВремяДоставки));
	
	Таб.ВывестиСекцию("Шапка_Доставка"); 
	Ном = 1;
	ВСоставе = 0;  ИтВес=0;
	ИтогСумма_БНДС = 0;
	ИтогСумма_НДС = 0;
	ИтогСумма_СДНС = 0;
	
	//ДатаОплатыКалендарная = ДатаДок + Глубина;
	
	
	допТорг = СоздатьОбъект("дополненияТорговля");
	тз = СоздатьОбъект("ТаблицаЗначений");
	тхтПроверкаПартий = "";
	ДокументОснование.ВыгрузитьТабличнуюЧасть(тз);
	тз.Сортировать("Товар");
	тз.НоваяКолонка("Индекс","Строка");
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		тз.Индекс = ЗначениеВСтроку(тз.Товар) + ЗначениеВСтроку(тз.ПартияПост);
	КонецЦикла;
	
	тз.ВыбратьСтроки();
	старыйИндекс = ""; старыйТовар = ""; стараяПартия = ""; ном = 0;	КвоБаз = 0; //количество будем считать в базовой
	текКво = 0; текЕдИзм = 0; КвоБаз = 0; //количество будем считать в базовой
	Пока тз.ПолучитьСтроку() = 1 Цикл
		Если старыйИндекс <> тз.Индекс Тогда
			Если старыйИндекс <> "" Тогда
				ВывестиСтрокуТовара(Таб,допТорг,старыйТовар,КвоБаз,ном,текКво,текЕдИзм,стараяПартия);
			КонецЕсли;
			старыйТовар = тз.Товар;
			старыйИндекс = тз.Индекс;
			стараяПартия = тз.ПартияПост;
			Если ПустоеЗначение(стараяПартия) = 0 Тогда
				тхтПроверкаПартий = "ВНИМАНИЕ! Проверьте соответствие партии товара указанной на упаковке!";
			КонецЕсли;
			текКво = 0; текЕдИзм = 0; КвоБаз = 0; //количество будем считать в базовой
		КонецЕсли;
		текКво = тз.Количество; текЕдИзм = тз.Единица;
		ИтВес=ИтВес + тз.Товар.вес * тз.Количество * тз.Коэффициент;
		КвоБаз = КвоБаз  + тз.Количество * тз.Единица.Коэффициент;		
	КонецЦикла;
	
	//последний товар
	Если тз.КоличествоСтрок() > 0 Тогда
		ВывестиСтрокуТовара(Таб,допТорг,старыйТовар,КвоБаз,ном,текКво,текЕдИзм,стараяПартия);
	КонецЕсли;

	итогоСуммаБезНДС = ДокументОснование.Итог("СуммаБезНДС");
	ПечБезНДС = глФРМ(глПересчет(итогоСуммаБезНДС,ДокументОснование.Валюта,ДокументОснование.Курс,ВП,ДокументОснование.ДатаДок),ВП,1);
	Таб.ВывестиСекцию("Дно_Доставка"); 
	//color
	//*********** КОНЕЦ доставка *****************
	
	Если НазваниеНабораПрав() <> "Администратор" Тогда
		Если Распечатан  =0 Тогда
			Распечатан=1;
			Провести(); //проводим 2 раза к сожалению т.к. у менеджера нет права записывать без перепроведения, а у нас меняется реквизит "Распечатан"
			//в первый раз в начале процедуры, чтобы узнать можем ли провести документ (не заполнен реквизит и т.д.), второй раз - для записи флага распечатки
			//сразу флаг нельзя т.к., если док. не проведется, а флаг уже поставиться, то документ заблокируется для редактирования.
		КонецЕсли;
	КонецЕсли;
	
	Таб.ТолькоПросмотр(1);
	Если Найти("Администратор,Продавец_Вячеслав",НазваниеНабораПрав()) = 0 Тогда
		Таб.Защита(1);
	Иначе
		Таб.Защита(Константа.ФлагЗащитыТаблиц);
	КонецЕсли;      
	Таб.Опции(0,0,,);                           
	Таб.параметрыСтраницы(1,,,,,5,5,,,1,,); 
	
	Таб.Показать("ПЕЧАТЬ: Доставка","");
КонецПроцедуры

Процедура ВыборВариантаПечати()
		выбЗн = 0;
		спсМеню = СоздатьОбъект("СписокЗначений");
		спсМеню.ДобавитьЗначение("печатьСчета","печать счета");
		спсМеню.ДобавитьЗначение("email"," отправка счета на email");
		спсМеню.ДобавитьЗначение("Заказ","Заказ на бланке");
		Если спсМеню.ВыбратьЗначение(выбЗн,,,,1) <> 1 Тогда
			Возврат;
		КонецЕсли;
		
		Если выбЗн = "email" Тогда
			Печать(0,1);
		ИначеЕсли выбЗн = "печатьСчета" Тогда
			Печать();
		ИначеЕсли выбЗн = "Заказ" Тогда
			спсПарам = СоздатьОбъект("СписокЗначений");
			спсПарам.ДобавитьЗначение(ТекущийДокумент(),"Док");
			ОткрытьФормуМодально("Обработка.ПечатьЗаказаДвери",спсПарам);
			Возврат;
		КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ОтправитьТаблицуЕмаил(еТабл)
	КаталогВложений = КаталогИБ() + СокрЛП(Фирма.КаталогИсхВложений);
	Если ПустаяСтрока(КаталогВложений) = 1 Тогда
		Предупреждение("Не указан каталог вложений для исходящих писем для фирмы " + Фирма + ". Письмо не отправлено." );
		Возврат;
	Иначе
		Если Прав(КаталогВложений,1) <> "\" Тогда
			КаталогВложений = КаталогВложений + "\";
		КонецЕсли;
	КонецЕсли;
	Вложение = КаталогВложений + Шаблон("[ТекущийДокумент().Вид()]_[ТекущийДокумент().номерДок]");
	еТабл.Записать(Вложение,1); //в формате XLS
	Если ПустаяСтрока(Фирма.ПутьКЕРТпочты) = 1 Тогда
		Предупреждение("В справочнике ""Фирмы"" не указан путь к внешней обработке работы с почтой. Отправка почты невозможна.");
		Возврат;
	КонецЕсли;
	спсПар = СоздатьОбъект("СписокЗначений");
	спсПар.ДобавитьЗначение(Контекст,"конт");
	спсПар.ДобавитьЗначение(Вложение + ".xls","Вложение");
	ОткрытьФорму("Отчет",спсПар,КаталогИБ() + СокрЛП(Фирма.ПутьКЕРТпочты));
КонецПроцедуры // ОтправитьЕмаил()

//+ralex.zp@gmail.com, 2015-04-02 23:24:49
//======================================================================
Функция РасшифровкаОбновить(Зн)
	Расш = СоздатьОбъект("СписокЗначений");
	Расш.Установить("Exel",1);
	Возврат Расш;
КонецФункции // РасшифровкаОбновить("Exel")

//======================================================================
Процедура ОбработкаЯчейкиТаблицы(Расшифровка, СтандартнаяОбработка, Таблица) 
	Если ПустоеЗначение(Расшифровка.Получить("Exel")) = 0 Тогда
		ОтправитьТаблицуЕмаил(Таблица);
		//КаталогВложений = КаталогИБ() + СокрЛП(Фирма.КаталогИсхВложений);
		//Если ПустаяСтрока(КаталогВложений) = 1 Тогда
		//	Предупреждение("Не указан каталог вложений для исходящих писем для фирмы " + Фирма + ". Письмо не отправлено." );
		//	Возврат;
		//Иначе
		//	Если Прав(КаталогВложений,1) <> "\" Тогда
		//		КаталогВложений = КаталогВложений + "\";
		//	КонецЕсли;
		//КонецЕсли;
		//Вложение = КаталогВложений + Шаблон("[ТекущийДокумент().Вид()]_[ТекущийДокумент().номерДок]");
		//Таблица.Записать(Вложение,1); //в формате XLS
		//Если ПустаяСтрока(Фирма.ПутьКЕРТпочты) = 1 Тогда
		//	Предупреждение("В справочнике ""Фирмы"" не указан путь к внешней обработке работы с почтой. Отправка почты невозможна.");
		//	Возврат;
		//КонецЕсли;
		//спсПар = СоздатьОбъект("СписокЗначений");
		//спсПар.ДобавитьЗначение(Контекст,"Конт");
		//спсПар.ДобавитьЗначение(Вложение + ".xls","Вложение");
		//ОткрытьФорму("Отчет",спсПар,КаталогИБ() + СокрЛП(Фирма.ПутьКЕРТпочты));
	КонецЕсли;
КонецПроцедуры

//*****************************************************************************
// Предопределенные процедуры

//******************************************************************************
Процедура ВводНового(Скопирован) //Предопределенная процедура
	Предупреждение("Документ ""Доставка"" вводится на основании документа ""Расходная накладная"".");
	СтатусВозврата(0);
	Возврат;
КонецПроцедуры

//******************************************************************************
Процедура ВводНаОсновании(ДокОснование) //Предопределенная процедура
	
	ВидДок = ДокОснование.Вид();
	Если ВидДок<>"РасходнаяНакладная" Тогда
		Предупреждение("Доставку нельзя вводить на основании данного вида документов!");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	док = СоздатьОбъект("Документ");
	док.ВыбратьПодчиненныеДокументы(ДокОснование.ДатаДок,,ДокОснование);
	Пока док.ПолучитьДокумент() = 1 Цикл
		Если (док.Вид() = "Доставка") Тогда
			Если док.ПометкаУдаления() = 1 Тогда
				Если вопрос("Уже есть док. ""Доставка"" помеченный на удаление. Снять пометку удаления и открыть его?",4,10) <> 6 Тогда
					СтатусВозврата(0);
					Возврат;
				Иначе
					док.СнятьПометкуУдаления();
					ОткрытьФорму(Док.ТекущийДокумент());
					СтатусВозврата(0);
					Возврат;
				КонецЕсли;
			Иначе
				ОткрытьФорму(Док.ТекущийДокумент());
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	
	глЗаполнитьШапкуНаОсн(Контекст,ДокОснование);
	Если спрКонтрПрава.ПроверитьРазрешение(Контрагент) = 0 Тогда
		Контрагент = СтарыйКонтрагент;
		Предупреждение("Вам запрещено создавать документы для этого контрагента",10);
		СтатусВозврата(0);	Возврат;
	КонецЕсли;
	
	Если ПустоеЗначение(Валюта)=1 Тогда
		Валюта=ДокОснование.Валюта;
		Дата_Курса=ДатаДок;
		Курс = глКурсДляВалюты(Валюта,Дата_Курса);
	КонецЕсли;
	Если Контрагент.Выбран() = 1 Тогда
		АдресДоставки = Контрагент.ЮридическийАдрес;
	КонецЕсли;
	ДокументОснование = ДокОснование;
	Комментарий = "";
КонецПроцедуры

//======================================================================
Функция ПолучитьСписокВодителей()
	спс = СоздатьОбъект("СписокЗначений");
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(Сформировать)
	|Обрабатывать НеПомеченныеНаУдаление;
	|ТекущийЭлемент = Справочник.Сотрудники.ТекущийЭлемент;
	|Должность = Справочник.Сотрудники.Должность;
	|Группировка ТекущийЭлемент без групп;
	|Условие(Найти(ВРЕГ(Должность),""ВОДИТЕЛЬ"") <> 0);
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат спс;
	КонецЕсли;
	тз = СоздатьОбъект("ТаблицаЗначений");
	Запрос.Выгрузить(тз,"ТекущийЭлемент",0);
	тз.Выгрузить(спс,,,"ТекущийЭлемент");
	Возврат спс;
КонецФункции // ПолучитьСписокВодителей

Процедура ПриВыбореЗакладки(Ном,Зн)
	Форма.ИспользоватьСлой("Общий," + Зн,2);
КонецПроцедуры

//*****************************************************************************
Процедура ПриОткрытии() //Предопределенная процедура
	НачальнаяДатаДокумента = ДатаДок;
	глПроверкаРазрешенияРедактирования(Контекст);
	Если новый<>1 тогда
		новый=0;
	КонецЕсли;  

	Если (названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер") ИЛИ (названиенабораправ()="МенеджерТоварищ") Тогда
		ЕСли (проведен()=1) ИЛИ (ПометкаУдаления()=1) тогда		
			форма.толькопросмотр(1);
		КонецЕсли;		
		форма.распечатан.доступность(0); 
	//	Если Константа.РазрешитьПечатьСчетовМенеджерам = 0 Тогда
	//		АтрФормы = СоздатьОбъект("АтрибутФормы");
	//		АтрФормы.УстановитьАтрибут(Форма,"кнПечать");
	//		АтрФормы.Формула = "Печать(,1)";
	//	КонецЕсли;
	Иначе
		форма.распечатан.доступность(1);
		//АтрФормы = СоздатьОбъект("АтрибутФормы");
		//АтрФормы.УстановитьАтрибут(Форма,"кнПечать");
		//АтрФормы.Формула = "Печать(0)";
	КонецЕсли;
	
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кнОК.Доступность(0);
		Форма.кнПровести.Доступность(0);
		Форма.кнДействия.Доступность(0);
	Иначе
		Форма.КнопкаПоУмолчанию("кнОК");
	КонецЕсли;
	          
	//глУстВидимостьЦен(Контекст);
	глУстановкаРеквизитаТип(Контекст);
    ОбновитьНадписи();
	СтараяДата = ДатаДок;           

	УстДоступность();
	Если ПустоеЗначение(Форма.Параметр)=0 Тогда
		Если ТипЗначенияСтр(Форма.Параметр)="Строка" Тогда
			Если ВРег(Форма.Параметр)="БЫСТРАЯПЕЧАТЬ" Тогда
				Печать(1);
				СтатусВозврата(0); 
				Возврат;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;
	
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной","Основное");
	Форма.Закладки.ДобавитьЗначение("CRM","CRM");
	Если НазваниеНабораПрав() <> "Администратор" Тогда
		Форма.срокИсполненияЗадачи.Доступность(0);
		Форма.кнПоставитьЗадачуВCRM.Доступность(0);
	КонецЕсли;
	Форма.ИспользоватьСлой("Общий,Основной");
КонецПроцедуры //При открытии

//*****************************************************************************
Процедура ПриЗаписи() //Предопределенная процедура
	Если глМожноЗаписатьДокумент(Контекст)=0 Тогда
		СтатусВозврата(0);                        
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	//+ralex, 2015-07-28 11:03:04
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ЦенаПрибыль = 0; СуммаПрибыльВР = 0; //переменные не используются, но нужны для совместимости
		РассчитатьПрибыль(Контекст,1,ЦенаПрибыль,СуммаПрибыльВР);
	КонецЦикла;
	//+/ralex, 2015-07-28 11:03:04
	
	новый=0;
	ОтборАвтор=фирма;	
	Пользователь = Автор;
	ГруппаПользователей = Автор.Родитель;
	
	//-ralex, 12-03-23 22:37
	//Если ДатаДоставки <> Дата(0) Тогда
	//	Если ПустаяСтрока(id_задачиВ_CRM) = 1 Тогда
	//		Если ПустоеЗначение(СотрудникЗадачи) = 1 Тогда
	//			СотрудникЗадачи = Автор.Сотрудник;
	//		КонецЕсли;
	//		спсПарам = СоздатьОбъект("Структура");
	//		спсПарам.Вставить("Заголовок", " " + ТекущийДокумент());
	//		спсПарам.Вставить("Описание", СокрЛП("Доставка " + Контрагент + " на " + ДатаДоставки));
	//		спсПарам.Вставить("ДатаНачала", ДатаДок);
	//		спсПарам.Вставить("ДатаКонца", ДатаДоставки);
	//		спсПарам.Вставить("users_id", СотрудникЗадачи);
	//		спсПарам.Вставить("конт", глВернутьКонтекст(Контекст));
	//		ПоставитьЗадачуВCRM(спсПарам);
	//		
	//		Если ДатаДоставки <> ТекущаяДата() Тогда
	//			спсПарам.ДатаНачала = ДатаДоставки - 1;
	//		КонецЕсли;
	//		ПоставитьЗадачуВCRM(спсПарам);
	//	
	//	КонецЕсли;
	//КонецЕсли;
	//-/------------------------
	//+ralex, 13-12-21 00:02
	//Если ПустаяСтрока(id_задачиВ_CRM) = 1 Тогда
	//	СтатусЗадачиВCRM = 0;
	//ИначеЕсли ЗадачаВCRMВыполнена = 0 Тогда
	//	СтатусЗадачиВCRM = 1;
	//ИначеЕсли ЗадачаВCRMВыполнена = 1 Тогда
	//	СтатусЗадачиВCRM = 2;
	//КонецЕсли;
	//+/------------------------
КонецПроцедуры

// ===============================
Процедура ПриЗакрытии()
КонецПроцедуры	

Функция Раскраска()
	стр = "";
	Если (Товар.Акция.Получить(ДатаДок) = 1) и (Товар.Распродажа.Получить(ДатаДок) = 1) Тогда
		стр = "(BRUSH[" + цветАкция +"])()(BRUSH[" + цветРаспродажа + "])(BRUSH[NONE])";
	ИначеЕсли Товар.Акция.Получить(ДатаДок) = 1 Тогда
		стр = "(BRUSH[" + цветАкция + "])()(BRUSH[NONE])";
	ИначеЕсли Товар.Распродажа.Получить(ДатаДок) = 1 Тогда
		стр = "(BRUSH[" + цветРаспродажа + "])()(BRUSH[NONE])";
	КонецЕсли;
	Возврат стр;
КонецФункции

//======================================================================
Процедура ПриНачалеВыбораЗначения(ид,фл)
	перем зн;
	Если ид = "Водитель" Тогда
		фл = 0;
		спсВодителей = ПолучитьСписокВодителей();
		Если спсВодителей.ВыбратьЗначение(зн,,,,1) <> 1 Тогда
			Возврат;
		КонецЕсли;
		Водитель = зн;
	КонецЕсли;
КонецПроцедуры // ПриНачалеВыбораЗначения(ид,фл)

// ===============================
Функция РассчитатьМаржу()
	Если НазваниеНабораПрав() <> "Администратор" Тогда
		Возврат "";
	КонецЕсли;

	итогСуммаСНДС = Итог("СуммаСНДС");
	
	Если итогСуммаСНДС = 0 Тогда
		Возврат "";
	КонецЕсли;
	сс = Итог("СуммаСНДС") - итог("СуммаПрибыль");
	Возврат "наценка: " + Окр((итогСуммаСНДС - сс)/сс * 100,0) + "%";
КонецФункции

//======================================================================
Процедура ПоказатьНаКарте()
	Если Контрагент.Выбран() = 1 Тогда
		ЗапуститьПриложение("https://www.google.com.ua/maps/place/" + СокрЛП(Контрагент.ЮридическийАдрес));
	КонецЕсли;
КонецПроцедуры // ПоказатьНаКарте()

//======================================================================
Процедура подтвердитьСМС()
	ОткрытьФормуМодально("Отчет.АвторизацияКлиента",Контекст);
КонецПроцедуры // подтвердитьСМС


//Форма.Товар.ВыполнятьФормулуТолькоПриИзменении(1);

//*****************************************************************************
//Инициализирум список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
|СтруктураПодчиненности,
|ОткрытьВЖурнале,
|Подчиненные");
	
спрКонтрПрава = СоздатьОбъект("КонтрагентыПрава");
