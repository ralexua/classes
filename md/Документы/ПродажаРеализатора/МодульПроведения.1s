Перем спФирмы;
// ===============================
Функция ПроверкаШапки()
	глВсеВыбрано = 1;
	глВыбранЛи(Фирма,"Фирма");  
	глВыбранЛи(Контрагент,"Контрагент");
	глВыбранЛи(ВидТорговли,"Вид торговли");
	глВыбранЛи(КатегорияЦен,"Категория цен");	
	глВыбранЛи(Договор,"Договор");
	Если ВидОперации=1 Тогда
	    глВыбранЛи(ДокументОснование,"Документ основание");
	КонецЕсли;
	глВыбранЛи(Валюта,"Валюта");
	Возврат глВсеВыбрано;
КонецФункции

// ===============================
Функция ПроверкаСтроки()
	глВсеВыбрано = 1;
	глВыбранЛи(Товар,"Товар",НомерСтроки);
	Если глВсеВыбрано = 1 Тогда
		Если (Товар.ВидТовара = Перечисление.ВидыТоваров.Услуга) Тогда
			глТрассировка("В документе "+ПредставлениеВида() +" нельзя использовать услуги. Cтрока "+НомерСтроки+".",0);
			глВсеВыбрано = 0;
		КонецЕсли;		
	КонецЕсли;
	глВыбранЛи(Единица,"Единица",НомерСтроки);
	Возврат глВсеВыбрано;
КонецФункции
                
// ===============================
Процедура ДвиженияРеализация(ФлагВозврата,текФирма,тбРеализация)
	
	//Вычислим ставку вознаграждения тбРеализация по каждому договору в разрезе СтавкаНДС
	Если ФлагВозврата = 1 Тогда
		ДокументОснованиеРеализация = ДокументОснование;
	Иначе
		ДокументОснованиеРеализация = ТекущийДокумент();
	КонецЕсли;
	
	спДоговора = СоздатьОбъект("СписокЗначений");
	спКонтрагенты = СоздатьОбъект("СписокЗначений");   
	
	//составляем список договоров и дополнений,
	тбРеализация.ВыбратьСтроки();
	Пока тбРеализация.ПолучитьСтроку()=1 Цикл
		Если спДоговора.Принадлежит(тбРеализация.ДоговорКомм)=0 Тогда
			Дог = тбРеализация.ДоговорКомм;
			спДоговора.ДобавитьЗначение(Дог);
			спДоговора.ДобавитьЗначение(глПолучитьДополнениеДоговора(Дог,Перечисление.ВидыДополненийДоговоров.Консигнация, ДокументОснованиеРеализация.ДатаДок));
			//список контрагентов
			Если спКонтрагенты.Принадлежит(Дог.Контрагент)=0 Тогда
				спКонтрагенты.ДобавитьЗначение(Дог.Контрагент);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ВремРегДолги = СоздатьОбъект("Регистры");

	// с поставщиком
	Поставщики = 1;
	глЗаполнитьСтавкиВознаграждения(Контекст, текФирма,ДокументОснованиеРеализация, тбРеализация,Поставщики);
	
	ФлагОтгрузки = 1;
	ЗнакОплаты = +1;
	
	глРассчитатьИтогиВзаиморасчетов(Контекст, ВремРегДолги, текФирма, ЗнакОплаты, спКонтрагенты, спДоговора);
	тбДолги = глПолучитьИтогиВзаиморасчетов(Контекст, ВремРегДолги, текФирма, ЗнакОплаты, спКонтрагенты, спДоговора);
	
	тбСуммыПогашения = СоздатьОбъект("ТаблицаЗначений");
	тбСуммыПогашения.НоваяКолонка("СтавкаНДС");
	тбСуммыПогашения.НоваяКолонка("СтавкаВознаграждения","Число");
	тбСуммыПогашения.НоваяКолонка("СуммаСНДС","Число",19,5);
	
	// Мы должны поставщикам
	стДоговор = 0;				
	тбРеализация.ВыбратьСтроки();
	Пока тбРеализация.ПолучитьСтроку()=1 Цикл
		Если тбРеализация.ДоговорКомм = Договор Тогда
			// если ДоговорКомм = Договор - то это взаиморасчеты с реализатором
			Продолжить;
		КонецЕсли;
		Если стДоговор <> тбРеализация.ДоговорКомм Тогда
			Если ПустоеЗначение(стДоговор)=0 Тогда
				глПровестиПоВзаиморасчетам(Контекст,  ФлагОтгрузки, ЗнакОплаты, ФлагВозврата,
				текФирма, тбДолги, тбСуммыПогашения, стДоговор.Контрагент, стДоговор, Перечисление.ВидыТорговли.Консигнация,ДокументОснованиеРеализация);
			КонецЕсли;
			стДоговор=тбРеализация.ДоговорКомм;
			тбСуммыПогашения.УдалитьСтроки();
		КонецЕсли;
		тбСуммыПогашения.НоваяСтрока();
		Если ПустоеЗначение(текФирма)=0 Тогда
			тбСуммыПогашения.СтавкаНДС = тбРеализация.СтавкаНДС;
			ВВ = Гривня;
		Иначе
			ВВ = глВалютаВзаиморасчетов(стДоговор.Контрагент);
		КонецЕсли;
		тбСуммыПогашения.СуммаСНДС = глПодготовитьСумму(тбРеализация.СуммаСНДС*(1 - тбРеализация.СтавкаВознаграждения/100),Валюта,Курс,ВВ,Дата_Курса);
		тбСуммыПогашения.СтавкаВознаграждения = тбРеализация.СтавкаВознаграждения;
	КонецЦикла;
	Если ПустоеЗначение(стДоговор)=0 Тогда
		глПровестиПоВзаиморасчетам(Контекст,  ФлагОтгрузки, ЗнакОплаты, ФлагВозврата, 
		текФирма, тбДолги, тбСуммыПогашения, стДоговор.Контрагент, стДоговор, Перечисление.ВидыТорговли.Консигнация,ДокументОснованиеРеализация);
	КонецЕсли;          
	
	ФлагОтгрузки = 0;
	ЗнакОплаты = -1;
	
	глРассчитатьИтогиВзаиморасчетов(Контекст, ВремРегДолги, текФирма, ЗнакОплаты, спКонтрагенты, спДоговора);				
	тбДолги = глПолучитьИтогиВзаиморасчетов(Контекст, ВремРегДолги, текФирма, ЗнакОплаты, спКонтрагенты, спДоговора);
	
	// Поставщики должны нам вознаграждение
	стДоговор = 0;
	тбСуммыПогашения.УдалитьСтроки();
	тбРеализация.ВыбратьСтроки();
	Пока тбРеализация.ПолучитьСтроку()=1 Цикл
		Если тбРеализация.ДоговорКомм = Договор Тогда
			// если ДоговорКомм = Договор - то это взаиморасчеты с реализатором
			Продолжить;
		КонецЕсли;
		Если стДоговор <> тбРеализация.ДоговорКомм Тогда
			Если ПустоеЗначение(стДоговор)=0 Тогда
				ДоговорВознаграждения = глПолучитьДополнениеДоговора(стДоговор, Перечисление.ВидыДополненийДоговоров.Консигнация, ДокументОснованиеРеализация.ДатаДок);
				глПровестиПоВзаиморасчетам(Контекст,  ФлагОтгрузки, ЗнакОплаты, ФлагВозврата, 
					текФирма, тбДолги, тбСуммыПогашения, стДоговор.Контрагент, ДоговорВознаграждения, Перечисление.ВидыТорговли.Консигнация,ДокументОснованиеРеализация);
			КонецЕсли;
			стДоговор=тбРеализация.ДоговорКомм;
			тбСуммыПогашения.УдалитьСтроки();
		КонецЕсли;
		тбСуммыПогашения.НоваяСтрока();		
		Если ПустоеЗначение(текФирма)=0 Тогда
			тбСуммыПогашения.СтавкаНДС = тбРеализация.СтавкаНДС;
			ВВ = Гривня;
		Иначе
			ВВ = глВалютаВзаиморасчетов(стДоговор.Контрагент);
		КонецЕсли;
		Вознаграждение = тбРеализация.СуммаСНДС * тбРеализация.СтавкаВознаграждения/100;
		тбСуммыПогашения.СуммаСНДС = глПодготовитьСумму(Вознаграждение,Валюта,Курс,ВВ,Дата_Курса);
	КонецЦикла;
	Если ПустоеЗначение(стДоговор)=0 Тогда
		ДоговорВознаграждения = глПолучитьДополнениеДоговора(стДоговор, Перечисление.ВидыДополненийДоговоров.Консигнация, ДокументОснованиеРеализация.ДатаДок);
		глПровестиПоВзаиморасчетам(Контекст,  ФлагОтгрузки, ЗнакОплаты, ФлагВозврата, 
			текФирма, тбДолги, тбСуммыПогашения, стДоговор.Контрагент, ДоговорВознаграждения, Перечисление.ВидыТорговли.Консигнация,ДокументОснованиеРеализация);
	КонецЕсли;
	
	// теперь с реализатором  
	Поставщики = 0;
	глЗаполнитьСтавкиВознаграждения(Контекст, текФирма,ДокументОснованиеРеализация, тбРеализация,Поставщики);
	ФлагОтгрузки = 1;
	ЗнакОплаты = -1;
	
	спДоговора = СоздатьОбъект("СписокЗначений");
	спКонтрагенты = СоздатьОбъект("СписокЗначений");   
	
	спДоговора.ДобавитьЗначение(Договор);
	спКонтрагенты.ДобавитьЗначение(Договор.Контрагент);
	
	глРассчитатьИтогиВзаиморасчетов(Контекст, ВремРегДолги, текФирма, ЗнакОплаты, спКонтрагенты, спДоговора);				
	тбДолги = глПолучитьИтогиВзаиморасчетов(Контекст, ВремРегДолги, текФирма, ЗнакОплаты, спКонтрагенты, спДоговора);
	
	
	// Реализатор должен нам
	тбСуммыПогашения.УдалитьСтроки();
	тбРеализация.ВыбратьСтроки();
	Пока тбРеализация.ПолучитьСтроку()=1 Цикл
		Если тбРеализация.ДоговорКомм <> Договор Тогда
			// если ДоговорКомм <> Договор - то это взаиморасчеты с поставщиком
			Продолжить;
		КонецЕсли;
		тбСуммыПогашения.НоваяСтрока();
		Если ПустоеЗначение(текФирма)=0 Тогда
			тбСуммыПогашения.СтавкаНДС = тбРеализация.СтавкаНДС;
			ВВ = Гривня;
		Иначе
			ВВ = Контрагент.ВалютаВзаиморасчетов;
		КонецЕсли;
		СуммаПогашения = тбРеализация.СуммаСНДС*(1 - тбРеализация.СтавкаВознаграждения/100);
		тбСуммыПогашения.СуммаСНДС = глПодготовитьСумму(СуммаПогашения,Валюта,Курс,ВВ,Дата_Курса);
		тбСуммыПогашения.СтавкаВознаграждения = тбРеализация.СтавкаВознаграждения;
	КонецЦикла;
	
	глПровестиПоВзаиморасчетам(Контекст,  ФлагОтгрузки, ЗнакОплаты, ФлагВозврата, 
	текФирма, тбДолги, тбСуммыПогашения, Контрагент, спДоговора, Перечисление.ВидыТорговли.Консигнация,ДокументОснованиеРеализация);
	
	// Мы должны реализатору вознаграждение
	ФлагОтгрузки = 0;
	ЗнакОплаты = +1;
	
	глРассчитатьИтогиВзаиморасчетов(Контекст, ВремРегДолги, текФирма, ЗнакОплаты, спКонтрагенты, спДоговора);
	тбДолги = глПолучитьИтогиВзаиморасчетов(Контекст, ВремРегДолги, текФирма, ЗнакОплаты, спКонтрагенты, спДоговора);
	
	тбСуммыПогашения.УдалитьСтроки();
	тбРеализация.ВыбратьСтроки();
	Пока тбРеализация.ПолучитьСтроку()=1 Цикл
		Если тбРеализация.ДоговорКомм <> Договор Тогда
			// если ДоговорКомм <> Договор - то это взаиморасчеты с поставщиком
			Продолжить;
		КонецЕсли;
		тбСуммыПогашения.НоваяСтрока();
		
		Если ПустоеЗначение(текФирма)=0 Тогда
			тбСуммыПогашения.СтавкаНДС = тбРеализация.СтавкаНДС;
			ВВ = Гривня;
		Иначе
			ВВ = Контрагент.ВалютаВзаиморасчетов;
		КонецЕсли;
		Вознаграждение = тбРеализация.СуммаСНДС*тбРеализация.СтавкаВознаграждения/100;		
		тбСуммыПогашения.СуммаСНДС = глПодготовитьСумму(Вознаграждение,Валюта,Курс,ВВ,Дата_Курса);
		тбСуммыПогашения.СтавкаВознаграждения = 0;
	КонецЦикла;
	ДоговорВознаграждения = глПолучитьДополнениеДоговора(Договор, Перечисление.ВидыДополненийДоговоров.Консигнация, ДокументОснованиеРеализация.ДатаДок);
	глПровестиПоВзаиморасчетам(Контекст,  ФлагОтгрузки, ЗнакОплаты, ФлагВозврата, 
		текФирма, тбДолги, тбСуммыПогашения, Контрагент, ДоговорВознаграждения, Перечисление.ВидыТорговли.Консигнация,ДокументОснованиеРеализация);
	
КонецПроцедуры

// ===============================
Процедура ДвиженияПартии() 

	спОтбор = СоздатьОбъект("СписокЗначений");
	спСтатус = СоздатьОбъект("СписокЗначений");
	
	ФлагВозврата = 0;
	спСтатус.ДобавитьЗначение(ОтданныйКупленный);
	спСтатус.ДобавитьЗначение(ОтданныйПринятый);
	спОтбор.Установить("Статус", спСтатус);
	спОтбор.Установить("Контрагент", Контрагент);
	
	Если ВидОперации = 1  Тогда
		ФлагВозврата = 1;
		Если ПустоеЗначение(ДокументОснование)=0 Тогда
			спОтбор.Установить("ТекущийДокумент", ДокументОснование);    
		КонецЕсли;
	КонецЕсли;
	
	ВремРегПартии = СоздатьОбъект("Регистры");
	глРассчитатьОстаткиПартий(Контекст, ВремРегПартии, спФирмы, ФлагВозврата, спОтбор);
	
	тбРеализация = СоздатьОбъект("ТаблицаЗначений");
	тбРеализация.НоваяКолонка("ДоговорКомм");
	тбРеализация.НоваяКолонка("СтавкаНДС");
	тбРеализация.НоваяКолонка("СуммаСНДС","Число",19,5);
	
	Для Инд=1 по спФирмы.РазмерСписка() Цикл
		текФирма = спФирмы.ПолучитьЗначение(Инд);
		
		Если ПустоеЗначение(текФирма)=1 Тогда
			МетодРасчетаСебестоимости = Константа.МетодРасчетаСебестоимостиУправленческогоУчета;
		Иначе
			текФирма.ИспользоватьДату(ДатаДок);
			МетодРасчетаСебестоимости = текФирма.МетодРасчетаСебестоимостиФинансовогоУчета;
		КонецЕсли;                  
		
		Предпочтение = 0;
		тбПартии = 0;
		тбОстатки = 0;
		ИнвСтартегияПредпочтения  = ФлагВозврата;
		ИнвСтратегияПродажи = ФлагВозврата;
		
		глСформироватьТаблицуПартий(Контекст, ВремРегПартии,текФирма, ФлагВозврата, спОтбор, Предпочтение, 
		тбПартии, тбОстатки, ИнвСтартегияПредпочтения, ИнвСтратегияПродажи);
		         
		тбРеализация.УдалитьСтроки();
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл
			
			Если ПустоеЗначение(текФирма)=1 Тогда
				ВУ = Товар.ВалютаУчета;
			Иначе	
				ВУ = Гривня;
			КонецЕсли;
			
			ВсегоСписать = Количество * Коэффициент;
			ОсталосьСписать = ВсегоСписать;
			
			ВсегоСуммаСНДС = глПересчет(СуммаСНДС,Валюта,Курс,ВУ,Дата_курса);
			ВсегоСуммаБезНДС = глПересчет(СуммаБезНДС,Валюта,Курс,ВУ,Дата_курса);			
			ОсталосьСуммаСНДС = ВсегоСуммаСНДС;
			ОсталосьСуммаБезНДС = ВсегоСуммаБезНДС;
			
			НС=0;
			Если ?(ФлагВозврата=0,тбПартии.НайтиЗначение(НомерСтроки,НС,"НомерСтрокиДокумента"),тбПартии.НайтиЗначение(Товар,НС,"Товар"))=1 Тогда
				тбПартии.ПолучитьСтрокуПоНомеру(НС);
			Иначе
				тбПартии.ВыбратьСтроки();
				тбПартии.ПолучитьСтроку();
			КонецЕсли;
			
			Пока ?(ФлагВозврата=0,тбПартии.НомерСтрокиДокумента,тбПартии.Товар) = ?(ФлагВозврата=0,НомерСтроки,Товар) Цикл
				
				КонтрагентП = тбПартии.Контрагент;
				ПоставщикП = тбПартии.Поставщик;
				ПоставкаП = тбПартии.Поставка;
				ПрихДокументП = тбПартии.ПрихДокумент;
				СтатусП = тбПартии.Статус;
				
				НС =0;
				Если тбОстатки.НайтиЗначение(глПолучитьКлючТбОстатков(тбПартии.ПрихДокумент,тбПартии.Поставка,Товар.Код),НС,"Ключ")=1 Тогда
					
					тбОстатки.ПолучитьСтрокуПоНомеру(НС);
					
					ОстатокТовара = тбОстатки.ОстатокТовара;
					
					Если ОстатокТовара = 0 Тогда
						Если тбПартии.ПолучитьСтроку()=0 Тогда
							Прервать;
						КонецЕсли;
						Продолжить;
					КонецЕсли;
					
					СписываемыйОстатокТовара = Мин(ОсталосьСписать, ОстатокТовара);
					
					КоэфСписания = СписываемыйОстатокТовара / ОстатокТовара;
					КоэфРеализации = СписываемыйОстатокТовара / ВсегоСписать;
					
					СписываемаяСтоимость = тбОстатки.Стоимость * КоэфСписания;
					СписываемаяПродСтоимость = тбОстатки.ПродСтоимость * КоэфСписания;
					СписываемыйНДС = тбОстатки.НДС * КоэфСписания;
					
					Если ФлагВозврата = 0 Тогда
						
						Если СписываемыйОстатокТовара = ОсталосьСписать Тогда
							СписываемыйОборот = ОсталосьСуммаСНДС;
							СписываемыйНДСРасхода = ОсталосьСуммаСНДС - ОсталосьСуммаБезНДС;
						Иначе
							СписываемыйОборот = ВсегоСуммаСНДС * КоэфРеализации;
							СписываемыйНДСРасхода = (ВсегоСуммаСНДС - ВсегоСуммаБезНДС) * КоэфРеализации;
						КонецЕсли;
						
						ОсталосьСуммаБезНДС = ОсталосьСуммаБезНДС - СписываемыйОборот + СписываемыйНДСРасхода;
						ОсталосьСуммаСНДС = ОсталосьСуммаСНДС - СписываемыйОборот;    
						
						СписываемаяПрибыль = глРассчитатьПрибыль(Контекст,текФирма,СтатусП,ПоставкаП,ПрихДокументП,СписываемаяСтоимость,СписываемыйНДС,СписываемаяПродСтоимость,СписываемыйОборот,СписываемыйНДСРасхода);
												
						Если СтатусП = ОтданныйКупленный Тогда
							КодОперации = ПродажаКупленногоПереданногоТовара;
						ИначеЕсли СтатусП = ОтданныйПринятый Тогда
							КодОперации = ПродажаПринятогоПереданногоТовара;
						КонецЕсли;
						
					Иначе // Если ФлагВозврата = 1
						СписываемыйОборот = тбОстатки.Оборот * КоэфСписания;
						СписываемыйНДСРасхода = тбОстатки.НДСРасхода * КоэфСписания;
						
						СписываемаяПрибыль = тбОстатки.Прибыль * КоэфСписания;
						                     
						Если СтатусП = ОтданныйКупленный Тогда
							КодОперации = ВозвратКупленногоПереданногоТовара;
						ИначеЕсли СтатусП = ОтданныйПринятый Тогда
							КодОперации = ВозвратПринятогоПереданногоТовара;
						КонецЕсли;
					КонецЕсли;
					    
					// в валюте документа
					СуммаРеализации = глПересчет(СписываемыйОборот,ВУ,Дата_курса,Валюта,Курс);
					    
					// списываем
					глПровестиПартию(Контекст, ФлагВозврата, ФлагВозврата, текФирма, Товар, СтатусП, КонтрагентП, ПоставщикП, 
						ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
						СписываемыйНДС, СписываемыйОборот, СписываемыйНДСРасхода, КодОперации, ДокументОснование,СписываемаяПрибыль);
					
					глУчестьСписание(тбОстатки,СписываемыйОстатокТовара,СписываемаяСтоимость,СписываемаяПродСтоимость,СписываемыйНДС,СписываемыйОборот,СписываемыйНДСРасхода,СписываемаяПрибыль);
					
					Если СтатусП = ОтданныйПринятый Тогда
						тбРеализация.НоваяСтрока();
						тбРеализация.СтавкаНДС = Товар.СтавкаНДС.Получить(ДатаДок);
						тбРеализация.ДоговорКомм = ПоставкаП.Договор;
						тбРеализация.СуммаСНДС = СуммаРеализации;
					КонецЕсли;
					
					тбРеализация.НоваяСтрока();
					тбРеализация.СтавкаНДС = Товар.СтавкаНДС.Получить(ДатаДок);
					тбРеализация.ДоговорКомм = Договор;
					тбРеализация.СуммаСНДС = СуммаРеализации;
					
					ОсталосьСписать = ОсталосьСписать - СписываемыйОстатокТовара;
				КонецЕсли;
				
				Если ОсталосьСписать = 0 Тогда
					Прервать;
				КонецЕсли;   
				
				Если тбПартии.ПолучитьСтроку()=0 Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла; 
			
			Если ОсталосьСписать > 0 Тогда
				глСообщитьОбОтсутствииПартии(Контекст,ФлагВозврата, текФирма, Товар, НомерСтроки);
				//*ralex, 07-04-20 00:33
				//Если Константа.РазрешитьОтрицательныеОстаткиТоваров = Нет Тогда
				// -------- заменено на:
				Если (Константа.РазрешитьОтрицательныеОстаткиТоваров = Нет) и (НазваниеНабораПрав() <> "Администратор") Тогда
				//*/ralex, 07-04-20 00:33
					глНеПроводить(Контекст);
					Возврат;
				Иначе
					СписываемыйОстатокТовара = ОсталосьСписать;
					КоэфСписания = СписываемыйОстатокТовара / ВсегоСписать;
					СписываемаяСтоимость = ВсегоСуммаБезНДС * КоэфСписания;
					СписываемаяПродСтоимость = ВсегоСуммаСНДС * КоэфСписания;
					СписываемыйНДС = (ВсегоСуммаСНДС - ВсегоСуммаБезНДС) * КоэфСписания;
					
					СтатусП = ОтданныйКупленный;						
					КонтрагентП = Контрагент;
					ПоставщикП = 0;
					ПоставкаП = 0;
					ПрихДокументП = ТекущийДокумент();
					
					
					Если ФлагВозврата = 0 Тогда
						СписываемыйОборот = ОсталосьСуммаСНДС;
						СписываемыйНДСРасхода = ОсталосьСуммаСНДС - ОсталосьСуммаБезНДС;
						
						КодОперации = ПродажаКупленногоПереданногоТовара;
					Иначе // Если ФлагВозврата = 1
						СписываемыйОборот = ВсегоСуммаСНДС * КоэфСписания;
						СписываемыйНДСРасхода = (ВсегоСуммаСНДС - ВсегоСуммаБезНДС)* КоэфСписания;
						
						КодОперации = ВозвратКупленногоПереданногоТовара;
					КонецЕсли;
					    
					// в валюте документа
					СуммаРеализации = глПересчет(СписываемыйОборот,ВУ,Дата_курса,Валюта,Курс);
					
					глПровестиПартию(Контекст, ФлагВозврата, ФлагВозврата, текФирма, Товар, СтатусП, КонтрагентП, ПоставщикП, 
						ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
						СписываемыйНДС, СписываемыйОборот, СписываемыйНДСРасхода, КодОперации, ДокументОснование,СписываемаяПрибыль);
						
					
					тбРеализация.НоваяСтрока();
					тбРеализация.СтавкаНДС = Товар.СтавкаНДС.Получить(ДатаДок);
					тбРеализация.ДоговорКомм = Договор;
					тбРеализация.СуммаСНДС = СуммаРеализации;
					
					глСообщитьОСозданииПартии(Товар, СтатусП, СписываемыйОстатокТовара);
					
				КонецЕсли;	
			КонецЕсли; // ОсталосьСписать > 0
		КонецЦикла; // строки документа		
		
		// учтем реализацию
		ДвиженияРеализация(ФлагВозврата,текФирма,тбРеализация);
		
		
	КонецЦикла; // по фирмам
	
КонецПроцедуры

//-------------------------------------
Процедура ОбработкаПроведения()
	
	//*ralex, 10-02-20 23:35
	//Если ДатаДок>РабочаяДата() Тогда
	//	глНеПроводить(Контекст,"Нельзя проводить документ будущей датой!");
	//	Возврат;
	//КонецЕсли;
	//
	// -------- заменено на:
	ЭтоГрупповаяОбработка = Макс(ГрупповаяОбработка(),глГрупповоеПроведение);

	Если ДатаДок>РабочаяДата() Тогда
		глНеПроводить(Контекст,"Нельзя проводить документ будущей датой!");
		Возврат;
	КонецЕсли;

	Если этоГрупповаяОбработка = 0 Тогда
		Если НЕ(НазваниеНабораПрав() = "Администратор") Тогда
			Если ДатаДок <> ТекущаяДата() Тогда
				глНеПроводить(Контекст,"Нельзя проводить документ датой отличной от текущей!");
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//*/ralex, 10-02-20 23:35
	Если глПроверкаДублейСтрок(Контекст)=1 Тогда
		глНеПроводить(Контекст,"В документе строки с одинаковым товаром, но разной ценой!");
		Возврат;
	КонецЕсли;
	
	Если ПроверкаШапки() = 0 Тогда
		глНеПроводить(Контекст); 
		Возврат;
	КонецЕсли;                      
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ПроверкаСтроки() = 0 Тогда
			глНеПроводить(Контекст); 
			Возврат;
		КонецЕсли;
	КонецЦикла;	
	
	спФирмы = глПолучитьФирмы(Контекст);
	
	Если спФирмы.РазмерСписка()>0 Тогда
		
		ДвиженияПартии();
		
	КонецЕсли;
	
КонецПроцедуры
