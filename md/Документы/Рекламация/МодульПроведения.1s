Перем спФирмы;

// ===============================
Функция ПроверкаШапки()
	глВсеВыбрано = 1;
	глВыбранЛи(Фирма,"Фирма");  
	глВыбранЛи(Контрагент,"Контрагент");
	глВыбранЛи(видРекламации,"Вид рекламации");
	глВыбранЛи(Склад,"Склад");
	Возврат глВсеВыбрано;
КонецФункции

// ===============================
Функция ПроверкаСтроки()
	глВсеВыбрано = 1;
	глВыбранЛи(Товар,"Товар",НомерСтроки);
	глВыбранЛи(Единица,"Единица",НомерСтроки);
	Возврат глВсеВыбрано;
КонецФункции

Процедура ДвиженияОстатки()
	ФлагПрихода = 0;
	ФлагВозврата = 0;
	ФлагПеремещения = 0;
	начСорт = КондиционныйТовар;
	конСорт = рекламационныйТовар;
	глИзменитьОстатки(Контекст, спФирмы, Склад, ФлагВозврата, ФлагПрихода, ,ФлагПеремещения,начСорт,конСорт);
	глИзменитьОстатки(Контекст, спФирмы, Склад, ФлагВозврата, 1, ,ФлагПеремещения,начСорт,конСорт);
КонецПроцедуры

//======================================================================
Функция ПоставитьЗадачуВCRM()
	спсПарам = СоздатьОбъект("Структура");
	спсПарам.Вставить("Заголовок", "Новая рекламация " + НомерДок + " " + ДатаДок);
	спсПарам.Вставить("Описание", " Вам нужно согласовать с поставщиком товара возврат или замену. Подписать накладную возврата или дополнительное соглашение к договору поставки. Подписанный документ обязательно прикрепить к выполненной задаче.");
	//спсПарам.Вставить("Описание", "Новая рекламация " + НомерДок + " " + ДатаДок);
	спсПарам.Вставить("ДатаНачала", ДатаДок);
	спсПарам.Вставить("ДатаКонца", ДатаДок + 5);
	спсПарам.Вставить("users_id", Контрагент.Менеджер);
	спсПарам.Вставить("конт", глВернутьКонтекст(Контекст));
	спсПарам.Вставить("token_API_CRM", Контрагент.Менеджер.token_API_CRM);
	
	API_CRM = СоздатьОбъект("API_CRM");
	рез = API_CRM.ПоставитьЗадачу_API(спсПарам);
	Возврат рез;  //если о то задача не поставлена
КонецФункции // ПоставитьЗадачуВCRM()

//-------------------------------------
Процедура ОбработкаПроведения()
	Если ДатаДок>РабочаяДата() Тогда
		глНеПроводить(Контекст,"Нельзя проводить документ будущей датой!");
		Возврат;
	КонецЕсли;
	
	Если глПроверкаДублейСтрок(Контекст,"ПоЕдинице")=1 Тогда
		глНеПроводить(Контекст,"В документе строки с одинаковым товаром, но разной ценой!");
		Возврат;
	КонецЕсли;
	
	Если ПроверкаШапки() = 0 Тогда
		глНеПроводить(Контекст); 
		Возврат;
	КонецЕсли;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()>0 Цикл
		Если ПроверкаСтроки() = 0 Тогда
			глНеПроводить(Контекст);
			Возврат;
		КонецЕсли;
		Регистр.Рекламации.ПривязыватьСтроку(НомерСтроки);
		Регистр.Рекламации.Товар=Товар;
		Регистр.Рекламации.Поставщик = Контрагент;
		Регистр.Рекламации.ПриходнаяНакладная = ДокументОснование;
		Регистр.Рекламации.ДокРекламация = текущийДокумент();
		Регистр.Рекламации.Кво = Количество * Коэффициент;
		Регистр.Рекламации.ДвижениеПриходВыполнить();
		
	КонецЦикла;
	
	спФирмы = глПолучитьФирмы(Контекст);
	Если спФирмы.РазмерСписка()>0 Тогда
		ДвиженияОстатки();
	КонецЕсли;
	//Если Число(id_задачиВ_CRM) = 0 Тогда
	//	id_задачиВ_CRM = ПоставитьЗадачуВCRM();
	//	Если id_задачиВ_CRM = 0 Тогда
	//		глНеПроводить(Контекст);
	//		ЗаписьЖурналаРегистрации("неудачная попытка создания задачи в CRM",,"CRM",ТекущийДокумент(),5);
	//		Возврат;
	//	КонецЕсли;
	//КонецЕсли;
КонецПроцедуры