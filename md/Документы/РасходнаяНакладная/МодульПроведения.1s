Перем спФирмы;
Перем ПУСТАЯФИРМА;
Перем ЭтоГрупповаяОбработка;
Перем тбОстРекл;
перем спсРекламация;
//Перем дополненияТорговля;
Перем тбПартииПост;

Функция ПолучитьСкладскоеМестоПоКоличеству(выбТовар,кво)
	выбМесто = ""; тзМест = 0;
	//Сорт= сорт_ПолучитьСорт(Контекст); //+ralex, 09-06-23 11:50

	спсМест = дополненияТорговля.получитьСписокСкладскихМест(Товар,Склад,Единица,Сорт,ТекущийДокумент(),тзМест);
	Возврат тзМест.Итог("ОстатокТовара");
КонецФункции // ПолучитьСкладскоеМестоПоКоличеству

// ===============================
//*ralex, 09-08-23 22:09
//Функция ПроверкаШапки()
//	глВсеВыбрано = 1;
//	глВыбранЛи(Фирма,"Фирма");  
//	глВыбранЛи(Контрагент,"Контрагент");
//	глВыбранЛи(ВидТорговли,"Вид торговли");
//	Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
//		глВыбранЛи(Касса,"Касса");
//	КонецЕсли;
//	глВыбранЛи(КатегорияЦен,"Категория цен");	
//	глВыбранЛи(Склад,"Склад");		
//	глВыбранЛи(Валюта,"Валюта");
//	
//	Если неликвид = 1 Тогда
//		глВыбранЛи(Сорт,"Сорт");	
//	КонецЕсли;
//	
//	//проверим партии поставщика
//	
//	//+ralex, 12-05-21 00:01
//	Если ЭтоГрупповаяОбработка = 0 Тогда
//		спОтбор = СоздатьОбъект("СписокЗначений");
//		тбПартииПост = 0;
//		ВремРег = СоздатьОбъект("Регистры");
//		спОтбор.ДобавитьЗначение(Склад,"Склад");
//		глРассчитатьОстаткиПартийПост(Контекст, ВремРег, спОтбор); 
//		глСформироватьТаблицуПартийПоставщика(Контекст, ВремРег,0,спОтбор,тбПартииПост);
//		Если ВидОперации = 1 Тогда //возврат
//			тбОстРекл = 0;
//			спОтбор.ДобавитьЗначение(Контрагент,"Поставщик");
//			спОтбор.ДобавитьЗначение(ДокументОснование,"ПрихДокумент");
//			глРассчитатьОстаткиРекламаций(Контекст, ВремРег, спОтбор);
//			глСформироватьТаблицуОстРекламации(Контекст, ВремРег ,спОтбор,тбОстРекл);
//		КонецЕсли;
//		
//		дополненияТорговля = СоздатьОбъект("дополненияТорговля");
//		ВыбратьСтроки();
//		Пока ПолучитьСтроку()=1 Цикл
//			стр = 0;
//			Если дополненияТорговля.ПолучитьПараметрГруппыСправочника(Товар,"разрешеныПартииПост") = 1 Тогда
//				Если тбПартииПост.найтиЗначение(Товар,стр,"Товар") = 1 Тогда
//					Если ПартияПост.Выбран() = 0 Тогда
//						Сообщить("в сторке " + НомерСтроки + " у товара не указана партия поставщика.","!!!");
//						Если ТекущаяДата() > '22.05.2021' Тогда
//							глВсеВыбрано = 0; 
//						КонецЕсли;
//					КонецЕсли;
//				КонецЕсли;
//			КонецЕсли;
//		КонецЦикла;
//	КонецЕсли;
//	//+/------------------------
//	
//	Возврат глВсеВыбрано;
//КонецФункции
// -------- заменено на:
Функция ПроверкаШапки()
	глВсеВыбрано = 1;
	глВыбранЛи(Фирма,"Фирма");  
	глВыбранЛи(Контрагент,"Контрагент");
	глВыбранЛи(ВидТорговли,"Вид торговли");
	Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
		глВыбранЛи(Касса,"Касса");
	КонецЕсли;
	глВыбранЛи(КатегорияЦен,"Категория цен");	
	глВыбранЛи(Склад,"Склад");		
	глВыбранЛи(Валюта,"Валюта");
	
	Если неликвид = 1 Тогда
		глВыбранЛи(Сорт,"Сорт");	
	КонецЕсли;
	
	//проверим партии поставщика
	
	//+ralex, 12-05-21 00:01
	спОтбор = СоздатьОбъект("СписокЗначений");
	тбПартииПост = 0;
	ВремРег = СоздатьОбъект("Регистры");
	спОтбор.ДобавитьЗначение(Склад,"Склад");
	глРассчитатьОстаткиПартийПост(Контекст, ВремРег, спОтбор); 
	глСформироватьТаблицуПартийПоставщика(Контекст, ВремРег,0,спОтбор,тбПартииПост);
	Если ВидОперации = 1 Тогда //возврат
		тбОстРекл = 0;
		спОтбор.ДобавитьЗначение(Контрагент,"Поставщик");
		спОтбор.ДобавитьЗначение(ДокументОснование,"ПрихДокумент");
		глРассчитатьОстаткиРекламаций(Контекст, ВремРег, спОтбор);
		глСформироватьТаблицуОстРекламации(Контекст, ВремРег ,спОтбор,тбОстРекл);
	КонецЕсли;
	
	дополненияТорговля = СоздатьОбъект("дополненияТорговля");
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		стр = 0;
		Если дополненияТорговля.ПолучитьПараметрГруппыСправочника(Товар,"разрешеныПартииПост") = 1 Тогда
			Если тбПартииПост.найтиЗначение(Товар,стр,"Товар") = 1 Тогда
				Если ПартияПост.Выбран() = 0 Тогда
					Сообщить("в сторке " + НомерСтроки + " у товара не указана партия поставщика.","!!!");
					Если ЭтоГрупповаяОбработка = 0 Тогда
						Если ТекущаяДата() > '22.05.2021' Тогда
							глВсеВыбрано = 0; 
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	//+/------------------------
	
	Возврат глВсеВыбрано;
КонецФункции
//*/------------------------

//======================================================================
Функция ПроверкаНаОтпускТолькоЧерезШК(текТовар)
	результат = 1;	
	рез = дополненияТорговля.ПолучитьЗначениеСвойстваГруппыНоменклатурыРекурсивно(текТовар,Перечисление.КлассификаторСвойствГруппНоменклатуры.отпускТовараЧерезШК);
	Если рез = 1 Тогда //нужно обязательно проверять
		Если Количество <> КвоШК Тогда
			текстСообщения = "Количество указанное в документе в строке " + НомерСтроки + " не соответствует количеству в колонке ШК";
			Предупреждение(текстСообщения,5);
			Сообщить(текстСообщения);
			результат = 0;
		КонецЕсли;
	КонецЕсли;
	Возврат результат;
КонецФункции // ПроверкаНаОтпускТолькоЧерезШК

// ===============================
Функция ПроверкаСтроки()
	глВсеВыбрано = 1;
	глВыбранЛи(Товар,"Товар",НомерСтроки);
	глВыбранЛи(Единица,"Единица",НомерСтроки);	
	Если СуммаСНДС = 0 Тогда
		тхт = " в строке " + НомерСтроки + " сумма = 0. Документ не проведен!";
		Сообщить(тхт,"!!!");
		ЗаписьЖурналаРегистрации(тхт ,,,,4);
		глВсеВыбрано = 0;
	КонецЕсли;
	Если ЭтоГрупповаяОбработка = 0 Тогда
		Если ПустоеЗначение(Товар) = 0 Тогда
			Если Товар.тмцЗаблокирован = 1 Тогда
				Сообщить("В строке "+НомерСтроки+" выбран товар, заблокированный для отгрузки!","!");
				глВсеВыбрано = 0;
			КонецЕсли;
		КонецЕсли;
		
		Если ПартияПост.Выбран() = 0 Тогда
			Если дополненияТорговля.ПолучитьПараметрГруппыСправочника(Товар,"разрешеныПартииПост") = 1 Тогда
				стр = 0;
				Если тбПартииПост.НайтиЗначение(Товар,стр,"Товар") = 1 Тогда
					Сообщить("В строке "+НомерСтроки+" у товара, имеющего партии поставщика не указана партия поставщика.","!!!");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Если ВидОперации = 0 Тогда  //продажа
			рез = ПроверитьЦенуТовара(Контекст);
			Если (НазваниеНабораПрав() <> "Администратор") Тогда
				Если (рез = 0) и (Товар.Распродажа.Получить(ДатаДок) = 0) Тогда
					глВсеВыбрано = 0;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	//*ralex, 19-08-23 22:29
	//Если (ПолучитьСкладскоеМестоПоКоличеству(Товар,Количество * Коэффициент) <> 0) и (ПустоеЗначение(складскоеМесто) = 1) Тогда
	//	Сообщить("В строке "+НомерСтроки+" не указано складское место.","!!!");
	//	глВсеВыбрано = 0;
	//КонецЕсли;
	// -------- заменено на:
	Если (ПолучитьСкладскоеМестоПоКоличеству(Товар,Количество * Коэффициент) <> 0) или (ДополненияТорговля.ПолучитьПараметрГруппыСправочника(Товар,"флСкладскоеМесто",ДатаДок) = 1) Тогда
		Если (ПустоеЗначение(складскоеМесто) = 1) Тогда
			Сообщить("В строке "+НомерСтроки+" не указано складское место.","!!!");
			глВсеВыбрано = 0;
		КонецЕсли;
	КонецЕсли;
	//*/------------------------
	
	Если (ПроверкаНаОтпускТолькоЧерезШК(Товар) = 0) и (НазваниеНабораПрав() <> "Администратор") Тогда //отдельно чтобы выдавались сообщения о рез. проверки
		глВсеВыбрано = 0;
	КонецЕсли;
	
	Возврат глВсеВыбрано;
КонецФункции

// ===============================
Функция ДвиженияВзаиморасчеты()
	
	ФлагОтгрузки = 1;
	
	спДоговора = глПолучитьСписокКредДоговоров(Контекст);
	
	Если (ВидОперации = 1) Тогда
		ЗнакОплаты = +1; 
		ФлагВозврата = 1;
	КонецЕсли;
	Если (ВидОперации <> 1) Тогда
		ЗнакОплаты = -1; 
		ФлагВозврата = 0;
	КонецЕсли;
	
	ВремРег = СоздатьОбъект("Регистры");	
	Для Инд=1 по спФирмы.РазмерСписка() Цикл
		текФирма = спФирмы.ПолучитьЗначение(Инд);
		тбСуммыПогашения = глПолучитьСуммыДляПогашения(Контекст, текФирма);
		
		//+ralex, 03-07-19 23:33
		Если (Контрагент = Константа.КонтрагентТерминал) или (ВидТорговли = Перечисление.ВидыТорговли.терминал) Тогда
			//для контрагента "Константа.Терминал" нужно уменьшить сумму задолженности на 2%
			//для уменьшения погрешности уменьшаем сумму а потом распределяем
			процентТерминал = Константа.процентТерминал.получить(ДатаДок);
			итогоСуммаСНДС = тбСуммыПогашения.Итог("СуммаСНДС");
			итог_2 = Окр((итогоСуммаСНДС - итогоСуммаСНДС *процентТерминал/100),2);
			тбСуммыПогашения.ВыбратьСтроки();
			Пока тбСуммыПогашения.ПолучитьСтроку() = 1 Цикл
				Если тбСуммыПогашения.ТекущаяСтрока() = тбСуммыПогашения.Количествострок() Тогда
					тбСуммыПогашения.СуммаСНДС = итог_2; //остаток
				Иначе
					врСумма = тбСуммыПогашения.СуммаСНДС;
					тбСуммыПогашения.СуммаСНДС = Окр((врСумма - врСумма * процентТерминал/100),2);
					итог_2 = итог_2 - тбСуммыПогашения.СуммаСНДС;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		//+/ralex, 03-07-19 23:33
		
		
		// Проверяем возможность кредита 
		Если (ВидОперации <> 1) и (ВидТорговли = Перечисление.ВидыТорговли.Кредит ) 
		и (Константа.РазрешитьПревышениеКредита = Нет) и (текФирма = ПУСТАЯФИРМА) Тогда //только по управленческому учету
			//*/ralex, 2017-12-27 22:34:12
			
			тзРез = гл_ПолучитьуДолгиПостПок(Контекст,текФирма,Контрагент);
			общийДолг =тзРез.ОбщийДолг;
			
			общийДолг = общийДолг + глПересчет(Итог("СуммаСНДС"),Валюта,Курс,Контрагент.ВалютаВзаиморасчетов,Дата_Курса);
			СуммаКредита = Контрагент.СуммаКредита.Получить(ДатаДок);                                            
			СуммаКредита = глПересчет(СуммаКредита,Контрагент.ВалютаКредита,ДатаДок,Контрагент.ВалютаВзаиморасчетов,ДатаДок);
			Если (общийДолг > СуммаКредита) и (СуммаКредита <> 0) Тогда
				тхтСообщение = Шаблон("Сумма накладной вместе с текущим долгом клиента ([глФРМ(общийДолг,Контрагент.ВалютаВзаиморасчетов,1)]) превышает сумму кредита ([глФРМ(СуммаКредита,Контрагент.ВалютаВзаиморасчетов,1)]). ");
				
				Если НазваниеНабораПрав() <> "Администратор" Тогда
					//Если ЭтоГрупповаяОбработка = 0 Тогда
						ЗаписьЖурналаРегистрации("мы тут #6","взаиморасчеты " + тхтСообщение,,ТекущийДокумент());
						глНеПроводить(Контекст,тхтСообщение);
						Возврат 0;
					//КонецЕсли;
				Иначе
					Сообщить(тхтСообщение);
				КонецЕсли;
			КонецЕсли;
			
			Если Контрагент.типВзаиморасчетов <> Перечисление.типыВзаиморасчетовСКлиентами.реализация Тогда
				
				глРассчитатьИтогиВзаиморасчетов(Контекст,ВремРег,ПУСТАЯФИРМА,?(ВидТорговли = Перечисление.ВидыТорговли.Бартер,-ЗнакОплаты,ЗнакОплаты),Контрагент,);
				тбДолги = глПолучитьИтогиВзаиморасчетов(Контекст,ВремРег, текФирма,?(ВидТорговли = Перечисление.ВидыТорговли.Бартер,-ЗнакОплаты,ЗнакОплаты), Контрагент,);			
				ДолгКонтрагента = 0;
				ВалютаДолга = ?(ПустоеЗначение(текФирма)=0,Гривня,глВалютаВзаиморасчетов(Контрагент));
				
				Просрочено = 0;
				ПросроченныйДолг = 0;
				итогоСуммаПросрочена = 0;
				тбДолги.ВыбратьСтроки();
				Пока тбДолги.ПолучитьСтроку()=1 Цикл
					
					ДолгКонтрагента = ДолгКонтрагента + глПересчет(тбДолги.Долг,ВалютаДолга,Дата_курса,Контрагент.ВалютаВзаиморасчетов,Дата_курса);
					
					Если тбДолги.Долг <= 0 Тогда
						Продолжить;
					КонецЕсли;
					
					ВидДокКред = тбДолги.КредДокумент.Вид();
					
					Если глЕстьРеквизитШапки("ДатаОплаты",ВидДокКред)=Да Тогда
						текДатаОплаты = тбДолги.КредДокумент.ДатаОплаты;
						Если ПустоеЗначение(текДатаОплаты)=1 Тогда
							текДатаОплаты = тбДолги.КредДокумент.ДатаДок;
						КонецЕсли;
					Иначе 
						текДатаОплаты = тбДолги.КредДокумент.ДатаДок + Контрагент.Глубина.Получить(тбДолги.КредДокумент.ДатаДок);
					КонецЕсли;
					
					Если ДатаДок > текДатаОплаты Тогда
						ПросроченныйДолг = ПросроченныйДолг + тбДолги.Долг;
						Если Просрочено<(ДатаДок-текДатаОплаты) Тогда
							Просрочено = ДатаДок-текДатаОплаты;
							//+ralex, 2018-02-02 17:30:23
							суммаПросрочена = глПересчет(тбДолги.Долг,ВалютаДолга,Дата_курса,Контрагент.ВалютаВзаиморасчетов,Дата_курса);
							итогоСуммаПросрочена = итогоСуммаПросрочена + суммаПросрочена;
							тхтСообщение1 = Шаблон("по документу [тбДолги.КредДокумент] просрочена оплата [глФРМ(суммаПросрочена,ВалютаДолга,1)] на [Просрочено] дней.");
							Сообщить(тхтСообщение1);
							ЗаписьЖурналаРегистрации("мы тут #7","взаиморасчеты " + тхтСообщение,,ТекущийДокумент());
							//глНеПроводить(Контекст,тхтСообщение);
							//Возврат 0;

							//+/ralex, 2018-02-02 17:30:23
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				
				//*ralex, 27-08-20 22:53
				//Если (Просрочено > 0) и (итогоСуммаПросрочена > Константа.разрСуммаПросрДолга) Тогда
				// -------- заменено на:
				Если (итогоСуммаПросрочена > Константа.разрСуммаПросрДолга) Тогда
				//*/ralex, 27-08-20 22:53
					тхтСообщение = Шаблон("Всего просрочена оплата на сумму [глФРМ(итогоСуммаПросрочена,ВалютаДолга,1)].");
					Если НазваниеНабораПрав() <> "Администратор" Тогда
						//Если ЭтоГрупповаяОбработка = 0 Тогда
							глНеПроводить(Контекст,тхтСообщение);
							Возврат 0;
						//КонецЕсли;
					Иначе
						Сообщить(тхтСообщение);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;		       
		
		глРассчитатьИтогиВзаиморасчетов(Контекст,ВремРег,спФирмы,?(ВидТорговли = Перечисление.ВидыТорговли.Бартер,-ЗнакОплаты,ЗнакОплаты),Контрагент, спДоговора);
		тбДолги = глПолучитьИтогиВзаиморасчетов(Контекст,ВремРег, текФирма,?(ВидТорговли = Перечисление.ВидыТорговли.Бартер,-ЗнакОплаты,ЗнакОплаты), Контрагент, спДоговора);			
		
		Если ДокументОснование.Выбран() = 1 Тогда
			Если ДокументОснование.Вид() = "Счет" Тогда
				ДокОсн = ПолучитьПустоеЗначение("Документ");
			Иначе
				ДокОсн = ДокументОснование;
			КонецЕсли;
		Иначе
			ДокОсн = ДокументОснование;
		КонецЕсли;
		глПровестиПоВзаиморасчетам(Контекст, ФлагОтгрузки, ЗнакОплаты, ФлагВозврата, текФирма, тбДолги, тбСуммыПогашения, Контрагент, спДоговора, ВидТорговли,ДокОсн);
	КонецЦикла;
	
КонецФункции

// ===============================
Процедура ДвиженияРезерв();
	
	Если ДокументОснование.Вид()="Счет" Тогда
	    ВремРегистры=СоздатьОбъект("Регистры");
		Рег = ВремРегистры.РезервыТоваров;
		
		спТовары = СоздатьОбъект("СписокЗначений");
		ВыгрузитьТабличнуюЧасть(спТовары,"Товар");
		
		Рег.УстановитьЗначениеФильтра("Товар",Товар,2);
		Рег.УстановитьЗначениеФильтра("ПоСчету",ДокументОснование,1);
		
		Если ИтогиАктуальны()=0 Тогда
		    Рег.ВременныйРасчет(1);
			//*ralex, 03-11-20 15:14
			//ВремРегистры.РассчитатьРегистрыНа(ТекущийДокумент());
			// -------- заменено на:
			ВремРегистры.РассчитатьРегистрыНа(ПолучитьПозициюТА());
			//*/ralex, 03-11-20 15:14
		КонецЕсли;
		
		тбРезервы = 0;
		Рег.ВыгрузитьИтоги(тбРезервы,1,1);
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл
			НС = 0;
			Если тбРезервы.НайтиЗначение(Товар,НС,"Товар")=1 Тогда
				тбРезервы.ПолучитьСтрокуПоНомеру(НС);
				ТекущийРезерв = тбРезервы.РезервТовара;
			Иначе
				Продолжить;
			КонецЕсли;
			СписываемыйРезерв = Мин(ТекущийРезерв,Количество*Коэффициент);
			Если СписываемыйРезерв > 0 Тогда
				Регистр.РезервыТоваров.Товар=Товар;
				Регистр.РезервыТоваров.ПоСчету=ДокументОснование;
				Регистр.РезервыТоваров.РезервТовара=СписываемыйРезерв;
				Регистр.РезервыТоваров.ДвижениеРасходВыполнить();
				тбРезервы.РезервТовара = тбРезервы.РезервТовара - СписываемыйРезерв;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры 

Процедура ДвиженияРекламации();
	Если ВидОперации = 0 Тогда
		Возврат;
	КонецЕсли;
	
	спсРекламация = СоздатьОбъект("списокЗначений");
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ПустоеЗначение(Рекламация) = 1 Тогда
			Продолжить;
		КонецЕсли;
		НС = 0;
		тбОстРекл.ВыбратьСтроки();
		Пока тбОстРекл.ПолучитьСтроку() = 1 Цикл
			Если тбОстРекл.ДокРекламация = Рекламация Тогда
				Если тбОстРекл.Товар = Товар Тогда
					квоСписать = Мин(тбОстРекл.Кво, Количество*Коэффициент);
					тбОстРекл.Кво = тбОстРекл.Кво - квоСписать;
					Если квоСписать > 0 Тогда
						Регистр.Рекламации.Товар=Товар;
						Регистр.Рекламации.Поставщик = Контрагент;
						Регистр.Рекламации.ПриходнаяНакладная = ДокументОснование;
						Регистр.Рекламации.докРекламация = Рекламация;
						Регистр.Рекламации.Кво = квоСписать;
						Регистр.Рекламации.ДвижениеРасходВыполнить();
						Если спсРекламация.найтиЗначение(Рекламация) = 0 Тогда
							спсРекламация.ДобавитьЗначение(Рекламация);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры               

// ===============================
Процедура ДвиженияДеньги()
	
	Если (ЭтоВидТогровлиНал(ВидТорговли) = Перечисление.ВидыТорговли.Нал) Тогда
		
		Если Константа.ПроводкиПоКассеТолькоОрдерами = Да тогда
			Возврат;
		КонецЕсли;	
		
		процентТерминал = Константа.процентТерминал.получить(ДатаДок); //+ralex, 20-10-23 22:38
		
		Для Инд=1 по спФирмы.РазмерСписка() Цикл
			текФирма = спФирмы.ПолучитьЗначение(Инд);
			
			Регистр.Деньги.Фирма = текФирма;
			Регистр.Деньги.Валюта = Валюта;
			
			Если ПустоеЗначение(текФирма)=0 Тогда
				Регистр.Деньги.Счет = Касса;
			Иначе	
				Регистр.Деньги.Счет = 0;
			КонецЕсли;
			
			Регистр.Деньги.БезНал = 0; // Наличные
			
			//+ralex, 20-10-23 22:38
			суммаДеньги = Итог("СуммаСНДС");
			Если (Контрагент = Константа.КонтрагентТерминал)  или (ВидТорговли = Перечисление.ВидыТорговли.терминал) Тогда
				суммаДеньги = Окр((суммаДеньги - суммаДеньги *процентТерминал/100),2);
			КонецЕсли;
			//+/------------------------
			
			//*ralex, 20-10-23 22:38
			//Если ВидОперации = 1 Тогда // Возврат
			//	Регистр.Деньги.Сумма = - Итог("СуммаСНДС");
			//	Регистр.Деньги.ДвижениеРасходВыполнить();
			//Иначе 
			//	Регистр.Деньги.Сумма = Итог("СуммаСНДС");
			//	Регистр.Деньги.ДвижениеПриходВыполнить();
			//КонецЕсли;
			// -------- заменено на:
			Если ВидОперации = 1 Тогда // Возврат
				Регистр.Деньги.Сумма = - суммаДеньги;
				Регистр.Деньги.ДвижениеРасходВыполнить();
			Иначе 
				Регистр.Деньги.Сумма = суммаДеньги;
				Регистр.Деньги.ДвижениеПриходВыполнить();
			КонецЕсли;
			//*/------------------------
		КонецЦикла;
	ИначеЕсли (ВидТорговли = Перечисление.ВидыТорговли.безнал) Тогда
		Для Инд=1 по спФирмы.РазмерСписка() Цикл
			текФирма = спФирмы.ПолучитьЗначение(Инд);
			
			Регистр.Деньги.Фирма = текФирма;
			Регистр.Деньги.Валюта = Валюта;
			
			Если ПустоеЗначение(текФирма)=0 Тогда
				Регистр.Деньги.Счет = Касса;
			Иначе	
				Регистр.Деньги.Счет = 0;
			КонецЕсли;
			
			Регистр.Деньги.БезНал = 1; // 
			
			суммаДеньги = Итог("СуммаСНДС");
			Если ВидОперации = 1 Тогда // Возврат
				Регистр.Деньги.Сумма = - суммаДеньги;
				Регистр.Деньги.ДвижениеРасходВыполнить();
			Иначе 
				Регистр.Деньги.Сумма = суммаДеньги;
				Регистр.Деньги.ДвижениеПриходВыполнить();
			КонецЕсли;
		КонецЦикла;
	Иначе
		Возврат;
	КонецЕсли;  
КонецПроцедуры        

// ===============================
Функция ДвиженияОстатки()
	
	ФлагПрихода = 0;
	ФлагВозврата = ВидОперации;
	
	рез = глИзменитьОстатки(Контекст, спФирмы, Склад, ФлагВозврата, ФлагПрихода,,,?(неликвид = 0,КондиционныйТовар,Сорт));
	Возврат рез;
КонецФункции

// ===============================
Процедура ДвиженияРеализация(ФлагВозврата,текФирма,тбРеализация)

	//Вычислим ставку вознаграждения тбРеализация по каждому договору в разрезе СтавкаНДС
	Если ФлагВозврата = 1 Тогда
		ДокументОснованиеРеализация = ДокументОснование;
	Иначе
		ДокументОснованиеРеализация = ТекущийДокумент();
	КонецЕсли; 
	
	глЗаполнитьСтавкиВознаграждения(Контекст, текФирма,ДокументОснованиеРеализация, тбРеализация);
	
	ФлагОтгрузки = 1;
	ЗнакОплаты = +1;
	
	спДоговора = СоздатьОбъект("СписокЗначений");
	спКонтрагенты = СоздатьОбъект("СписокЗначений");   
	
	//составляем список договоров и дополнений,
	тбРеализация.ВыбратьСтроки();
	Пока тбРеализация.ПолучитьСтроку()=1 Цикл
		Если спДоговора.Принадлежит(тбРеализация.ДоговорКомм)=0 Тогда
			Дог = тбРеализация.ДоговорКомм;
			спДоговора.ДобавитьЗначение(Дог);
			спДоговора.ДобавитьЗначение(глПолучитьДополнениеДоговора(Дог,Перечисление.ВидыДополненийДоговоров.Консигнация, ДокументОснованиеРеализация.ДатаДок));
			//список контрагентов
			Если спКонтрагенты.Принадлежит(Дог.Контрагент)=0 Тогда
				спКонтрагенты.ДобавитьЗначение(Дог.Контрагент);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ВремРегРеализация = СоздатьОбъект("Регистры");
	
	глРассчитатьИтогиВзаиморасчетов(Контекст, ВремРегРеализация, текФирма, ЗнакОплаты, спКонтрагенты, спДоговора);				
	тбДолги = глПолучитьИтогиВзаиморасчетов(Контекст, ВремРегРеализация, текФирма, ЗнакОплаты, спКонтрагенты, спДоговора);
	
	тбСуммыПогашения = СоздатьОбъект("ТаблицаЗначений");
	тбСуммыПогашения.НоваяКолонка("СтавкаНДС");
	тбСуммыПогашения.НоваяКолонка("СтавкаВознаграждения");
	тбСуммыПогашения.НоваяКолонка("СуммаСНДС");
	
	// Мы должны поставщикам 
	стДоговор = 0;				
	тбРеализация.ВыбратьСтроки();
	Пока тбРеализация.ПолучитьСтроку()=1 Цикл
		Если стДоговор <> тбРеализация.ДоговорКомм Тогда
			Если ПустоеЗначение(стДоговор)=0 Тогда
				глПровестиПоВзаиморасчетам(Контекст,  ФлагОтгрузки, ЗнакОплаты, ФлагВозврата, 
					текФирма, тбДолги, тбСуммыПогашения, стДоговор.Контрагент, стДоговор, Перечисление.ВидыТорговли.Консигнация, ДокументОснованиеРеализация);
			КонецЕсли;
			стДоговор=тбРеализация.ДоговорКомм;
			тбСуммыПогашения.УдалитьСтроки();
		КонецЕсли;
		тбСуммыПогашения.НоваяСтрока();
		Вознаграждение = тбРеализация.СуммаСНДС*(1 - тбРеализация.СтавкаВознаграждения/100);
		Если ПустоеЗначение(текФирма)=0 Тогда
			тбСуммыПогашения.СтавкаНДС = тбРеализация.СтавкаНДС;
			ВВ = Гривня;
		Иначе
			ВВ = глВалютаВзаиморасчетов(стДоговор.Контрагент);
		КонецЕсли;
		тбСуммыПогашения.СуммаСНДС = глПодготовитьСумму(Вознаграждение,Валюта,Курс,ВВ,Дата_Курса);
		тбСуммыПогашения.СтавкаВознаграждения = тбРеализация.СтавкаВознаграждения;
	КонецЦикла;
	Если ПустоеЗначение(стДоговор)=0 Тогда
		глПровестиПоВзаиморасчетам(Контекст,  ФлагОтгрузки, ЗнакОплаты, ФлагВозврата, текФирма,
			тбДолги, тбСуммыПогашения, стДоговор.Контрагент, стДоговор, Перечисление.ВидыТорговли.Консигнация,ДокументОснованиеРеализация);
	КонецЕсли;          
	
	ФлагОтгрузки = 0;
	ЗнакОплаты = -1;
	
	глРассчитатьИтогиВзаиморасчетов(Контекст, ВремРегРеализация, текФирма, ЗнакОплаты, спКонтрагенты, спДоговора);				
	тбДолги = глПолучитьИтогиВзаиморасчетов(Контекст, ВремРегРеализация, текФирма, ЗнакОплаты, спКонтрагенты, спДоговора);
	
	// Поставщики должны нам вознаграждение
	стДоговор = 0;			
	тбСуммыПогашения.УдалитьСтроки();
	тбРеализация.ВыбратьСтроки();
	Пока тбРеализация.ПолучитьСтроку()=1 Цикл
		Если стДоговор <> тбРеализация.ДоговорКомм Тогда
			Если ПустоеЗначение(стДоговор)=0 Тогда		
				ДоговорВознаграждения = глПолучитьДополнениеДоговора(стДоговор, Перечисление.ВидыДополненийДоговоров.Консигнация, ДокументОснованиеРеализация.ДатаДок);
				глПровестиПоВзаиморасчетам(Контекст,  ФлагОтгрузки, ЗнакОплаты, ФлагВозврата, 
					текФирма, тбДолги, тбСуммыПогашения, стДоговор.Контрагент, ДоговорВознаграждения, Перечисление.ВидыТорговли.Консигнация,ДокументОснованиеРеализация);
			КонецЕсли;
			стДоговор=тбРеализация.ДоговорКомм;
			тбСуммыПогашения.УдалитьСтроки();
		КонецЕсли;
		тбСуммыПогашения.НоваяСтрока();
		Вознаграждение = тбРеализация.СуммаСНДС*тбРеализация.СтавкаВознаграждения/100;
		Если ПустоеЗначение(текФирма)=0 Тогда
			тбСуммыПогашения.СтавкаНДС = тбРеализация.СтавкаНДС;
			ВВ = Гривня;
		Иначе
			ВВ = глВалютаВзаиморасчетов(стДоговор.Контрагент);
		КонецЕсли;
		тбСуммыПогашения.СуммаСНДС = глПодготовитьСумму(Вознаграждение,Валюта,Курс,ВВ,Дата_Курса);
		тбСуммыПогашения.СтавкаВознаграждения = 0;
	КонецЦикла;
	
	Если ПустоеЗначение(стДоговор)=0 Тогда
		ДоговорВознаграждения = глПолучитьДополнениеДоговора(стДоговор, Перечисление.ВидыДополненийДоговоров.Консигнация, ДокументОснованиеРеализация.ДатаДок);
		глПровестиПоВзаиморасчетам(Контекст,  ФлагОтгрузки, ЗнакОплаты, ФлагВозврата, текФирма, 
			тбДолги, тбСуммыПогашения, стДоговор.Контрагент, ДоговорВознаграждения, Перечисление.ВидыТорговли.Консигнация,ДокументОснованиеРеализация);
	КонецЕсли;          
	
КонецПроцедуры

// ===============================
Процедура ДвиженияПартии() 

	спОтбор = СоздатьОбъект("СписокЗначений");
	спСтатус = СоздатьОбъект("СписокЗначений");
	
	Если ВидОперации = 0  Тогда
		ФлагВозврата = 0;
		спСтатус.ДобавитьЗначение(Купленный);
		спСтатус.ДобавитьЗначение(Принятый);
		спСтатус.ДобавитьЗначение(ПринятыйБезПраваПередачи);
		спОтбор.Установить("Статус", спСтатус);
	Иначе
		ФлагВозврата = 1;
		спСтатус.ДобавитьЗначение(Купленный);
		спОтбор.Установить("Статус", спСтатус);
		Если ДокументОснование.Выбран()=1 Тогда
			спОтбор.Установить("ТекущийДокумент", ДокументОснование);
			спОтбор.Установить("ПрихДокумент", ДокументОснование);
			спОтбор.Установить("Поставка", ДокументОснование);
			спОтбор.Установить("Контрагент", ДокументОснование.Контрагент);
			спОтбор.Установить("Поставщик", ДокументОснование.Контрагент);
		Иначе			
			спОтбор.Установить("Контрагент", Контрагент);
			спОтбор.Установить("Поставщик", Контрагент);
		КонецЕсли;
	КонецЕсли;
	
	ВремРег = СоздатьОбъект("Регистры");
	глРассчитатьОстаткиПартий(Контекст, ВремРег, спФирмы, ФлагВозврата, спОтбор);
	
	тбРеализация = СоздатьОбъект("ТаблицаЗначений");
	тбРеализация.НоваяКолонка("ДоговорКомм");
	тбРеализация.НоваяКолонка("СтавкаНДС");
	тбРеализация.НоваяКолонка("СуммаСНДС","Число",19,5);

	Для Инд=1 по спФирмы.РазмерСписка() Цикл
		текФирма = спФирмы.ПолучитьЗначение(Инд);
		
		Если ПустоеЗначение(текФирма)=1 Тогда
			МетодРасчетаСебестоимости = Константа.МетодРасчетаСебестоимостиУправленческогоУчета;
		Иначе
			текФирма.ИспользоватьДату(ДатаДок);
			МетодРасчетаСебестоимости = текФирма.МетодРасчетаСебестоимостиФинансовогоУчета;
		КонецЕсли;                  
		
		тбРеализация.УдалитьСтроки();
		
		Предпочтение = 0;
		тбПартии = 0;
		тбОстатки = 0;
		ИнвСтартегияПредпочтения  = ФлагВозврата;
		ИнвСтратегияПродажи = ФлагВозврата;
		
		глСформироватьТаблицуПартий(Контекст, ВремРег,текФирма, ФлагВозврата, спОтбор, Предпочтение, 
			тбПартии, тбОстатки, ИнвСтартегияПредпочтения, ИнвСтратегияПродажи);
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл
			
			Если ПустоеЗначение(текФирма)=1 Тогда
				ВУ = Товар.ВалютаУчета;
			Иначе	
				ВУ = Гривня;
			КонецЕсли;           
			
			
			ВсегоСписать = Количество * Коэффициент;			
			ОсталосьСписать = ВсегоСписать;
			                                        
			ВсегоСуммаСНДС = глПересчет(СуммаСНДС,Валюта,Курс,ВУ,Дата_курса);
			ВсегоСуммаБезНДС = глПересчет(СуммаБезНДС,Валюта,Курс,ВУ,Дата_курса);
			ОсталосьСуммаСНДС = ВсегоСуммаСНДС;
			ОсталосьСуммаБезНДС = ВсегоСуммаБезНДС;
			
//color8454143
			Если Товар.ВидТовара = Перечисление.ВидыТоваров.Услуга Тогда
				Если ФлагВозврата = 0 Тогда
					КодОперации = ПродажаУслуги;                        
				Иначе
					КодОперации = СторноПокупкаУслуги;
				КонецЕсли;
				
				СписываемыйОборот = ОсталосьСуммаСНДС;
				СписываемыйНДСРасхода = ОсталосьСуммаСНДС - ОсталосьСуммаБезНДС;
				
				//*ralex, 2018-04-18 22:09:40
				//глПровестиПартию(Контекст, 0, ФлагВозврата, текФирма, Товар, Услуга,
				//	0,0, ТекущийДокумент(), ТекущийДокумент(), ОсталосьСписать, ОсталосьСуммаБезНДС, 
				//	0, ОсталосьСуммаСНДС - ОсталосьСуммаБезНДС,  СписываемыйОборот,СписываемыйНДСРасхода,КодОперации, 0, СписываемыйОборот);
				// -------- заменено на:
				глПровестиПартию(Контекст, 1, 0, текФирма, Товар, Услуга,
					0,0, ТекущийДокумент(), ТекущийДокумент(), ОсталосьСписать, ОсталосьСуммаБезНДС, 
					0, ОсталосьСуммаСНДС - ОсталосьСуммаБезНДС,  СписываемыйОборот,СписываемыйНДСРасхода,ПокупкаУслуги, 0, 0);
				глПровестиПартию(Контекст, 0, ФлагВозврата, текФирма, Товар, Услуга,
					0,0, ТекущийДокумент(), ТекущийДокумент(), ОсталосьСписать, ОсталосьСуммаБезНДС, 
					0, ОсталосьСуммаСНДС - ОсталосьСуммаБезНДС,  СписываемыйОборот,СписываемыйНДСРасхода,КодОперации, 0, 0);
				//*/ralex, 2018-04-18 22:09:40
					
				Продолжить;
			КонецЕсли;
//color

			НС=0;
			Если ?(ФлагВозврата=0,тбПартии.НайтиЗначение(НомерСтроки,НС,"НомерСтрокиДокумента"),тбПартии.НайтиЗначение(Товар,НС,"Товар"))=1 Тогда
				тбПартии.ПолучитьСтрокуПоНомеру(НС);
			Иначе
				тбПартии.ВыбратьСтроки();
				тбПартии.ПолучитьСтроку();
			КонецЕсли;
			
			Пока ?(ФлагВозврата=0,тбПартии.НомерСтрокиДокумента,тбПартии.Товар) = ?(ФлагВозврата=0,НомерСтроки,Товар) Цикл
				
				КонтрагентП = тбПартии.Контрагент;
				ПоставщикП = тбПартии.Поставщик;
				ПоставкаП = тбПартии.Поставка;
				ПрихДокументП = тбПартии.ПрихДокумент;
				СтатусП = тбПартии.Статус;
				
				НС =0;
				Если тбОстатки.НайтиЗначение(глПолучитьКлючТбОстатков(ПрихДокументП,ПоставкаП,Товар.Код),НС,"Ключ")=1 Тогда
					
					тбОстатки.ПолучитьСтрокуПоНомеру(НС);
					
					ОстатокТовара = тбОстатки.ОстатокТовара;
					
					Если ОстатокТовара = 0 Тогда
						Если тбПартии.ПолучитьСтроку()=0 Тогда
							Прервать;
						КонецЕсли;
						Продолжить;
					КонецЕсли;
					
					СписываемыйОстатокТовара = Мин(ОсталосьСписать, ОстатокТовара);
					
					КоэфСписания = СписываемыйОстатокТовара / ОстатокТовара;
					КоэфРеализации = СписываемыйОстатокТовара / ВсегоСписать;
					
					СписываемаяСтоимость = тбОстатки.Стоимость * КоэфСписания;
					СписываемаяПродСтоимость = тбОстатки.ПродСтоимость * КоэфСписания;
					СписываемыйНДС = тбОстатки.НДС * КоэфСписания;
					
					Если СписываемыйОстатокТовара = ОсталосьСписать Тогда
						СписываемыйОборот = ОсталосьСуммаСНДС;
						СписываемыйНДСРасхода = ОсталосьСуммаСНДС - ОсталосьСуммаБезНДС;
					Иначе
						СписываемыйОборот = ВсегоСуммаСНДС * КоэфРеализации;
						СписываемыйНДСРасхода = (ВсегоСуммаСНДС - ВсегоСуммаБезНДС) * КоэфРеализации;
					КонецЕсли;  
					
					СписываемаяПрибыль = глРассчитатьПрибыль(Контекст,текФирма,СтатусП,ПоставкаП,ПрихДокументП,СписываемаяСтоимость,СписываемыйНДС,СписываемаяПродСтоимость,СписываемыйОборот,СписываемыйНДСРасхода);
					
					ОсталосьСуммаБезНДС = ОсталосьСуммаБезНДС - СписываемыйОборот + СписываемыйНДСРасхода;
					ОсталосьСуммаСНДС = ОсталосьСуммаСНДС - СписываемыйОборот;
					
					Если ФлагВозврата = 0 Тогда
						Если СтатусП = Купленный Тогда
							КодОперации = ПродажаКупленногоТовара;
						Иначе
							КодОперации = ПродажаПринятогоТовара;
						КонецЕсли;
					Иначе //Если ФлагВозврата = 1 Тогда
						                  
						КодОперации = ВозвратКупленногоТовара;
					КонецЕсли;
					
					глПровестиПартию(Контекст, 0, ФлагВозврата, текФирма, Товар, СтатусП, КонтрагентП, ПоставщикП, 
						ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
						СписываемыйНДС, СписываемыйОборот, СписываемыйНДСРасхода, КодОперации,ДокументОснование, СписываемаяПрибыль);
					
					глУчестьСписание(тбОстатки,СписываемыйОстатокТовара,СписываемаяСтоимость,СписываемаяПродСтоимость,СписываемыйНДС,СписываемыйОборот,СписываемыйНДСРасхода,СписываемаяПрибыль);
					
					Если (СтатусП = Принятый) или (СтатусП = ПринятыйБезПраваПередачи) Тогда
						тбРеализация.НоваяСтрока();
						тбРеализация.ДоговорКомм = ПоставкаП.Договор;
						тбРеализация.СтавкаНДС = Товар.СтавкаНДС.Получить(ДатаДок);
						тбРеализация.СуммаСНДС = глПересчет(СписываемыйОборот,ВУ,Дата_курса,Валюта,Курс);
					КонецЕсли;
					
					ОсталосьСписать = ОсталосьСписать - СписываемыйОстатокТовара;
				КонецЕсли;
				
				Если ОсталосьСписать = 0 Тогда
					Прервать;
				КонецЕсли;   
				
				Если тбПартии.ПолучитьСтроку()=0 Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла; 
			
			Если ОсталосьСписать > 0 Тогда
				Если ПустоеЗначение(текФирма)=1 Тогда //это сообщение только по упр. учету нужно
					глСообщитьОбОтсутствииПартии(Контекст,ФлагВозврата, текФирма, Товар, НомерСтроки);
				КонецЕсли;
				//*ralex, 27-11-19 23:03
				//Если Константа.РазрешитьОтрицательныеОстаткиТоваров = Нет Тогда
				//	глНеПроводить(Контекст);
				//	Возврат;
				//	
				// -------- заменено на:
				//*ralex, 07-04-20 00:29
				//Если (Константа.РазрешитьОтрицательныеОстаткиТоваров = Нет) и (Товар.Распродажа = 0) Тогда
				//	глНеПроводить(Контекст);
				//	Возврат;
				// -------- заменено на:
				Если (Константа.РазрешитьОтрицательныеОстаткиТоваров = Нет) и (НазваниеНабораПрав() <> "Администратор") Тогда
					глНеПроводить(Контекст);
					Возврат;
				//*/ralex, 07-04-20 00:29
				//*/ralex, 27-11-19 23:03
				Иначе
					СписываемыйОстатокТовара = ОсталосьСписать;
					КоэфСписания = СписываемыйОстатокТовара / ВсегоСписать;
					СписываемаяСтоимость = ВсегоСуммаБезНДС * КоэфСписания;
					
					СписываемыйНДС = (ВсегоСуммаСНДС - ВсегоСуммаБезНДС) * КоэфСписания;
					СтатусП = Купленный;
					
					Если МетодРасчетаСебестоимости = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
						КонтрагентП = 0;
						ПоставщикП = 0;
						ПоставкаП = 0;
						ПрихДокументП = 0;
					ИначеЕсли (ФлагВозврата = 1) и (ПустоеЗначение(ДокументОснование) = 0) Тогда
						КонтрагентП = ДокументОснование.Контрагент;
						ПоставщикП = ДокументОснование.Контрагент;
						ПоставкаП = ДокументОснование;
						ПрихДокументП = ДокументОснование;
					Иначе
						КонтрагентП = 0;
						ПоставщикП = 0;
						ПоставкаП = 0;
						ПрихДокументП = ТекущийДокумент();
					КонецЕсли;			
					
					СписываемыйОборот = ОсталосьСуммаСНДС;
					СписываемыйНДСРасхода = ОсталосьСуммаСНДС - ОсталосьСуммаБезНДС;
					
					Если ФлагВозврата = 0 Тогда
						СписываемаяПродСтоимость = 0;
						
						КодОперации = ПродажаКупленногоТовара;
					Иначе
						СписываемаяПродСтоимость = ВсегоСуммаСНДС * КоэфСписания;
						
						КодОперации = ВозвратКупленногоТовара;				
					КонецЕсли;
					
					глПровестиПартию(Контекст, 0, ФлагВозврата, текФирма, Товар, СтатусП, КонтрагентП, ПоставщикП, 
						ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
						СписываемыйНДС, СписываемыйОборот, СписываемыйНДСРасхода, КодОперации,ДокументОснование,0);
						Если ПустоеЗначение(текФирма)=1 Тогда //это сообщение только по упр. учету нужно
							глСообщитьОСозданииПартии(Товар, СтатусП, СписываемыйОстатокТовара);
						КонецЕсли;
					КонецЕсли; 
			КонецЕсли; // ОсталосьСписать > 0
		КонецЦикла; // строки документа
		
		// Реализация
		Если тбРеализация.КоличествоСтрок() > 0 Тогда
			ДвиженияРеализация(ФлагВозврата,текФирма,тбРеализация);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

//*ralex, 26-05-21 15:35
//Функция ДвиженияПартииПоставщика() 
//	спОтбор = СоздатьОбъект("СписокЗначений");
//	тбПартии = 0;
//	ВремРег = СоздатьОбъект("Регистры");
//	глРассчитатьОстаткиПартийПост(Контекст, ВремРег, спОтбор); 
//	глСформироватьТаблицуПартийПоставщика(Контекст, ВремРег,0,спОтбор,тбПартии);
//	
//	ВыбратьСтроки();
//	Пока ПолучитьСтроку()=1 Цикл
//		Если ПартияПост.Выбран() = 0 Тогда
//			Продолжить;
//		КонецЕсли;
//		
//		ОсталосьСписать =  Количество * Коэффициент;
//		//проверяем на списание с партии у которой наименьший подходящий остаток
//		тбПартии.ВыбратьСтроки();
//		Пока тбПартии.ПолучитьСтроку() = 1 Цикл
//			Если тбПартии.Товар <> Товар Тогда
//				Продолжить;
//			КонецЕсли;
//			Если тбПартии.ОстатокТовара < ОсталосьСписать Тогда
//				Продолжить;
//			КонецЕсли;
//			Если тбПартии.ПартияПост = ПартияПост Тогда
//				Прервать;
//			Иначе
//				Сообщить("ВНИМАНИЕ! Для товара в строке " + НомерСтроки + " " + Товар +" имеется партия с меньшим количеством на остатке.","!!!" );
//				Прервать;
//			КонецЕсли;
//		КонецЦикла;
//		
//		НС=0;
//		Если тбПартии.НайтиЗначение(ПартияПост,НС,"ПартияПост")=1 Тогда
//			тбПартии.ПолучитьСтрокуПоНомеру(НС);
//			Если тбПартии.Товар <> Товар Тогда
//				Сообщить("Ошибка!!! В рег. ""Партии поставщика"" партия пост " + ПартияПост.Код + " " + ПартияПост.Владелец);
//				Возврат 0;
//			КонецЕсли;
//		Иначе
//			Сообщить("Для товара " + Товар + " нет остатка по партии поставщика " + ПартияПост);
//			Возврат 0;
//		КонецЕсли;
//		
//		Если ОсталосьСписать > тбПартии.ОстатокТовара Тогда
//			Сообщить("Для товара " + Товар + " по партии поставщика остаток = " + тбПартии.ОстатокТовара + ". Не хватает " 
//			+ (ОсталосьСписать - тбПартии.ОстатокТовара));
//			Возврат 0;
//		КонецЕсли;
//		
//		//Регистр.ПартииПоставщика.Поставщик = тбПартии.Поставщик;
//		//Регистр.ПартииПоставщика.ПрихДокумент = тбпартии.ПрихДокумент;
//		//Регистр.ПартииПоставщика.ПривязыватьСтроку(НомерСтроки);
//		//Регистр.ПартииПоставщика.Товар = Товар;
//		//Регистр.ПартииПоставщика.ПартияПост = ПартияПост;	
//		//Регистр.ПартииПоставщика.ОстатокТовара = ОсталосьСписать;
//		//Регистр.ПартииПоставщика.ДвижениеРасходВыполнить();
//		
//		глПровестиПартиюПост(Контекст, 0,0,Товар,ПартияПост,Контрагент,тбПартии.Поставщик, тбпартии.ПрихДокумент, ОсталосьСписать);
//	КонецЦикла;	
//	
//	Возврат 1;			
//КонецФункции
// -------- заменено на:
Функция ДвиженияПартииПоставщика() 
	//спОтбор = СоздатьОбъект("СписокЗначений");
	//тбПартииПост = 0;
	//ВремРег = СоздатьОбъект("Регистры");
	//глРассчитатьОстаткиПартийПост(Контекст, ВремРег, спОтбор); 
	//глСформироватьТаблицуПартийПоставщика(Контекст, ВремРег,0,спОтбор,тбПартииПост);
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ПартияПост.Выбран() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ОсталосьСписать =  Количество * Коэффициент;
		//проверяем на списание с партии у которой наименьший подходящий остаток
		//*ralex, 19-06-21 00:25
		//тбПартии.ВыбратьСтроки();
		//Пока тбПартии.ПолучитьСтроку() = 1 Цикл
		//	Если тбПартии.Товар <> Товар Тогда
		//		Продолжить;
		//	КонецЕсли;
		//	Если тбПартии.ОстатокТовара < ОсталосьСписать Тогда
		//		Продолжить;
		//	КонецЕсли;
		//	Если тбПартии.ПартияПост = ПартияПост Тогда
		//		Прервать;
		//	Иначе
		//		Сообщить("ВНИМАНИЕ! Для товара в строке " + НомерСтроки + " " + Товар +" имеется партия с меньшим количеством на остатке.","!!!" );
		//		Прервать;
		//	КонецЕсли;
		//КонецЦикла;
		// -------- заменено на:
		минПартия = 0; минКво = ОсталосьСписать;
		тбПартииПост.ВыбратьСтроки();
		Пока тбПартииПост.ПолучитьСтроку() = 1 Цикл
			Если тбПартииПост.Товар <> Товар Тогда
				Продолжить;
			КонецЕсли;
			Если тбПартииПост.ОстатокТовара < ОсталосьСписать Тогда
				Продолжить;
			КонецЕсли;
			Если тбПартииПост.ОстатокТовара >= ОсталосьСписать Тогда
				Если минКво > тбПартииПост.ОстатокТовара Тогда
					минКво = тбПартииПост.ОстатокТовара;
					минПартия = тбПартииПост.ПартияПост;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если (минПартия <> ПартияПост) и (минПартия <> 0) Тогда
			Сообщить("ВНИМАНИЕ! Для товара в строке " + НомерСтроки + " " + Товар +" имеется партия с меньшим количеством на остатке " + минПартия,"!!!" );
		КонецЕсли;
		//*/------------------------
		
		тбПартииПост.ВыбратьСтроки();
		Пока тбПартииПост.ПолучитьСтроку() = 1 Цикл
			Если тбПартииПост.ПартияПост <> ПартияПост Тогда
				Продолжить;
			КонецЕсли;
			Списать = Мин(ОсталосьСписать,тбПартииПост.ОстатокТовара);
			ОсталосьСписать = ОсталосьСписать - Списать;
			глПровестиПартиюПост(Контекст, 0,0,Товар,ПартияПост,Контрагент,тбПартииПост.Поставщик, тбПартииПост.ПрихДокумент, Списать,,Склад);
			Если ОсталосьСписать = 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ОсталосьСписать <> 0 Тогда
			Сообщить("Для товара " + Товар + " по партии поставщика остаток = " + тбПартииПост.ОстатокТовара + ". Не хватает " 
			+ ОсталосьСписать);
			Если НазваниеНабораПрав() <> "Администратор" Тогда
				Возврат 0;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	
	Возврат 1;			
КонецФункции
//*/------------------------

//======================================================================
Процедура ДвиженияБонусы()
	СписываемыеБонусы = Итог("СписаноБонусов");
	Если СписываемыеБонусы > 0 Тогда
		Регистр.БонусыПокупателей.Контрагент=Контрагент;
		Регистр.БонусыПокупателей.Сумма = СписываемыеБонусы;
		Регистр.БонусыПокупателей.ДвижениеРасходВыполнить();
	КонецЕсли;
КонецПроцедуры // ДвиженияБонусы

//====================================================================== 
//приход услуг при их продаже и взаиморасчеты с поставщиком услуг
Процедура ДвиженияУслугиВзаиморасчеты()
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если (Товар.ВидТовара <> Перечисление.ВидыТоваров.Услуга) Тогда
			Продолжить;
		КонецЕсли;
		Если ПустоеЗначение(Товар.Поставщик) = 1 Тогда
			Продолжить;
		КонецЕсли;
		Поставщик = Товар.Поставщик;
		
		Если (ВидОперации = 1) Тогда
			ЗнакОплаты = -1; 
			ФлагВозврата = 1;
			КодОперации = СторноПокупкаУслуги;
		КонецЕсли;
		Если ВидОперации <> 1 Тогда
			ЗнакОплаты = +1; 
			ФлагВозврата = 0;
			КодОперации = ПродажаУслуги;                        
		КонецЕсли;
				
		ЦенаУслуги = 0; ВалютаУслуги = 0;
		глПолучитьЦенуТовара(Константа.Закупочная,Товар,Единица,ДатаДок,ЦенаУслуги,ВалютаУслуги);
		СуммаПриходСНДС = глПересчет(ЦенаУслуги,ВалютаУслуги,ДатаДок,Поставщик.ВалютаВзаиморасчетов,ДатаДок) * Количество;
		СуммаПриходУслугиБезНДС = СуммаПриходСНДС*100/(100+глПроцентНДС(Товар.СтавкаНДС.Получить(ДатаДок)));
		НДСПриходУслуги = СуммаПриходСНДС - СуммаПриходУслугиБезНДС;
		
		тбСуммыПогашения = СоздатьОбъект("ТаблицаЗначений");
		тбСуммыПогашения.НоваяКолонка("Товар");
		тбСуммыПогашения.НоваяКолонка("СуммаСНДС","Число",19,5);
		тбСуммыПогашения.НоваяКолонка("СтавкаНДС");
		тбСуммыПогашения.НоваяКолонка("СтавкаВознаграждения","Число",8,5);

		тбСуммыПогашения.НоваяСтрока();
		тбСуммыПогашения.Товар = Товар;
		тбСуммыПогашения.СуммаСНДС = СуммаПриходСНДС;
		тбСуммыПогашения.СтавкаНДС = Товар.СтавкаНДС.Получить(ДатаДок);
		
		ФлагОтгрузки = 1;	
		спДоговора = глПолучитьСписокКредДоговоров(Товар.Поставщик);
		
		ВремРег = СоздатьОбъект("Регистры");	
		глРассчитатьИтогиВзаиморасчетов(Контекст,ВремРег,спФирмы,?(ВидТорговли = Перечисление.ВидыТорговли.Бартер,-ЗнакОплаты,ЗнакОплаты), Товар.Поставщик, спДоговора);
				
		Для Инд=1 по спФирмы.РазмерСписка() Цикл
			текФирма = спФирмы.ПолучитьЗначение(Инд);
			//тбСуммыПогашения = глПолучитьСуммыДляПогашения(Контекст, текФирма);		
			тбДолги = глПолучитьИтогиВзаиморасчетов(Контекст,ВремРег, текФирма,?(ВидТорговли = Перечисление.ВидыТорговли.Бартер,-ЗнакОплаты,ЗнакОплаты),Товар.Поставщик, спДоговора);
			глПровестиПоВзаиморасчетам(Контекст,  ФлагОтгрузки, ЗнакОплаты, ФлагВозврата, текФирма, тбДолги, тбСуммыПогашения, Поставщик, спДоговора, ВидТорговли, ТекущийДокумент());
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры // ДвиженияУслугиПриход

//======================================================================
//*ralex, 19-03-21 20:26
//Процедура УстановитьФлНетАнкеты()
//	Если (флАнкета = 1) или (КатегорияЦен <> Константа.РозничнаяКатегорияЦен) Тогда
//		флНетАнкеты = 0;
//	ИначеЕсли Итог("СуммаСкидки") <> 0 Тогда
//		флНетАнкеты = 1;
//	КонецЕсли;
//	
//	ВыбратьСтроки();
//	Пока ПолучитьСтроку() = 1 Цикл
//		Если (Товар.АкцияПоставщика.Получить(ДатаДок) = 1) 
//		или (Товар.Распродажа.Получить(ДатаДок) = 1) 
//		или (Товар.ФиксЦена.Получить(ДатаДок) = 1) Тогда
//			флНетАнкеты = 0;
//			Прервать;
//		КонецЕсли;
//	КонецЦикла;
//КонецПроцедуры // УстановитьФлНетАнкеты
// -------- заменено на:
Процедура УстановитьФлНетАнкеты()
	Если КатегорияЦен <> Константа.РозничнаяКатегорияЦен Тогда
		флНетАнкеты = 0;
		Возврат;
	Иначе
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если (Товар.АкцияПоставщика.Получить(ДатаДок) = 1) 
			или (Товар.Распродажа.Получить(ДатаДок) = 1) 
			или (Товар.ФиксЦена.Получить(ДатаДок) = 1) Тогда
				флНетАнкеты = 0;
				Возврат;
			КонецЕсли;
		КонецЦикла;

		Если Итог("СуммаСкидки") <> 0 Тогда
			спрКонтрПрава = СоздатьОбъект("КонтрагентыПрава");
			Если спрКонтрПрава.ПроверитьРазрешениеГруппыСМС(Контрагент) <> 0 Тогда
				Если (флАнкета = 1) или (подтвержденСМС = 1) Тогда
					флНетАнкеты = 2;
					//Если подтвержденСМС = 1 Тогда
					//	Если Найти(КомментарийАдм,"подтверждение смс") = 0 Тогда
					//		КомментарийАдм = СокрЛП(КомментарийАдм) + " # подтверждение смс. тел.: " + ?(ПустаяСтрока(Контрагент.Телефон1) = 0,Контрагент.Телефон1,Контрагент.Телефон2);
					//	КонецЕсли;
					//КонецЕсли;
				Иначе
					флНетАнкеты = 1;
				КонецЕсли;
				//*/------------------------
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // УстановитьФлНетАнкеты
//*/------------------------

//-------------------------------------
Процедура ОбработкаПроведения(ЧастичноПровести = 0)
	ЭтоГрупповаяОбработка = Макс(ГрупповаяОбработка(),глГрупповоеПроведение);
	ШтрКод = СформироватьШтрихКодДокумента(Контекст,ТекущийДокумент());
	Если ДатаДок>РабочаяДата() Тогда
		глНеПроводить(Контекст,"Нельзя проводить документ будущей датой!");
		Возврат;
	КонецЕсли;

	Если этоГрупповаяОбработка = 0 Тогда
		спрКонтрПрава = СоздатьОбъект("КонтрагентыПрава");
		Если спрКонтрПрава.ПроверитьНаличиеПодтвержденияСМС(контекст) = 0 Тогда
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;

		Если НЕ((НазваниеНабораПрав() = "Администратор") или (НазваниеНабораПрав() ="КладовщикШК") или (НазваниеНабораПрав() ="Менеджер"))Тогда
			Если ДатаДок <> ТекущаяДата() Тогда
				глНеПроводить(Контекст,"Нельзя проводить документ датой отличной от текущей!");
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если глПроверкаДублейСтрок(Контекст,"ПоЕдинице")=1 Тогда
		глНеПроводить(Контекст,"В документе строки с одинаковым товаром.");
		Возврат;
	КонецЕсли;
	
	Если ПроверкаШапки() = 0 Тогда
		глНеПроводить(Контекст); 
		Возврат;
	КонецЕсли;                      
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ПроверкаСтроки() = 0 Тогда
			глНеПроводить(Контекст); 
			Возврат;
		КонецЕсли;
	КонецЦикла;		                                 
	
	спФирмы = глПолучитьФирмы(Контекст);
	Если спФирмы.РазмерСписка()>0 Тогда
		
		рез = ДвиженияОстатки();
		Если рез = 0 Тогда  
			счПроведений = 1;
			НеПроводитьДокумент();
			Возврат;
		КонецЕсли;
		
		Если ЧастичноПровести = 1 Тогда
			Если РежимПроведения<>1 Тогда
				РежимПроведения=1;
			КонецЕсли;
			Возврат;
		КонецЕсли;
		
		ДвиженияПартии();
		
		Если ДвиженияПартииПоставщика() = 0 Тогда
			НеПроводитьДокумент();
			Возврат;
		КонецЕсли;
		
		рез = ДвиженияВзаиморасчеты();
		Если рез = 0 Тогда  
			счПроведений = 1;
			НеПроводитьДокумент();
			Возврат;
		КонецЕсли;
		
		ДвиженияРезерв();
		ДвиженияДеньги();
		ДвиженияРекламации();
		Если ТипУчета <> Фин Тогда
			ДвиженияБонусы();
		КонецЕсли;
		
		ДвиженияУслугиВзаиморасчеты();
	КонецЕсли;

	Если ТипУчета <> Фин Тогда
		глДвиженияПланыПродажМенеджераИВыполнение(Контекст,0);
		БонусыЗП.ДвиженияБонусыСотрудника(Контекст,1);
	КонецЕсли;

	УстановитьФлНетАнкеты();
	РежимПроведения=0;
	ФабрикаСобытий.Событие_списаниеПоРегРекламация(спсРекламация);
	
	текОтгружен = дополненияТорговля.ПолучитьСостояниеДокумента(Контекст,"отгружен");
	Если (текОтгружен = 0) и (КоличествоСтрок() <> 0) и (ВидОперации <> 1) Тогда
		СкладНеОтгрузки = Склад;
	КонецЕсли;

	гл_КтоКогдаПровел(Контекст,ЭтоГрупповаяОбработка); //+ralex, 08-11-23 20:41
КонецПроцедуры

//------------------------
Процедура ОбработкаУдаленияПроведения()	 
	Если (названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер")  ИЛИ (названиенабораправ()="МенеджерТоварищ")Тогда
		статусвозврата(0);
	КонецЕсли;	
	РежимПроведения=0;
	//+ralex, 10-07-22 16:58
	СкладНеОтгрузки = 0;
	//+/------------------------
КонецПроцедуры


ПУСТАЯФИРМА = ПолучитьПустоеЗначение("Справочник.Фирмы");
дополненияТорговля = СоздатьОбъект("дополненияТорговля");	



