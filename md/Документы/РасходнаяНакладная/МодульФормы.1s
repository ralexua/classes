// ===============================
// Описание переменных 
Перем СписокДействий,новый;
Перем СтарыйКонтрагент;                         
Перем СтараяДата,выбЗначение;
Перем ФлагБыстраяПродажа;
Перем НачальнаяДатаДокумента;
Перем ОстаткиТоваров, РезервыТоваров, ОбщРег;
Перем стНеликвид,стСорт;
Перем АвторКратко;
Перем спрКонтрПрава;
Перем спсМХ;
Перем стТовар;  
Перем стСклад;
Перем ЗаказДвери;
Перем кодСмс; //код проверки клиента из смс
Перем стСумма,дополненияТорговля;
Перем разрешеныСкидки;
Перем тзТЧ; //для контроля изм партии поставщика пользователем
Перем этоКладовщикШК;
перем расшФормы,расшФормыПослеСкана;
Перем докДоставка,ИтВес,печКвоМ2,ДатаОплатыКалендарная;
Перем ДокРекламация;
//Перем тхтРаспечатан,текРаспечатан, //-ralex, 06-08-22 15:28
Перем естьВрезка;
перем спсАтрибутов;
перем текФрейм;
перем ПравоПользователяПричинаВозврата;
Перем тОтпустил;
Перем тхтСкидка;
Перем qrCodeИнструкция,стрТелефоны;
Перем спсПринтеровЧеков;
//Перем выбШК Экспорт;

Функция ОстаткиСтрокой(ОстаткиТоваров,текТовар,текЕд,ЕдИзмМесто,ЕдИзмШтука,текСкладскоеМесто) Далее
Процедура ИзмКонтрагент(флПодтвержден = 0,измКатегорияЦен = 0) Далее
Функция УстДоступность() Далее
Функция НайтиЗаказДвери() Далее
Процедура Печать(БыстраяПечать=0,чтоПечатать="") Далее
Функция ОстатокТовара(ОстаткиТоваров,текСклад,текТовар,текЕд) Далее
Процедура РаспечататьТаблицу(Таб,БыстраяПечать = 0,чтоПечатать,текРаспечатан,флВыбораПринтера = 0,тхтОкнаВыбораПринтера = "") Далее
Процедура ПриОткрытии() Далее
// ======================================

////возвращает цену товара в деньгах без НДС   //перенес в глобальный модуль //
//Процедура ПолучитьЦенуТовараДляПечати(ТМЦ,Цена_СНДС,Цена_БНДС)
//	ЕстьСкидка = 0;
//	Скидка = СоздатьОбъект("Справочник.Скидка");
//	Скидка.ИспользоватьВладельца(Контрагент);
//	Если Скидка.ВыбратьЭлементы() <>0 Тогда
//		Пока Скидка.ПолучитьЭлемент() =1 цикл
//			Если скидка.ТМЦ.Этогруппа() = 1 Тогда    
//				Если ТМЦ.принадлежитгруппе(скидка.ТМЦ)=1 Тогда
//					ЕстьСкидка = 1;
//					прервать;
//				КонецЕсли;
//			ИначеЕсли скидка.ТМЦ= Товар Тогда
//				ЕстьСкидка = 1;
//				прервать;
//			КонецЕсли;    	
//		КонецЦикла;	                        
//	КонецЕсли;
//	Если ЕстьСкидка = 0 Тогда //просто возвращаем цены из строки документа
//		Цена_СНДС = ЦенаСНДС;
//		Цена_БНДС = ЦенаБезНДС;
//		Возврат;
//	КонецЕсли;
//	
//	//если на этот товар есть спец цена то вернем цену из справочника
//	
//	Если ПустоеЗначение(ТМЦ) = 1 Тогда
//		Возврат;
//	КонецЕсли;
//	
//	Если ПустоеЗначение(КатегорияЦен) = 1 Тогда
//		// нет категории, нет и цены
//		Возврат;
//	КонецЕсли;
//	
//	// вычисляем цену
//	ЦенаТовара = глВернутьЦену(Товар, КатегорияЦен);
//	Если ПустоеЗначение(ЦенаТовара) = 1 Тогда
//		// для товара в категории цены нет
//		Возврат;
//	КонецЕсли;
//	
//	ВалДок = Валюта;
//	КурсВ = Курс;
//	КурсИЗ = Дата_курса;
//	
//	// получим параметры цены
//	ЦенаТовара.ИспользоватьДату(ДатаДок);
//	ЦенаЦены = ЦенаТовара.Цена;
//	ВалютаЦены = ЦенаТовара.Валюта;
//	ЕдЦены = ЦенаТовара.Единица;
//	
//	Попытка		
//		ЦенаЦены = ЦенаЦены * Коэффициент / ЕдЦены.Коэффициент;
//	Исключение       
//		// если на дату документа у единицы еще не было коэффициента
//		ЦенаЦены = 0;
//		глТрассировка(Шаблон("У единицы [ЕдЦены] на дату [Конт.ДатаДок] не установлен коэффициент."),1);
//	КонецПопытки;
//	    
//	ЦенаЦены = глПересчет(ЦенаЦены,ВалютаЦены,КурсИЗ,ВалДок,КурсВ);
//	
//	Если ВалДок = Гривня Тогда
//		Цена_СНДС = Окр(ЦенаЦены,Константа.КоэффОкрГрнЦены,1);
//	КонецЕсли;
//	ПроцНДС = глПроцентНДС(Товар.СтавкаНДС.Получить(ДатаДок));
//	Цена_БНДС = ЦенаЦены*100/(100+ПроцНДС);
//КонецПроцедуры

//Для отладки
Процедура ГенерироватьСобытие(выбШК = "")
	Сообщить("штрихкод документа = " + ШтрКод);
	
	Если выбШК = "" Тогда
		выбШК = глВосстановитьЗначение("последнийШК","выбШК",0);
		Если выбШК = 0 Тогда
			выбШК = ШтрКод;
		КонецЕсли;
		ВвестиСтроку(выбШК,"введите штрихкод",13);
	КонецЕсли;
	
	Источник = "";
	РаботаСоСканеромШтрихКода = 2;
	Сервис.ВнешнееСобытие(Источник,"BarCodeValue",выбШК);
	глСохранитьЗначение("последнийШК","выбШК",выбШК);
КонецПроцедуры // ГенерироватьСобытие

//======================================================================
Процедура ПолучитьДанныеСоСканераШК()
	парам = "";
	Если ВвестиСтроку(парам,"Введите штрихкод",13,0,20) <> 1 Тогда
		Возврат;
	КонецЕсли;
	Источник = "";
	РаботаСоСканеромШтрихКода = 2;
	Сервис.ВнешнееСобытие(Источник,"BarCodeValue",парам);
КонецПроцедуры // ПолучитьДанныеСоСканераШК()

//======================================================================
Процедура ПередатьДокументНаОтправку()
	ОтправленоНаЕмаил = "";
	_email = СоздатьОбъект("_email");
	Расш = _email.создатьСписокПараметров(Контекст,Контрагент.АдресПолучателя,1,"pdf");
	ТаблДок = текФрейм.ПанельИнструментов.Документ;
	_email.ОтправкаПисьма(Расш,ТаблДок);
	Если ПустаяСтрока(ОтправленоНаЕмаил) = 0 Тогда
		//готовим запись в спр. состояний документа
		спсДанные = дополненияТорговля.ПодготовитьДанныеОбОтправкеЕмаил(ОтправленоНаЕмаил,глПользователь);
		дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"инфоОбОтправкеЕмаил",спсДанные);
		флОтправлен = 1;
		ЗаписьЖурналаРегистрации("Письмо отправлено: " + ОтправленоНаЕмаил ,,,,4);
	Иначе
		Сообщить("Письмо не отправлено.");
		ЗаписьЖурналаРегистрации("Письмо не отправлено." ,,,,4);
	КонецЕсли;
КонецПроцедуры // ПередатьДокументНаОтправку

//======================================================================
Процедура ПередатьДокументНаОтправку_Телеграм()
	ТаблДок = текФрейм.ПанельИнструментов.Документ;
	спсПарам = СоздатьОбъект("СписокЗначений");
	спсПарам.ДобавитьЗначение("документ","видИсточника");
	спсПарам.ДобавитьЗначение("pdf","форматФайла");
	спсПарам.ДобавитьЗначение(ТаблДок,"исхТаблица");
	спсПарам.ДобавитьЗначение(глВернутьКонтекст(Контекст),"контекст");
	спсПарам.ДобавитьЗначение(СокрЛП(глПользователь.Сотрудник.id_telegram),"id");
	телеграм = СоздатьОбъект("telegramApi");
	
	телеграм.ОтправитьДокументВБот(спсПарам);
КонецПроцедуры // ПередатьДокументНаОтправку

//----работа  с фреймом -------

//======================================================================
//Процедура ОбработкаЯчейкиТаблицы (Значение, ФлагСтандОбр, Таблица, Адрес)
//	Сообщить ("ОбработкаЯчейкиТаблицы: Значение = " + Значение);
//КонецПроцедуры

//Процедура ПриВыбореЯчейки(Документ, НомерСтроки, номерКолонки)
//	Если НазваниеНабораПрав() <> "Администратор" Тогда
//		Возврат;
//	КонецЕсли;
//	//Сообщить("Выбрана ячейка " + номерСтроки + ":" + НомерКолонки);
//	Обл = Документ.область(НомерСтроки,номерКолонки);
//	//Сообщить(обл.цветФона);
//	Если Обл.ЦветФона <> ЦветВыкл Тогда
//		Обл.цветФона = ЦветВыкл;
//	Иначе
//		Обл.ЦветФона = ЦветВкл;
//	КонецЕсли;
//	текФрейм.обновить();
//КонецПроцедуры

Процедура ЗакрытьФрейм ()
	Если ТипЗначенияСтр (текФрейм) <> "ТабличныйДокумент.Фрейм" Тогда
		//Сообщить ("Фрейм не был открыт");
		Возврат;
	КонецЕсли;
	текФрейм.Закрыть ();
КонецПроцедуры

//======================================================================
Функция СоздатьМеню()
	меню = СоздатьОбъект("Йоксель.Меню");
	меню.Добавить("емаил","емаил","емаил1");
	меню.Добавить("telegram","telegram","telegram");
	меню.Добавить("контрагент","выбрать клиента","контрагент1");
	Возврат меню;
КонецФункции // СоздатьМеню

Процедура ДобавитьКнопку(идКн,заголовокКн,значениеКн,доступностьКн = 1,этоФлажок = 0,ВыбКнопкаЗначениеФлажка = 0,ВыбКнопкаСМеню = 0)
	Если ТипЗначенияСтр (текФрейм) <> "ТабличныйДокумент.Фрейм" Тогда
		Сообщить ("Фрейм не был открыт");
		Возврат;
	КонецЕсли;
	
	Панель = текФрейм.ПанельИнструментов;
	Кнопка = Панель.ДобавитьКнопку (идКн);
	Кнопка.Заголовок = заголовокКн;
	Кнопка.Значение = значениеКн;
	Кнопка.Доступность = доступностьКн;
	Кнопка.ЭтоФлажок = этоФлажок;
	Кнопка.ЗначениеФлажка = ВыбКнопкаЗначениеФлажка; //1/0
	Если ВыбКнопкаСМеню = 1 Тогда
		Кнопка.Меню = СоздатьМеню ();
	Иначе
		Кнопка.Меню = 0;
	КонецЕсли;
КонецПроцедуры

Процедура ПоКомандеПользователя (Документ, Команда, Значение)
	//Сообщить ("Поступила команда: " + Команда + ", Ассоциированное значение: " + Значение);
	//Если Значение = "обновить" Тогда
	//	ЗакрытьФрейм();
	//	ОбработкаЯчейкиТаблицы(Расшифровка, 0, Т);
	//КонецЕсли;
	
	//Если Значение = "сохрИзм" Тогда
	//	СохранитьИзмененияВТоварах();
	//КонецЕсли;
	
	Если Значение = "sendEmail" Тогда
		//спсПарам = СоздатьОбъект("СписокЗначений");
		//спсПарам.Установить("Формат",1); //excel
		//спсПарам.Установить("ИДКонтекста",Метаданные.ПолныйИдентификатор());
		//спсПарам.Установить("Тема",Метаданные.Идентификатор);
		ПередатьДокументНаОтправку();
	ИначеЕсли Значение = "sendtelegram" Тогда
		ПередатьДокументНаОтправку_Телеграм();
		
		//ИначеЕсли Значение = "контрагент1"  Тогда
		//	текКонтрагент = выбКонтрагент;
		//	Если ВвестиЗначение(текКонтрагент,"Справочник.Контрагенты") <> 1 Тогда
		//		Возврат;
		//	КонецЕсли;
		//	Если ПустаяСтрока(текКонтрагент.АдресПолучателя) = 1 Тогда
		//		Предупреждение("У клиента не указан email");
		//		Возврат;
		//	КонецЕсли;
		//	спсПарам = СоздатьОбъект("СписокЗначений");
		//	спсПарам.Установить("Формат",1); //excel
		//	спсПарам.Установить("ИДКонтекста","Отчет.РабочийПрайс");
		//	спсПарам.Установить("Тема","Прайс");
		//	спсПарам.установить("емаил",СокрЛП(текКонтрагент.АдресПолучателя));
		//	ОтправитьЕмаил(спсПарам);
	КонецЕсли;
	//Если Значение = "счРасш" Тогда
	//	ТаблДок = текФрейм.ПанельИнструментов.Документ;
	//	Обл = ТаблДок.область(15,1);
	//	Если Обл.содержитРасшифровку = 1 Тогда
	//		Сообщить(Обл.Расшифровка() + " :: " + Обл.Расшифровка().код);
	//	Иначе
	//		Сообщить(Обл + " не содержит расшифровки");
	//	КонецЕсли;
	//КонецЕсли;
	
КонецПроцедуры

//======================================================================
Процедура ВставитьКолонки(передКолонкой,квоКолонок)
	//ТабЭлемент.Документ.ВставитьКолонки (ВыбКолонка, ВыбКоличествоКолонок);
	//ТабЭлемент.Обновить ();
	текФрейм.ПанельИнструментов.Документ.ВставитьКолонки(передКолонкой,квоКолонок);
КонецПроцедуры // ВставитьКолонки

//======================================================================
Процедура ВызовКонтекстногоМеню()
КонецПроцедуры // гл

Процедура ВывестиВоФрейм(ТаблМХЛ,еМаил = 0)
	ТаблДок = СоздатьОбъект ("ТабличныйДокумент");
	ТаблДок.ЗагрузитьИзТаблицы (ТаблМХЛ);
	
	текФрейм = ТаблДок.Показать ("" + ТекущийДокумент());
	текФрейм.ТолькоПросмотр(1);
	Панель = текФрейм.ПанельИнструментов;
	ЭлемУправления = текФрейм.получитьЭлементУправления(1);
	Панель.ПодписатьсяНаСобытие ("КомандаПользователя", "ПоКомандеПользователя");
	//ЭлемУправления.ПодписатьсяНаСобытие ("ВыборЯчейки", "ПриВыбореЯчейки");
	//ЭлемУправления.ПодписатьсяНаСобытие ("ВызовКонтекстногоМеню", "ВызовКонтекстногоМеню");
	//текФрейм.ФиксироватьСтрокиСверху(фиксСтрок);
	//Панель.ПодписатьсяНаСобытие ("ОбработкаЯчейкиТаблицы", "ОбработкаЯчейкиТаблицы");
	ДобавитьКнопку("email","email","sendEmail",,,,0);
	Если ПустоеЗначение(глПользователь.Сотрудник) = 0 Тогда
		Если ПустаяСтрока(глПользователь.Сотрудник.id_telegram) = 0 Тогда
			ДобавитьКнопку("telegram","telegram","sendtelegram",,,,0);
		КонецЕсли;
	КонецЕсли;	
	
	//ДобавитьКнопку("обновить","Обновить","обновить");
	//Если НазваниеНабораПрав() = "Администратор" Тогда
	//	ДобавитьКнопку("сохрИзм","Записать изм.","сохрИзм");
	//КонецЕсли;
	//ДобавитьКнопку("СчитатьРасшифровку","Расшифровка","счРасш");
	Панель.Видимость = 1;
	Если еМаил = 1 Тогда
		ПередатьДокументНаОтправку();
		ЗакрытьФрейм();
	КонецЕсли;
	//ТаблДок.ВставитьКолонки(ТаблДок.ШиринаТаблицы() + 1, 2);
КонецПроцедуры // ВывестиВоФрейм
//---конец работы с фреймом -------

Функция ПоставитьЗадачуВCRM()
	спсПарам = СоздатьОбъект("Структура");
	спсПарам.Вставить("Заголовок", " " + ТекущийДокумент());
	спсПарам.Вставить("Описание", СокрЛП(ОписаниеЗадачи));
	спсПарам.Вставить("ДатаНачала", ДатаДок);
	спсПарам.Вставить("ДатаКонца", срокИсполненияЗадачи);
	спсПарам.Вставить("users_id", СотрудникЗадачи);
	спсПарам.Вставить("конт", глВернутьКонтекст(Контекст));
	//Если Выбран() = 0 Тогда
	//	Записать();
	//	Если Выбран() = 0 Тогда
	//		Возврат 0;
	//	КонецЕсли;
	//КонецЕсли;
	API_CRM = СоздатьОбъект("API_CRM");
	рез = API_CRM.ПоставитьЗадачу_API(спсПарам);
	Если рез <> 0 Тогда
		id_задачиВ_CRM = СокрЛП(id_задачиВ_CRM) + ?(ПустаяСтрока(id_задачиВ_CRM) = 1,"",",") + рез;
		Записать();
	КонецЕсли;
	Возврат рез;  //если о то задача не поставлена
КонецФункции // ПоставитьЗадачуВCRM()

//======================================================================
Функция ПолучитьДокументДоставка()
	Если Выбран() = 0 Тогда
		Возврат 0;
	КонецЕсли;
	док = СоздатьОбъект("Документ");
	док.ВыбратьПодчиненныеДокументы(ДатаДок,,ТекущийДокумент());
	Пока док.ПолучитьДокумент() = 1 Цикл
		Если (док.Вид() = "Доставка") и (док.ПометкаУдаления() = 0) Тогда
			докДоставка = док.ТекущийДокумент();
			Возврат док.ТекущийДокумент();
		КонецЕсли;
	КонецЦикла;
	Возврат 0;
КонецФункции // ПолучитьДокументДоставка
//======================================================================
Процедура упрКнДоставка()
	докДоставка = ПолучитьДокументДоставка();
	Если докДоставка <> 0 Тогда
		Форма.кнДоставка.Заголовок("" + докДоставка);
	Иначе
		Форма.кнДоставка.Заголовок("Доставка");
	КонецЕсли;
КонецПроцедуры // упрКнДоставка

//======================================================================
//+ralex, 2015-09-15 22:31:42
Процедура ОстаткиПоСкладам()
	спрМХ = СоздатьОбъект("Справочник.МестаХранения");
	спрМХ.ВыбратьЭлементы();
	спсОстатки = СоздатьОбъект("СписокЗначений");
	выбСорт = ?(неликвид = 1,Сорт,КондиционныйТовар);
	
	Пока спрМХ.ПолучитьЭлемент() = 1 Цикл
		Если (спрМХ.ЭтоГруппа() = 1) или (спрМХ.флОстаткиПоФОП = 1) Тогда
			Продолжить;
		КонецЕсли;
		// Вычислим, сколько всего данного товара
		ПолныйОстаток= Регистр.ОстаткиТоваров.СводныйОстаток(?(ТипУчета = Фин,Фирма,глПустаяФирма),Товар,спрМХ.ТекущийЭлемент(),выбСорт,,"ОстатокТовара");
		Если ПолныйОстаток <>  0 Тогда
			Если Коэффициент>0 Тогда
				ПолнОст = ПолныйОстаток/Коэффициент;
			Иначе
				ПолнОст = ПолныйОстаток;
			КонецЕсли;
			спсОстатки.ДобавитьЗначение(спрМХ.ТекущийЭлемент(),"" + спрМХ.ТекущийЭлемент() + " = " + ПолнОст + " ");
		КонецЕсли;
	КонецЦикла;
	
	Резерв= 0;
	// проверяем резерв товара
	Если Константа.РазрешитьПродаватьРезерв=Перечисление.ДаНет.Нет Тогда
		// Вычислим, сколько зарезервировано всего данного товара
		Резерв= Регистр.РезервыТоваров.СводныйОстаток(Товар,,"РезервТовара");
		Если Резерв <> 0 Тогда
			Если Коэффициент>0 Тогда
				Резерв = Резерв/Коэффициент;
			КонецЕсли;
			спсОстатки.ДобавитьЗначение(Резерв," общий резерв товара = " + Резерв + " ");
		КонецЕсли;
	КонецЕсли;
	спсОстатки.ВыбратьЗначение(,,,,1);
КонецПроцедуры // ОстаткиПоСкладам
//+/ralex, 2015-09-15 22:31:42

////======================================================================
//Функция ИнфоПроведение()
//	рез = "1 провел " + СокрЛП(АвторПервоеПроведение) + " " + СокрЛП(ДатаВремяПервоеПроведение) + ?(ПустоеЗначение(АвторПровел) = 1,"","; посл. " +
//	СокрЛП(АвторПровел) + "  " + СокрЛП(ДатаВремяПоследнееПроведение));
//	Возврат рез;
//КонецФункции // ИнфоПроведение

//======================================================================
Функция УстановитьНадписьРаспечатанОтгружен()
	Возврат дополненияТорговля.УстановитьНадписьРаспечатанОтгружен(Контекст);
КонецФункции

//======================================================================
Процедура НоваяДоставка()
	Если ПустоеЗначение(докДоставка) = 1 Тогда
		ОткрытьФорму("Документ.Доставка",,ТекущийДокумент());
	Иначе
		ОткрытьФорму(докДоставка);
	КонецЕсли;
КонецПроцедуры // НоваяДоставка

//======================================================================
//открываем спр "Контрагенты с отбором по списку найденых контрагентов с указанным номером
Процедура ПоискПоТелефону()
	перем стр;
	Если ВвестиСтроку(стр,"введите номер телефона или его часть",18,) = 0 Тогда
		Возврат;
	КонецЕсли;
	допТорг = СоздатьОбъект("дополненияТорговля");
	тз = допТорг.НайтиКонтрагентаПоНомеруТелефона(стр);
	Если тз = 0 Тогда
		Предупреждение("Контрагент с номером " + сокрЛП(стр) + " не найден.");
		Возврат;
	КонецЕсли;
	спс = СоздатьОбъект("СписокЗначений");
	тз.выгрузить(спс,,,"Контрагент");
	ОткрытьПодбор("Справочник.Контрагенты","ДляВыбора",спс,0);
КонецПроцедуры // ПоискПоТелефону

//======================================================================
Процедура измСуммаБезНДС()
	ЦенаСоСкидкой = СуммаСНДС / Количество;
	СуммаСНДС = ЦенаСоСкидкой * Количество;
	Скидка = СуммаБезСкидки - СуммаСНДС;
	СуммаБезНДС = СуммаСНДС;
КонецПроцедуры // измСуммаСНДС

//======================================================================
Функция получитьРазрешениеНаСкидки()	
	Если спрКонтрПрава.ПроверитьНеобходимостьПодтвержденияСмс(Контекст,,0) = 0 Тогда
		разрешеныСкидки = 1; //для контрагента не требуется подтверждение СМС
	КонецЕсли;
	Возврат ?(разрешеныСкидки = 1,1,подтвержденСМС);
КонецФункции //получитьРазрешениеНаСкидки()

//======================================================================
Функция показатьПодтвержденСМС()
	Если подтвержденСМС = 1 Тогда
		Возврат "клиент подтвержден через SMS";
	КонецЕсли;
	Возврат "";
КонецФункции // показатьПодтвержденСМС

//======================================================================
Функция получитьСписокПартийПоставщика(выбТовар,возврТЗ = 0)
	тбПартии = 0;
	//+ralex, 25-04-23 11:38
	Если дополненияТорговля.ПолучитьПараметрГруппыСправочника(выбТовар,"разрешеныПартииПост") = 0 Тогда
		Если возврТЗ = 1 Тогда
			тбПартии = СоздатьОбъект("ТаблицаЗначений");
			Возврат тбПартии;
		Иначе
			спсПартии = СоздатьОбъект("СписокЗначений");
			Возврат спсПартии;
		КонецЕсли;
	КонецЕсли;
	//+/------------------------
	Если Выбран() = 0 Тогда //новый документ		
		//т.к. тут проблемы с ТА то считать будем на момент последнего документа в базе
		врДок = СоздатьОбъект("Документ");
		врДок.ОбратныйПорядок(1);
		врДок.ВыбратьДокументы();
		Пока врДок.ПолучитьДокумент() = 1 Цикл
			Если врДок.Проведен() = 0 Тогда
				Продолжить;
			КонецЕсли;
			выбДата = врДок.ДатаДок;
			Прервать;
		КонецЦикла;
		
		Запрос = СоздатьОбъект("Запрос");
		ТекстЗапроса = 
		"//{{ЗАПРОС(Сформировать)
		|Период с выбДата по выбДата;
		|Товар = Регистр.ПартииПоставщика.Товар;
		|ПартияПост = Регистр.ПартииПоставщика.ПартияПост;
		|ДатаПартии = Регистр.ПартииПоставщика.ПартияПост.датаПартии;
		|Склад = Регистр.ПартииПоставщика.Склад;
		|ОстТов = Регистр.ПартииПоставщика.ОстатокТовара;
		|Функция остатокТовара = КонОст(ОстТов);
		|Группировка Товар без групп;
		|Группировка ПартияПост;
		|Условие(Товар = ВыбТовар);
		|"//}}ЗАПРОС
		;
		
		спсСкладов = гл_ПолучитьСписокСкладов();
		ТекстЗапроса = ТекстЗапроса + "Условие(Склад в спсСкладов);"; 
		// Если ошибка в запросе, то выход из процедуры
		Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
			Возврат 0;
		КонецЕсли;
		тбПартии = СоздатьОбъект("ТаблицаЗначений");
		Запрос.Выгрузить(тбПартии,1,0);
		//*/------------------------
		
		Если дополненияТорговля.ПолучитьПараметрГруппыСправочника(выбТовар,"флЭтоГруппаДвери") = 0 Тогда
			тбПартии.Сортировать("остатокТовара");
		Иначе
			тбПартии.Сортировать("ДатаПартии");
		КонецЕсли;
		
		Если возврТЗ = 1 Тогда
			Возврат тбПартии;
		КонецЕсли;
		
		ЕдИзм = выбТовар.БазоваяЕдиница;
		
		спсПартии = СоздатьОбъект("СписокЗначений");
		//тзТч = СоздатьОбъект("ТаблицаЗначений");
		//ВыгрузитьТабличнуюЧасть(тзТч);
		
		тбПартии.ВыбратьСтроки();
		Пока тбПартии.ПолучитьСтроку() = 1 Цикл
			ост = тбПартии.ОстатокТовара;
			тхтПартияОст = "" + тбПартии.ПартияПост + " = "+ ост + " " + ЕдИзм;
			спсПартии.ДобавитьЗначение(тбПартии.ПартияПост,тхтПартияОст);
		КонецЦикла;
	Иначе
		ВремРег = СоздатьОбъект("Регистры");
		Отбор = СоздатьОбъект("СписокЗначений");
		Отбор.ДобавитьЗначение(выбТовар,"Товар");
		Отбор.ДобавитьЗначение(Склад,"Склад");
		глРассчитатьОстаткиПартийПост(Контекст, ВремРег, Отбор);
		глСформироватьТаблицуПартийПоставщика(Контекст, ВремРег,0,0,тбПартии);
		
		тбПартии.Сортировать("остатокТовара");
		
		Если возврТЗ = 1 Тогда
			Возврат тбПартии;
		КонецЕсли;
		
		ЕдИзм = выбТовар.БазоваяЕдиница;
		
		спсПартии = СоздатьОбъект("СписокЗначений");
		//тзТч = СоздатьОбъект("ТаблицаЗначений");
		//ВыгрузитьТабличнуюЧасть(тзТч);
		
		тбПартии.ВыбратьСтроки();
		Пока тбПартии.ПолучитьСтроку() = 1 Цикл
			ост = тбПартии.ОстатокТовара;
			тхтПартияОст = "" + тбПартии.ПартияПост + " = "+ ост + " " + ЕдИзм;
			спсПартии.ДобавитьЗначение(тбПартии.ПартияПост,тхтПартияОст);
		КонецЦикла;
		
	КонецЕсли;
	Возврат спсПартии;
КонецФункции // получитьСписокПартийПоставщика

//======================================================================
Функция ПолучитьПартиюПостПоКоличеству(выбТовар,кво,коэф, ОстатокПартии = 0)
	тзПартийПост = получитьСписокПартийПоставщика(выбТовар,1);
	Если тзПартийПост.КоличествоСтрок() <> 0 Тогда
		ищемКво = кво * коэф;
		тзПартийПост.ВыбратьСтроки();
		Пока тзПартийПост.ПолучитьСтроку() = 1 Цикл
			Если тзПартийПост.ОстатокТовара >= ищемКво Тогда
				Возврат тзПартийПост.ПартияПост;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	//Предупреждение("Не найдена партия поставщика для товара " + Товар.Код + " " + Товар + " с необходимым количеством.");
	Возврат 0;
КонецФункции // ПолучитьПартиюПостПоКоличеству

//======================================================================
Функция ПолучитьСкладскоеМестоПоКоличеству(выбТовар,кво)
	выбМесто = ""; тзМест = 0;
	Сорт= сорт_ПолучитьСорт(Контекст); //+ralex, 09-06-23 11:50
	
	спсМест = дополненияТорговля.получитьСписокСкладскихМест(Товар,Склад,Единица,Сорт,,тзМест);
	тзМест.ВыбратьСтроки();
	Пока тзМест.ПолучитьСтроку() = 1 Цикл
		Если (тзМест.ОстатокТовара >= кво) и (ПустоеЗначение(тзМест.Место) = 0) Тогда
			Возврат тзМест.Место;
		КонецЕсли;
	КонецЦикла;
	Если спсМест.размерСписка() <> 0 Тогда
		Предупреждение("Выберите складское место.");
	КонецЕсли;
КонецФункции // ПолучитьСкладскоеМестоПоКоличеству

// ===============================
// "служебные" функции и процедуры 
Процедура ЗаполнитьСпсПричиныВозврата()
	спсПричины.УдалитьВсе();
	спсПричины.ДобавитьЗначение("не выбрана","не выбрана");
	спсПричины.ДобавитьЗначение(перечисление.ПричиныВозвратаПокупателем.ошибкаМенеджера,Строка(перечисление.ПричиныВозвратаПокупателем.ошибкаМенеджера));	
КонецПроцедуры

//======================================================================
//+ralex, 02-08-20 11:03
Процедура ПриВыбореПричиныВозврата()
	Если спсПричины.ТекущаяСтрока() <> 0 Тогда
		Причина = спсПричины.ПолучитьЗначение(спсПричины.ТекущаяСтрока(),);
	КонецЕсли;
	Если ТипЗначенияСтр(Причина) <> "Строка" Тогда
		ПричинаВозвратаПок = Причина;
	КонецЕсли;
	
	Если (Причина = Перечисление.ПричиныВозвратаПокупателем.ошибка) или (Причина = Перечисление.ПричиныВозвратаПокупателем.ошибкаМенеджера) Тогда 
		Если квоОшибок = 0 Тогда
			квоОшибок = 1;
		КонецЕсли;
		Форма.КвоОшибок.видимость(1);
		Форма.комментОшибки.Видимость(1);
		Форма.тКомментОшибки.Видимость(1);
	Иначе
		Форма.КвоОшибок.видимость(0);
		Форма.комментОшибки.Видимость(0);
		Форма.тКомментОшибки.Видимость(0);
	КонецЕсли;
КонецПроцедуры // ПриВыбореПричиныВозврата
//+/ralex, 02-08-20 11:03

// ===============================
Функция ЗаголовокФормы() 
	Перем Заголовок, Название;
	
	Если ВидОперации =0  Тогда
		Заголовок = "Расходная накладная ";
		Название ="Накладная №";
	Иначе
		Заголовок = "Расходная накладная  (возврат)";
		Название = "Накладная (возврат) №";
	КонецЕсли;
	
	Заголовок = Заголовок + глЗаголовок(Контекст);
	
	Форма.Заголовок(Заголовок);     
	Возврат Название;
КонецФункции //ЗаголовокФормы

// ===============================
Процедура ОбновитьНадписи()
	Форма.ТекстВалюты.Заголовок(глСтрокаВалюты(Контекст));
	Форма.ТекстОснования.Заголовок(СокрП(Основание));
	Форма.ТекстПорядокОплаты.Заголовок(глСтрокаПорядокОплаты(Контекст)); 
КонецПроцедуры

// ===============================
Функция УстДоступностьКнопок()
	//+ralex, 14-08-21 12:11
	Попытка
		текЗакладка = Форма.Закладки.ТекущаяСтрока();
		текЗакладка = Форма.Закладки.ПолучитьЗначение(текЗакладка,);
	Исключение
		текЗакладка = "";
	КонецПопытки;
	//+/------------------------
	
	Если НазваниеНабораПрав() <> "Администратор" Тогда
		дост = 1;
		текРаспечатан = дополненияТорговля.ПолучитьСостояниеДокумента(Контекст,"распечатан"); //+ralex, 19-12-21 23:02
		
		Если Число(текРаспечатан) >= 2 Тогда
			дост = 0;
		КонецЕсли;		
		//*ralex, 12-03-23 22:19
		//Форма.кнПечать.Доступность(мин(проведен(),дост)); //-ralex, 19-12-21 22:50
		// -------- заменено на:
		Форма.кнПечать.Доступность(дост); //-ralex, 19-12-21 22:50
		//*/------------------------
	Иначе
		форма.ЦенаСоСкидкой.Доступность(флОтклКонтрольЦен);
	КонецЕсли;	
	
	Если ВидОперации = 1 Тогда //возврат поставщику
		Форма.тхтВрезка.Видимость(0);
		Форма.кнВрезка.Видимость(0);
		форма.Рекламация.Видимость(1);
	Иначе //продажа                     
		Форма.тхтВрезка.Видимость(1);
		Форма.кнВрезка.Видимость(1);
		форма.Рекламация.Видимость(0);
	КонецЕсли;
	
	Если Форма.ТолькоПросмотр()=1 Тогда
		Если глОтладка=1 Тогда
			Возврат 0;
		КонецЕсли;
		Форма.кнОК.Доступность(?(Проведен() = 1,0,1));
		Если РежимПроведения = 1 Тогда
			Форма.кнПровести.Доступность(0);
		КонецЕсли;
		Форма.кнЧастично.Доступность(0);
		Форма.кнПодбор.Доступность(0);
		//+ralex, 01-02-22 02:11
		Форма.кнВалюта.Доступность(0);
		форма.кнПересчитать.Доступность(0);
		форма.кнОснование.Доступность(0);
		//+/------------------------
	Иначе                      
		Если ФлагБыстраяПродажа = Да Тогда			
			Форма.КнПровести.Видимость(0);
			Форма.КнЧастично.Видимость(0);
			Форма.кнДействия.Видимость(0);
			Форма.кнОК.Видимость(0);
			Форма.КнопкаПоУмолчанию("кнБыстраяПродажа");
		Иначе
			Форма.кнБыстраяПродажа.Видимость(0);
			Форма.КнопкаПоУмолчанию("кнОК");
		КонецЕсли;
		Если ВидОперации = 1 Тогда
			Если НазваниеНабораПрав() = "Администратор" Тогда
				Форма.кнПодбор.Доступность(1);
			Иначе
				Форма.кнПодбор.Доступность(0);
			КонецЕсли;
		Иначе                      
			Форма.кнПодбор.Доступность(1);
		КонецЕсли;
		Форма.КнопкаПоУмолчанию("кнОК");
	КонецЕсли;
	//+ralex.zp@gmail.com, 2015-03-21 00:17:44
	Если Форма.ТолькоПросмотр() = 1 Тогда 
		//-ralex, 12-12-21 14:38 //по задаче от владельца
		//Если Выбран() = 1 Тогда
		//	Форма.кнПечать.Доступность(0);  
		//Иначе
		//	Форма.кнПечать.Доступность(1);  
		//КонецЕсли;
		//-/------------------------
		
		Форма.кнДействия.Доступность(1);
	КонецЕсли;
	//+/ralex.zp@gmail.com, 2015-03-21 00:17:44
	Если НазваниеНабораПрав() = "Администратор" Тогда
		Форма.кнПровести.Видимость(1);
	Иначе
		Форма.кнПровести.Видимость(0);
	КонецЕсли;	
	
	форма.кнСмс.Видимость(1);
	Если разрешеныСкидки = 1 Тогда//+ralex, 27-04-21 23:56
		форма.кнСмс.Видимость(0);
	КонецЕсли;
	
	ЕСЛИ (ИмяПользователя() = "ОЛЕГ") ИЛИ (ИмяПользователя() = "ОЛЬГА")  ИЛИ (ИмяПользователя() = "1САдм") 
	или (НазваниеНабораПрав() = "Менеджер") тогда
		Если текЗакладка <> "Основной" Тогда
			форма.кнПересчитать.Видимость(0);
			форма.кнПересчитать.Доступность(0);
			форма.Пересчитан.Видимость(0);
			форма.Пересчитан.Доступность(0);
		Иначе
			форма.кнПересчитать.Видимость(1 - Форма.ТолькоПросмотр());
			форма.кнПересчитать.Доступность(1 - ВидОперации);
			форма.Пересчитан.Видимость(1 - Форма.ТолькоПросмотр());
			форма.Пересчитан.Доступность(1 - ВидОперации);
		КонецЕсли;
	Иначе
		форма.кнПересчитать.Видимость(0);
		форма.Пересчитан.Видимость(0);
		форма.кнПересчитать.Доступность(0);
		форма.Пересчитан.Доступность(0);
	КонецЕсли;	
	
	//+ralex, 14-08-21 11:52
	Если (текЗакладка = "Склад") или (текЗакладка = "Доверенность") или (текЗакладка = "CRM") Тогда
		форма.тТип.Видимость(0);
		Форма.Тип.видимость(0);
		форма.кнПересчитать.Видимость(0);
		форма.Пересчитан.Видимость(0);
		форма.кнВрезка.Видимость(0);
		форма.кнПровести.Видимость(0);
		форма.кнСмс.Видимость(0);
		Если НазваниеНабораПрав() <> "Администратор" Тогда
			форма.кнГрузчик1.Доступность(0);
			форма.кнГрузчик2.Доступность(0);
			форма.кнГрузчик3.Доступность(0);
			форма.кнГрузчик4.Доступность(0);
			форма.кнГрузчик5.Доступность(0);
		КонецЕсли;
		Если НЕ((НазваниеНабораПрав() = "Администратор") или (НазваниеНабораПрав() = "МенеджерСклад")) Тогда
			Форма.грузчик1.Доступность(0);
			Форма.грузчик2.Доступность(0);
			Форма.грузчик3.Доступность(0);
			Форма.грузчик4.Доступность(0);
			Форма.грузчик5.Доступность(0);
		КонецЕсли;
	КонецЕсли;
	//+/------------------------
	форма.кнДоставка.Доступность(Выбран());
	упрКнДоставка();
	Если НазваниеНабораПрав() <> "Администратор" Тогда
		Если (ПустоеЗначение(Контрагент.Склад) = 0) Тогда
			Склад = Контрагент.Склад;
			Форма.склад.Доступность(0);
		КонецЕсли;
	КонецЕсли;
	
	//+ralex, 19-01-22 17:46
	Попытка
		текЗакладка = форма.Закладки.ПолучитьЗначение(Форма.Закладки.ТекущаяСтрока(),);
	Исключение
		текЗакладка = "Осноывной"; ///при создании нового док-та.
	КонецПопытки;
	
	Если текЗакладка = "Основной" Тогда
		Если Контрагент.Выбран() = 1 Тогда
			рознКлиенты = гл_ПолучитьЗначениеДопКонстанты("грКлРозница");
			естьОткудаПришел = 1;
			Если (ПустоеЗначение(Контрагент.ОткудаПришелКлиент) = 1) и (ПустоеЗначение(откудаКлиент) = 1) Тогда
				естьОткудаПришел = 0;
			КонецЕсли;
			
			Если ПустоеЗначение(рознКлиенты) = 0 Тогда
				флВидимость = 1;
				Если Контрагент.ПринадлежитГруппе(рознКлиенты) <> 1 Тогда
					флВидимость = 0;
				КонецЕсли;
				расшФормы = СоздатьОбъект("РасширениеФормы");
				расшФормы.УстановитьФорму(Форма);
				Для сч=0  По расшФормы.КоличествоАтрибутов() - 1 Цикл
					текАтрибут = расшФормы.ПолучитьАтрибут(сч);
					Если спсАтрибутов.НайтиЗначение(текАтрибут.Заголовок) <> 0 Тогда
						Если (радиоОткудаКлиент <> 6) и (текАтрибут.Заголовок = "прочееОткудаПришел") Тогда
							текАтрибут.видимость = 0;
						Иначе
							текАтрибут.видимость = флВидимость;
							Если (флВидимость = 1) и (естьОткудаПришел = 1) Тогда
								текАтрибут.Доступность = 0;
							ИначеЕсли (флВидимость = 1) и (естьОткудаПришел = 0) Тогда
								текАтрибут.Доступность = 1;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//+/------------------------
	
КонецФункции //УстДоступностьКнопок()

// ===============================
Функция УстДоступность()
	Попытка
		Если (ВидТорговли = Перечисление.ВидыТорговли.Нал) и (Форма.Закладки.ТекущаяСтрока() = 1) Тогда
			ДостКасса = 1;
		Иначе
			ДостКасса = 0;
		КонецЕсли;
	Исключение
		Если (ВидТорговли = Перечисление.ВидыТорговли.Нал)  Тогда
			ДостКасса = 1;
		Иначе
			ДостКасса = 0;
		КонецЕсли;
	КонецПопытки;
	
	//+ralex, 12-06-22 23:34
	Если КатегорияЦен = Константа.крупнооптоваяЦена Тогда
		форма.СуммаСкидкиСамовывоз.Видимость(1);
		форма.флСамовывоз.Видимость(1);
	Иначе
		форма.СуммаСкидкиСамовывоз.Видимость(0);
		форма.флСамовывоз.Видимость(0);
	КонецЕсли;
	//+/------------------------
	
	Форма.Касса.Видимость(ДостКасса);
	Форма.тКассы.Видимость(ДостКасса); 
	Если названиенабораправ()<>"Администратор" Тогда
		текРаспечатан = дополненияТорговля.ПолучитьСостояниеДокумента(Контекст,"распечатан"); //+ralex, 19-12-21 23:02
		Если текРаспечатан <> 0 Тогда
			форма.толькоПросмотр(1);
		КонецЕсли;
		//*/------------------------
		//+ralex, 06-11-23 23:45
		Если (Проведен() = 0) и (Число(дополненияТорговля.ПолучитьСостояниеДокумента(Контекст,"распечатан")) = 0) Тогда
			Форма.спВидТорговли.Доступность(1); 
		Иначе
			Форма.спВидТорговли.Доступность(0); 
		КонецЕсли;
		//+/------------------------
		
		Форма.КомментарийАдм.Видимость(0);
		Форма.тхтКомментарийАдм.Видимость(0);
		Форма.Глубина.Доступность(0);
		Форма.флОтклКонтрольЦен.Видимость(0); //+ralex, 11-03-19 22:24
		форма.СписаноБонусов.Видимость(0); //+ralex, 13-11-19 22:54
		форма.флАнкета.Видимость(0); //+ralex, 13-11-19 22:54
		Форма.спсПричины.Доступность(0);
		форма.квоОшибок.Доступность(0);
		форма.тКомментОшибки.Доступность(0);
		форма.комментОшибки.Доступность(0);
		форма.КвоШК.Доступность(0); //+ralex, 02-02-23 23:27
	Иначе
		Если (ПричинаВозвратаПок <> Перечисление.ПричиныВозвратаПокупателем.ошибкаМенеджера) или (ПричинаВозвратаПок <> Перечисление.ПричиныВозвратаПокупателем.ошибкаМенеджера) Тогда
			форма.квоОшибок.Видимость(0);
			Форма.комментОшибки.Видимость(0);
			Форма.тКомментОшибки.Видимость(0);
		Иначе
			форма.квоОшибок.Видимость(1);
			Форма.комментОшибки.Видимость(1);
			Форма.тКомментОшибки.Видимость(1);
		КонецЕсли;
	КонецЕсли;
	
	Если НазваниеНабораПрав() <> "Администратор" Тогда
		Если КатегорияЦен = Константа.РозничнаяКатегорияЦен Тогда
			Форма.ПрСкидки.Доступность(разрешеныСкидки); //+ralex, 16-05-21 15:31
		Иначе
			Форма.ПрСкидки.Доступность(0); //+ralex, 16-05-21 15:31
		КонецЕсли;
	КонецЕсли;
	
	Форма.спсПричины.Доступность(ПравоПользователяПричинаВозврата);
	Форма.квоОшибок.Доступность(ПравоПользователяПричинаВозврата);
	Форма.комментОшибки.Доступность(ПравоПользователяПричинаВозврата);
	ПриВыбореПричиныВозврата();
	Форма.тПричинаВозврата.Заголовок("ошибка менеджера:");
Конецфункции

// ===============================
Процедура ВыбранВидТорговли()     
	Если ВидТорговли = Перечисление.ВидыТорговли.Бартер тогда
		Если Договор.Выбран() = 1 тогда
			Если Договор.Вид()="Договор" Тогда
				Если Договор.ВидТорговли <> ВидТорговли тогда
					глТрассировка(Шаблон("Вид торговли не сответствует договору - должен быть [Договор.ВидТорговли]!!!"),1);					
					ВидТорговли = Договор.ВидТорговли; 
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;	
	спВидТорговли.ТекущаяСтрока(спВидТорговли.НайтиЗначение(ВидТорговли));
	Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
		Касса = глНайтиКассу(Фирма,Валюта);
	КонецЕсли;                             
КонецПроцедуры

//======================================================================
//+ralex, 17-01-22 00:43
Процедура измРадиоОткудаКлиент()
	//Если радиоОткудаКлиент = 6 Тогда
	//	форма.прочееОткудаПришел.Видимость(Мин(форма.радиоОткудаКлиент.Видимость(),1));
	//Иначе
	//	форма.прочееОткудаПришел.Видимость(0);
	//КонецЕсли;
	//-ralex, 26-07-22 21:58
	//Если (ПустоеЗначение(Контрагент) = 0) и (радиоОткудаКлиент <> 0) Тогда
	//	откудаКлиент = перечисление.ОткудаКлиент.ЗначениеПоНомеру(радиоОткудаКлиент);
	//	спр = СоздатьОбъект("Справочник.Контрагенты");
	//	спр.НайтиЭлемент(Контрагент);
	//	спр.ОткудаПришелКлиент = откудаКлиент;
	//	спр.Записать();
	//КонецЕсли;
	//-/------------------------
КонецПроцедуры // измРадиоОткудаКлиент
//+/------------------------

// ===============================
Процедура ИзмВидТорговли()
	Если (спВидТорговли.ПолучитьЗначение(спВидТорговли.ТекущаяСтрока()) = Перечисление.ВидыТорговли.Бартер) и (ВидОперации = 1) тогда
		глТрассировка("Возврат по бартеру...",1);
	Иначе
		ВидТорговли = спВидТорговли.ПолучитьЗначение(спВидТорговли.ТекущаяСтрока());
	КонецЕсли;	
	ВыбранВидТорговли();
	УстДоступность();
КонецПроцедуры

//======================================================================
Процедура измФлСамовывоз()
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		глВыч_суммы_накл(Контекст,2) 
	КонецЦикла;
КонецПроцедуры // измФлСамовыво

// ===============================
Процедура ЗаполнитьСпВидТорговли()
	
	спВидТорговли.ДобавитьЗначение(Перечисление.ВидыТорговли.Нал,Строка(Перечисление.ВидыТорговли.Нал));
	спВидТорговли.ДобавитьЗначение(Перечисление.ВидыТорговли.терминал,Строка(Перечисление.ВидыТорговли.терминал));
	спВидТорговли.ДобавитьЗначение(Перечисление.ВидыТорговли.безнал,Строка(Перечисление.ВидыТорговли.безнал));
	спВидТорговли.ДобавитьЗначение(Перечисление.ВидыТорговли.Кредит,Строка(Перечисление.ВидыТорговли.Кредит));
	спВидТорговли.ДобавитьЗначение(Перечисление.ВидыТорговли.Предоплата,Строка(Перечисление.ВидыТорговли.Предоплата));
	//спВидТорговли.ДобавитьЗначение(Перечисление.ВидыТорговли.Бартер,Строка(Перечисление.ВидыТорговли.Бартер));
	
КонецПроцедуры

//================================
Процедура УстДоступностьГлубина()
	// нет кредита - нет глубины
	Если ВидОперации = 1 Тогда
		Если Контрагент.ГлубинаКредитаПоставщика.Получить(ДатаДок) = 0 тогда
			Форма.ДатаОплПодпись.Видимость(0);
			Форма.ДатаОпл.Видимость(0);			
			Форма.ГлубинаПодпись.Видимость(0);
			Форма.Глубина.Видимость(0);			
		Иначе	
			Форма.ДатаОплПодпись.Видимость(1);
			Форма.ДатаОпл.Видимость(1);			
			Форма.ГлубинаПодпись.Видимость(1);
			Форма.Глубина.Видимость(1);			
		КонецЕсли;	
	Иначе                        
		Если Контрагент.Глубина.Получить(ДатаДок) = 0 тогда    
			Форма.ДатаОплПодпись.Видимость(0);
			Форма.ДатаОпл.Видимость(0);			
			Форма.ГлубинаПодпись.Видимость(0);
			Форма.Глубина.Видимость(0);			
		Иначе
			Форма.ДатаОплПодпись.Видимость(1);
			Форма.ДатаОпл.Видимость(1);			
			Форма.ГлубинаПодпись.Видимость(1);
			Форма.Глубина.Видимость(1);			
		КонецЕсли;	
	КонецЕсли; 
КонецПроцедуры	

//======================================================================
Процедура ИзмТовар()
	Если стТовар <> Товар Тогда
		СуммаСкидки = 0; ЦенаСоСкидкой = ЦенаСНДС;
	КонецЕсли;	
	глПриИзмененииТовара(Контекст);
	Если ПустоеЗначение(ПартияПост) = 0 Тогда
		Если ПартияПост.Владелец <> Товар Тогда
			ПартияПост = 0;
		КонецЕсли;
	КонецЕсли;
	Если Товар.Выбран() = 1 Тогда
		ПартияПост = ПолучитьПартиюПостПоКоличеству(Товар,Количество,Коэффициент);
		складскоеМесто = ПолучитьСкладскоеМестоПоКоличеству(Товар,Окр(Количество * Коэффициент,2));
	КонецЕсли;
КонецПроцедуры // ИзмТовар

// ===============================
Процедура ИзмГлубина()
	Если ПустоеЗначение(Глубина) = 1 Тогда              
		Глубина = 0;
	КонецЕсли;	
	ДатаОплаты=глБанковскаяДата(ДатаДок,Глубина);	
КонецПроцедуры

// ===============================
Процедура УстГлубина()
	// Формирует и показывает дату оплаты
	Если ВидОперации = 1 Тогда
		Если Контрагент.ГлубинаКредитаПоставщика.Получить(ДатаДок) <> 0 тогда
			Если Глубина <> Контрагент.ГлубинаКредитаПоставщика.Получить(ДатаДок) тогда
				Глубина=Контрагент.ГлубинаКредитаПоставщика.Получить(ДатаДок);
			КонецЕсли;	
		КонецЕсли;	
	Иначе                        
		Если Контрагент.Глубина.Получить(ДатаДок) <> 0 тогда    
			Если Глубина <> Контрагент.Глубина.Получить(ДатаДок) тогда
				Глубина=Контрагент.Глубина.Получить(ДатаДок);
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли; 
	ИзмГлубина();
КонецПроцедуры	

// ===============================
Процедура ПровестиДокумент()
	Если глМожноЗаписатьДокумент(Контекст)=0 Тогда
		Возврат;
	КонецЕсли;
	Записать();
	//Провести();
	Если Проведен() = 1 Тогда
		УстДоступностьКнопок();
	КонецЕсли;
КонецПроцедуры                      

// ===============================
Процедура БыстраяПродажа() // Процедура быстрой продажи
	
	Если ВидОперации = 1 Тогда
		// только не для возврата                                        
		Предупреждение("По документу """+ПредставлениеВида()+""" с признаком возврат оформить быструю продажу нельзя.");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	
	
	Если Фирма.СчетПоУмолчанию.Выбран()=0 Тогда
		Предупреждение("У фирмы """+СокрЛП(Фирма)+""" не выбран счет по умолчанию. Оформить быструю продажу нельзя.");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	
	
	Если глМожноЗаписатьДокумент(Контекст)=0 Тогда
		СтатусВозврата(0);                        
		Возврат;
	КонецЕсли;
	
	АвтоВремяТекущее();
	Записать();          
	ЗаголовокФормы();
	
	Попытка
		
		НачатьТранзакцию();
		
		// счет
		Если Константа.ПечКолЭкзСчетаПриБыстройПродаже>=0 Тогда
			Счет = СоздатьОбъект("Документ.Счет");
			Счет.Новый();
			Счет.ДатаДок = ДатаДок;
			Счет.АвтоВремяТекущее();
			
			Счет.Фирма = Фирма;
			Счет.Автор = Автор; 
			Счет.ТипУчета = Общ;
			Счет.ФинУчет = 0;
			
			Счет.Контрагент = Контрагент;
			Счет.Договор = Договор;
			Счет.Дата_Курса = Дата_Курса; 
			Счет.Курс = Курс;
			Счет.СрокРезервирования = 1;
			Счет.Валюта = Валюта;
			Счет.РСчет = Фирма.СчетПоУмолчанию;
			Счет.ВидТорговли = ВидТорговли;
			Счет.КатегорияЦен = КатегорияЦен;
			
			ВыбратьСтроки();
			Пока ПолучитьСтроку()>0 Цикл
				Счет.НоваяСтрока();
				Счет.Товар = Товар; 
				Счет.Количество = Количество;
				Счет.Единица = Единица;
				Счет.ЦенаБезНДС = ЦенаБезНДС;
				Счет.ЦенаСНДС = ЦенаСНДС;
				Счет.Коэффициент = Коэффициент;
				Счет.СуммаБезНДС = СуммаБезНДС;
				Счет.СуммаСНДС = СуммаСНДС;
				Счет.Набор = Набор;
			КонецЦикла;	
			
			глУстановитьНомерДок(Счет);	// меняем номер
			Счет.Записать();
			Счет.Провести(1);
			
			Если Счет.Проведен()<=0 Тогда
				ОтменитьТранзакцию();
				СтатусВозврата(0);                        
				Возврат;
			КонецЕсли;
			
			ДокументОснование = Счет.ТекущийДокумент();
			Основание = СокрЛП(Счет.ПредставлениеВида())+" №"+СокрЛП(Счет.НомерДок)+" от "+Шаблон("[Счет.ДатаДок]");
		КонецЕсли;                                     
		
		Записать();  // записываем счет
		Провести(1); // проводим счет
		Если Проведен()<=0 Тогда 
			ДокументОснование = 0;
			Основание = "";
			ОтменитьТранзакцию();
			СтатусВозврата(0);                        
			Возврат;
		КонецЕсли;
		
		// налоговая накладная
		Если Константа.ПечКолЭкзННПриБыстройПродаже>=0 Тогда
			
			//НН = СоздатьОбъект("Документ.НалоговаяНакладная");
			//НН.Новый();
			//НН.ДатаДок = ДатаДок;
			//НН.АвтоВремяТекущее();
			//
			//НН.Фирма = Фирма;
			//НН.Автор = Автор; 
			//НН.ТипУчета = ТипУчета;
			//НН.ФинУчет = ФинУчет;
			//
			//НН.Контрагент = Контрагент;
			//НН.Договор = Договор; 
			//НН.Дата_Курса = Дата_Курса; 
			//НН.Курс = Курс;
			//НН.Валюта = Валюта;
			//
			//НН.СтавкаНДС = Константа.ОсновнаяСтавкаНДС;
			//НН.ФормаРасчетов = Строка(ВидТорговли.ПредставлениеВида());
			//                                  
			//НН.ДокументОснование = ТекущийДокумент();
			//НН.Основание = СокрЛП(ПредставлениеВида())+" №"+СокрЛП(НомерДок)+" от "+Шаблон("[ДатаДок]");
			//
			//глУстановитьНомерДок(НН);	// меняем номер
			//НН.Записать();
			//
			//глСкопироватьТовСостав(НН,ТекущийДокумент());
			//
			//НН.Записать();
			//
			//НН.Провести(1);
			
			глВводНалоговых(ТекущийДокумент(),1);
			
			спНалоговые = СоздатьОбъект("СписокЗначений");
			фВсеПроведены = 1;
			НН = СоздатьОбъект("Документ.НалоговаяНакладная");
			НН.ВыбратьДокументы(ДатаДок,ДатаДок);
			Пока НН.ПолучитьДокумент()=1 Цикл
				Если НН.ДокументОснование = ТекущийДокумент() Тогда
					спНалоговые.ДобавитьЗначение(НН.ТекущийДокумент());
					фВсеПроведены = Мин(фВсеПроведены,НН.проведен());
				КонецЕсли;
			КонецЦикла;
			
			Если фВсеПроведены=0 Тогда
				ДокументОснование = 0;
				Основание = "";
				СделатьНеПроведенным();	// отменяем проведение накладной
				ОтменитьТранзакцию();
				СтатусВозврата(0);                        
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		
		// Приходный ордер
		Если Константа.ПечКолЭкзПрихОрдераПриБыстройПродаже>=0 Тогда
			ПКО = СоздатьОбъект("Документ.ПриходныйКассовый");
			ПКО.Новый();
			ПКО.ДатаДок = ДатаДок;
			ПКО.АвтоВремяТекущее();
			
			ПКО.Фирма = Фирма;
			ПКО.Автор = Автор; 
			ПКО.ТипУчета = ТипУчета;
			ПКО.ФинУчет = ФинУчет;
			
			ПКО.Контрагент = Контрагент;
			ПКО.Договор = Договор; 
			ПКО.ПринятоОт = ?(ПустоеЗначение(Контрагент.ПолнНаименование)=0,Контрагент.ПолнНаименование,Контрагент.Наименование);
			ПКО.Валюта = Валюта; 
			ПКО.ВидОперации = Перечисление.ВидыОплаты.Оплата;
			ПКО.РСчет = глНайтиКассу(Фирма,Валюта);
			//ПКО.СтавкаНДС = ПолучитьПустоеЗначение("Перечисление.ЗначенияНДС");
			ПКО.СтавкаНДС = Константа.ОсновнаяСтавкаНДС;
			ПКО.СуммаСНДС = Итог("СуммаСНДС");
			
			ПКО.ДокументОснование = ТекущийДокумент();
			ПКО.Основание = СокрЛП(ПредставлениеВида())+" №"+СокрЛП(НомерДок)+" от "+Шаблон("[ДатаДок]");
			
			глУстановитьНомерДок(ПКО);	// меняем номер
			ПКО.Записать();
			
			ПКО.Провести(1);
			Если ПКО.Проведен()<=0 Тогда 
				ДокументОснование = 0;
				Основание = "";
				СделатьНеПроведенным();	// отменяем проведение накладной
				ОтменитьТранзакцию();
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		// печатаем счет
		Если Константа.ПечКолЭкзСчетаПриБыстройПродаже>0 Тогда
			ОткрытьФорму(Счет.ТекущийДокумент(),"БыстраяПечать");
		КонецЕсли;
		
		// печатаем накладную
		Если Константа.ПечКолЭкзНакладнойПриБыстройПродаже>0 Тогда
			Печать(1);
		КонецЕсли;
		
		// печатаем налоговую накладную
		Если Константа.ПечКолЭкзННПриБыстройПродаже>0 Тогда
			// Печатаем все налоговые
			Для Инд = 1 по спНалоговые.РазмерСписка() Цикл
				НН = спНалоговые.ПолучитьЗначение(Инд);
				ОткрытьФорму(НН,"БыстраяПечать");
			КонецЦикла;
		КонецЕсли;                     
		
		// печатаем ПКО
		Если Константа.ПечКолЭкзПрихОрдераПриБыстройПродаже>0 Тогда
			ОткрытьФорму(ПКО.ТекущийДокумент(),"БыстраяПечать");
		КонецЕсли;                     
		
		ОбновитьНадписи();
		
		// фиксируем все изменения
		ЗафиксироватьТранзакцию();
		Форма.Закрыть(0);
	Исключение
		// при возникновении ошибки отменяем все изменения
		// здесь можно выдать сообщение об ошибке
		ОтменитьТранзакцию();
		// сообщение используется для отладки
		Сообщить(ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
КонецПроцедуры	    // БыстраяПродажа   

// ===============================
Процедура ЧастичноПровести()
	фМожноПроводить = 1;
	Если Проведен()=1 Тогда
		Если РежимПроведения=0 Тогда
			фМожноПроводить = 0;
			Предупреждение("Документ "+ПредставлениеВида()+" № "+СокрЛП(НомерДок)+" от "+Формат(ДатаДок,"ДДММГГГГ")+
			" полностью проведен. Предварительное проведение невозможно.");
		КонецЕсли;
	ИначеЕсли ДатаДок<ПолучитьДатуТА() Тогда
		фМожноПроводить = 0;
		Предупреждение("Предварительное проведение задним числом невозможно.");
	ИначеЕсли ДатаДок<>РабочаяДата() Тогда
		фМожноПроводить = 0;
		Предупреждение("Дата документа "+ПредставлениеВида()+" № "+СокрЛП(НомерДок)+" от "+Формат(ДатаДок,"ДДММГГГГ")+
		" отличается от рабочей даты ("+Формат(РабочаяДата(),"ДДММГГГГ")+"). Предварительное проведение невозможно.");
	КонецЕсли;
	
	Если фМожноПроводить = 1 Тогда
		Провести(3,1);
		ЗаголовокФормы();          
		Если Проведен() = 1 Тогда
			УстДоступностьКнопок();
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ИзмДатаДок()    
	Если (названиенабораправ()="Менеджер") ИЛИ (названиенабораправ()="МенеджерТоварищ") Тогда
		датадок=текущаядата();
	КонецЕсли;
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
	ИзмГлубина(); 
	УстДоступностьГлубина();
	ОбновитьНадписи();
КонецПроцедуры

// ===============================
//Функция ПолучитьСуммуПоДокументуВРозничныхЦенах()
//	итСумма = 0;
//	ВыбратьСтроки();
//	Пока ПолучитьСтроку() = 1 Цикл
//		Цена_Розн=0;
//		глПолучитьЦенуТовара(Константа.РозничнаяКатегорияЦен,Товар,Единица,ДатаДок,Цена_Розн,Валюта); 
//		Если Валюта = Гривня Тогда
//			Цена_Розн = Окр(Цена_Розн,Константа.КоэффОкрГрнЦены,1);
//		КонецЕсли;
//		итСумма = итСумма +Окр(Цена_Розн * Количество,2);
//	КонецЦикла;
//	Возврат итСумма;
//КонецФункции

// ===============================
//*ralex, 25-12-22 22:35
//Функция Итого()
//	// Показ итоговых сумм по документу
//	Перем Результат,СуммаБезНДС, СуммаСНДС, СуммаНДС;
//	СуммаБезНДС = Итог("СуммаБезНДС");
//	СуммаСНДС = Итог("СуммаСНДС");
//	СуммаНДС = СуммаСНДС - СуммаБезНДС;
//	//*ralex, 02-08-20 10:42
//	//Результат = ?(СуммаБезНДС =0,"","Сумма="+ глФРМ(СуммаБезНДС, Валюта, 1))+
//	//            ?(СуммаНДС = 0,""," НДС=" + глФРМ(СуммаНДС, Валюта, 1))+
//	//            ?(СуммаСНДС = 0,""," Всего=" + глФРМ(СуммаСНДС, Валюта, 1));
//	// -------- заменено на:
//	Результат = ?(СуммаНДС =0,"","Сумма="+ глФРМ(СуммаБезНДС, Валюта, 1))+
//	            ?(СуммаНДС = 0,""," НДС=" + глФРМ(СуммаНДС, Валюта, 1))+
//	            ?(СуммаСНДС = 0,""," Всего=" + глФРМ(СуммаСНДС, Валюта, 1));
//	//*/ralex, 02-08-20 10:42
//	Возврат Результат;
//КонецФункции 
// -------- заменено на:
// Показ итоговых сумм по документу
//процентСкидки - Возвращает рассчитаный процент скидки.
Функция Итого(процентСкидки = 0)
	Перем Результат,итСуммаБезНДС, итСуммаСНДС, итСуммаНДС;

	Если Итог("СуммаБезСкидки") = 0 Тогда
		Возврат "";
	КонецЕсли;
	текКатегорияЦен = ?(Контрагент.Выбран() = 1,Контрагент.КатегорияЦен,КатегорияЦен);
	
	Если текКатегорияЦен = Константа.крупнооптоваяЦена Тогда
		
		итСуммаБезНДС = Итог("СуммаБезНДС");
		итСуммаСНДС =  глФРМ(Итог("СуммаСНДС"), Валюта,1);
		итСуммаНДС = Итог("СуммаСНДС") - итСуммаБезНДС;
		Если Итог("СуммаБезСкидки") <> 0 Тогда
			процент = Окр(Итог("СуммаСкидки") * 100/Итог("СуммаБезСкидки") ,0);
		Иначе
			процент = 0;
		КонецЕсли;
		
		процент = Окр(Итог("СуммаСкидки") * 100/Итог("СуммаБезСкидки") ,0);
		итСкидка = глФРМ(Итог("СуммаСкидки"),Валюта,1);
		итСкидка = ?(Итог("СуммаСкидки") = 0,"",", скидка: " + итСкидка + "(" + процент + "%)");
		итСуммаБезСкидки = глФРМ(Итог("СуммаБезСкидки"),Валюта,1);
		
		Результат = "без скидки: " + итСуммаБезСкидки + итСкидка + ", ВСЕГО: " + итСуммаСНДС;
		процентСкидки = процент;
		Возврат Результат;
	Иначе
		итСуммаСНДС =  глФРМ(Итог("СуммаСНДС"), Валюта,1);
		итСуммаРозница = гл_ПолучитьСуммуПоДокументуВРозничныхЦенах(Контекст);
		итСкидка = итСуммаРозница - Итог("СуммаСНДС");
		Если итСуммаРозница <> 0 Тогда
			процент = Окр(итСкидка * 100/итСуммаРозница ,0);
		Иначе
			процент = 0;
		КонецЕсли;
		
		итСкидка = глФРМ(итСкидка,Валюта,1);
		итСкидка = ?(итСкидка = 0,"",", скидка: " + итСкидка + "(" + процент + "%)");
		итСуммаРозница = глФРМ(итСуммаРозница,Валюта,1);
		итСуммаБезСкидки = глФРМ(Итог("СуммаБезСкидки"),Валюта,1);
		
		Результат = "розница: " + итСуммаРозница + итСкидка + ", ВСЕГО: " + итСуммаСНДС;
		процентСкидки = процент;
		Возврат Результат;
	КонецЕсли;
КонецФункции
//*/------------------------

Функция ПолучитьСуммуИПрибыльУслуги(Док,ДокСуммаУслуги,ДокПрибыльУслуги)
	Док.ВыбратьСтроки();
	Пока Док.ПолучитьСтроку() = 1 Цикл
		Если Док.Товар.ВидТовара = Перечисление.ВидыТоваров.Услуга Тогда
			ДокСуммаУслуги = ДокСуммаУслуги + Док.СуммаСНДС;
			ДокПрибыльУслуги = ДокПрибыльУслуги + Док.СуммаПрибыль
		КонецЕсли;
	КонецЦикла;
	Если Док.Вид() = "РасходнаяНакладная" Тогда
		Если (Док.Контрагент = Константа.КонтрагентТерминал) или (ВидТорговли = Перечисление.ВидыТорговли.терминал) Тогда
			процТерминал = Константа.процентТерминал.Получить(Док.ДатаДок);		
			ДокСуммаУслуги = Окр((ДокСуммаУслуги - ДокСуммаУслуги * процТерминал/100),2);
		КонецЕсли;
	КонецЕсли;
	Возврат 1;
КонецФункции // ПолучитьСуммуИПрибыльУслуги(Док,ДокСуммаУслуги,ДокПрибыльУслуги);

Функция ИтогоПрибыль(флПоказМаржу = 1)
	Если Найти(Врег(НазваниеНабораПрав()),"МЕНЕДЖЕР") <> 0 Тогда
		//(названиенабораправ()="Менеджер") или ИЛИ (названиенабораправ()="МенеджерТоварищ") Тогда
		возврат "";
	Иначе	
		Если Выбран() = 0 Тогда
			Возврат "";
		КонецЕсли;
		Если флПоказМаржу = 1 Тогда
			ДокСуммаУслуги = 0; ДокПрибыльУслуги = 0;
			ПолучитьСуммуИПрибыльУслуги(ТекущийДокумент(),ДокСуммаУслуги,ДокПрибыльУслуги);
			
			ДокПрибыль = Итог("СуммаПрибыль") - ДокПрибыльУслуги;
			врСуммаСНДС = Итог("СуммаСНДС");
			Если врСуммаСНДС = ДокСуммаУслуги Тогда
				сс = врСуммаСНДС - Итог("СуммаПрибыль");
			Иначе
				врСуммаСНДС = врСуммаСНДС - ДокСуммаУслуги;
				//*ralex, 13-05-21 00:41
				//сс = врСуммаСНДС - ДокСуммаУслуги - Итог("СуммаПрибыль");
				// -------- заменено на:
				сс = врСуммаСНДС - Итог("СуммаПрибыль") + ДокПрибыльУслуги;
				//*/------------------------
			КонецЕсли;
			
			Если врСуммаСНДС = 0 Тогда
				печНаценка = 0;
			Иначе
				//*ralex, 13-05-21 00:19
				//печНаценка = ?(сс = 0,0,Окр((врСуммаСНДС - сс)/сс * 100,0));
				// -------- заменено на:
				печНаценка = ?(сс = 0,0,Окр((врСуммаСНДС/сс * 100 - 100),0));
				//*/------------------------
			КонецЕсли;
		КонецЕсли;
		
		Возврат "" + итог("СуммаПрибыль") + 
		?(флПоказМаржу = 1,РазделительСтрок + "наценка " + печНаценка + " %",""); 
	КонецЕсли;
КонецФункции 
// ===============================
// функции и процедуры, вызываемые из формул элементов диалога

// ===============================
Процедура Взаиморасчеты()
	глПоказатьДолг(Контекст, Контрагент, "Продажа");
КонецПроцедуры

// ===============================
Процедура Подбор()
	рез = спрКонтрПрава.ПроверитьКонтрагентаЗаполненоОткудаПришел(радиоОткудаКлиент,Контрагент);
	Если рез = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Варианы= СоздатьОбъект("СписокЗначений");
	Варианы.ДобавитьЗначение("по каталогу");
	Варианы.ДобавитьЗначение("по прайсу");
	Варианы.ДобавитьЗначение("по штрих-коду");
	Результат = 0;
	Если Варианы.ВыбратьЗначение(,,Результат,,1)=1 Тогда
		Если Результат = 1 Тогда
			глПодбор(Контекст,"номенклатура","ДляПодбора")
		ИначеЕсли Результат = 2 Тогда
			глПодбор(Контекст,"прайс_лист","ДляПодбора")
		ИначеЕсли Результат = 3 Тогда
			ОткрытьПодбор("Обработка.ПодборПоШтрихКоду");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// ===============================
Процедура ВыборФирмы()
	// по кнопке редактирования параметров фирмы в докумнете
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ИнформацияОфирме", КонтекстДокумента);
	ОбновитьНадписи();
КонецПроцедуры	

// ===============================
Процедура ВыборОплаты()
	// Процедура по кнопке редактирования параметров оплаты в докумнете
	Перем КонтекстДокумента;
	Перем СтараяКатегорияЦен;
	СтараяКатегорияЦен = КатегорияЦен;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ИнформацияОценах", КонтекстДокумента);
	Если СтараяКатегорияЦен <> КатегорияЦен Тогда
		// изменилась категория цен
		// перерисуем
		Если ПустоеЗначение(КонтекстПодбора) = 0 Тогда
			КонтекстПодбора.Форма.Обновить();
		КонецЕсли;
	КонецЕсли;
	ОбновитьНадписи();
КонецПроцедуры	

// ===============================
//флПодтвержден - клиент подтвердил себя через смс
Процедура ИзмКонтрагент(флПодтвержден = 0,измКатегорияЦен = 0) // Процедура при выборе Контрагента в докумнете  
	Если Контрагент.Выбран()=1 Тогда     
		Если НазваниеНабораПрав() = "Администратор" Тогда
			флПодтвержден = 1;
			Комментарий = СокрЛП(Комментарий) + " подтвержден " + глПользователь;
		КонецЕсли;
		
		Если спрКонтрПрава.ПроверитьРазрешение(Контрагент) = 0 Тогда
			Контрагент = СтарыйКонтрагент;
			Предупреждение("Вам запрещено создавать документы для этого контрагента",10);
			Возврат;
		КонецЕсли;
		
		Если (СтарыйКонтрагент <> Контрагент) Тогда
			подтвержденСМС = 0;
			разрешеныСкидки = 0;
			
			Если (ПустаяСтрока(Контрагент.Телефон1) = 1) и (ПустаяСтрока(Контрагент.Телефон2) = 1) Тогда
				Предупреждение("У клиента не указан ни один номер телефона. Применяется розничная категория цен.",3);
			КонецЕсли;
			
			откудаКлиент = 0;
			спрКонтрПрава.ЗаполнитьРадиоОткудаПришелКлиент(контекст); //+ralex, 26-07-22 21:56
			УстДоступностьКнопок();
		КонецЕсли;
		
		подтвержденСМС = ?(подтвержденСМС = 1,1,флПодтвержден); //+ralex, 16-05-21 15:31
		разрешеныСкидки = получитьРазрешениеНаСкидки();
		спрКонтрПрава.ПроверитьСтопПечать(Контекст);
		
		Если этоКладовщикШК = 0 Тогда
			СписокДействий = глПолучитьСписокДействий(
			?(НазваниеНабораПрав() = "Администратор","ТоварныйСостав,","") +
			?(НазваниеНабораПрав() = "Администратор","ОбновлениеЦен,","") + "
			|СтруктураПодчиненности,
			|ДвиженияДокумента,
			|ВводНаОсновании,
			|ОткрытьВЖурнале,
			|Подчиненные,
			|ИзмКомментария");
		Иначе
			СписокДействий = глПолучитьСписокДействий("ОткрытьВЖурнале");
		КонецЕсли;
		
		Если (СтарыйКонтрагент <> Контрагент) или (разрешеныСкидки = 1) Тогда //флПодтвержден = процедура вызвана из обработки подтверждения.
			Если НазваниеНабораПрав() = "Администратор" Тогда
				Предупреждение("убедитесь в соответствии цен на товары категории цен, установленной контрагенту.");
			Иначе
				Если ПустоеЗначение(ДокументОснование) = 0 Тогда
					Если Контрагент <> ДокументОснование.Контрагент Тогда
						Если Вопрос("Все цены и суммы в документе будут пересчитаны. Продолжить?",4,15 ) <> 6 Тогда
							Контрагент = СтарыйКонтрагент;
							Возврат;
						КонецЕсли;
					КонецЕсли;
				Иначе
					Если Вопрос("Все цены и суммы в документе будут пересчитаны. Продолжить?",4,15 ) <> 6 Тогда
						Контрагент = СтарыйКонтрагент;
						Возврат;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			//*ralex, 21-09-21 23:31
			//Если (названиеНабораПрав()="Продавець") ИЛИ (названиеНабораПрав()="Менеджер")  ИЛИ (названиеНабораПрав()="МенеджерТоварищ")Тогда
			// -------- заменено на:
			Если (названиеНабораПрав()="Продавець") ИЛИ (Найти(Врег(НазваниеНабораПрав()),"МЕНЕДЖЕР") <> 0)Тогда
				//*/------------------------
				Если новый=0 тогда
					Контрагент=СтарыйКонтрагент;
				КонецЕсли;
				форма.категорияцен.доступность(0);
			КонецЕсли;
			// изменили Контрагента
			// очистим договор
			Договор = ПолучитьПустоеЗначение("Документ.Договор");
			Если Константа.ПодставлятьОсновнойДоговор = Да Тогда
				// подставим договор по умолчанию                                 
				Если ПустоеЗначение(Контрагент.ОсновнойДоговорТорг) = 0 Тогда
					Если Фирма = Контрагент.ОсновнойДоговорТорг.Фирма Тогда
						Договор = Контрагент.ОсновнойДоговорТорг;
					КонецЕсли;	
				КонецЕсли;	
			КонецЕсли;
			
			Если (НазваниеНабораПрав() = "Администратор") или (разрешеныСкидки = 1) Тогда
				Если ПустоеЗначение(Контрагент.КатегорияЦен) = 0 Тогда
					Если НЕ((измКатегорияЦен = 1) и (флОтклКонтрольЦен = 1)) Тогда
						КатегорияЦен = Контрагент.КатегорияЦен;
						ТипЦенСкидки = Контрагент.КатегорияЦен;
					КонецЕсли;
				КонецЕсли;       
			ИначеЕсли разрешеныСкидки = 0 Тогда
				КатегорияЦен = Константа.РозничнаяКатегорияЦен;
				ТипЦенСкидки = Константа.РозничнаяКатегорияЦен;
			КонецЕсли;
			
			УстГлубина();
			//+ralex, 17-10-23 11:47
			Если Сорт <> Константа.КондиционныйТовар Тогда
				КатегорияЦен = Сорт.КатегорияЦен;
			КонецЕсли;		
			//+/------------------------
			ПрСкидки = 0;
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				ЦенаСоСкидкой = 0;
				СуммаСкидки = 0;
				ИзмТовар(); 
				глПриИзмененииТовара(Контекст);
			КонецЦикла;
			//+/ralex, 24-11-19 02:43
		КонецЕсли; 		
		Если  пустоезначение(Контрагент.ВидТорг)=0 Тогда
			ВидТорговли=Контрагент.ВидТорг; 
			ВыбранВидТорговли(); 
		Иначе
			ВидТорговли = Константа.ОсновнойВидТорговли;
			ВыбранВидТорговли();			
		КонецЕсли;
		
		//-ralex, 17-05-21 09:33
		//Если ПустаяСтрока(АдресДоставки) = 1 Тогда
		//	АдресДоставки = Контрагент.ЮридическийАдрес;
		//КонецЕсли;
		//-/------------------------
	Иначе
		//Не выбран Контрагент - не имеет смысла показывать глубину и дату оплаты и договор
		Договор = ПолучитьПустоеЗначение("Документ.Договор");
	КонецЕсли;  
	УстДоступностьГлубина();	
	// Формирует и показывает дату оплаты
	СтарыйКонтрагент = Контрагент;
	Если ПустаяСтрока(АдресДоставки) = 1 Тогда
		АдресДоставки = Контрагент.ЮридическийАдрес;
	КонецЕсли;
	//+ralex, 11-08-21 00:36
	Если ПустоеЗначение(Контрагент.Склад) = 0 Тогда
		Склад = Контрагент.Склад;
	КонецЕсли;
	//+/------------------------
	
	УстДоступностьКнопок();
	УстДоступность();
	ОбновитьНадписи();  
КонецПроцедуры	

// ===============================
//Процедура УстСуммуСкидки()
//	//Если ЦенаСоСкидкой = 0 Тогда
//	//Иначе
//	//	СуммаСкидки = СуммаБезСкидки - Окр(ЦенаСоСкидкой*Количество,2);	
//	//КонецЕсли;
//КонецПроцедуры
// ===============================
//Процедура УстЦенСкидки()
//	
//	//Если ТипЦенСкидки="" Тогда
//	//	ЦенаСоСкидкой = 0;
//	//Иначе
//	//	ТипЦенаСоСкидкой = глВернутьЦену(Товар, ТипЦенСкидки);
//	//	Если ПустоеЗначение(ТипЦенаСоСкидкой) = 0 Тогда
//	//		ТипЦенаСоСкидкой.ИспользоватьДату(ДатаДок);
//	//		ЦенаСоСкидкой = ТипЦенаСоСкидкой.Цена;     
//	//	Иначе
//	//		ЦенаСоСкидкой = 0;
//	//		
//	//	КонецЕсли;	
//	//	УстСуммуСкидки();
//	//КонецЕсли;
//КонецПроцедуры
// ===============================

Процедура ИзмДоговор()
	Если ПустоеЗначение(Договор)=0 Тогда
		Если Договор.Вид()="Договор" Тогда
			Если спВидТорговли.Принадлежит(Договор.ВидТорговли)=0 Тогда
				глТрассировка(Шаблон("Нельзя выбирать Договор с видом торговли [Договор.ВидТорговли]!!!"),1);
				Договор=0;
			Иначе
				ВидТорговли = Договор.ВидТорговли;
				ВыбранВидТорговли();
			КонецЕсли;    
		ИначеЕсли глДополнениеДоговораКонсигнации(Договор)=Да Тогда
			ВидТорговли = Перечисление.ВидыТорговли.Предоплата;
			ВыбранВидТорговли();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ИзмСклад()
	Если (Склад = стСклад) Тогда 
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(стСклад) = 1 Тогда
		Возврат;
	КонецЕсли;
	//-ralex, 07-07-21 23:05
	//Если (Склад.флБезСкидок = стСклад.флБезСкидок) Тогда
	//	Возврат;
	//КонецЕсли;
	//-/------------------------
	//нужно поменять цены
	стСклад = Склад;
	врТз = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(врТз);
	УдалитьСтроки();
	врТз.ВыбратьСтроки();
	Пока врТз.ПолучитьСтроку() = 1 Цикл
		НоваяСтрока();
		Товар = врТз.Товар;
		Количество = врТз.Количество;
		Единица = врТз.Единица;
		Коэффициент = врТз.Коэффициент;
		глПриИзмененииТовара(Контекст);
	КонецЦикла;
	Сообщить("Цены в документе были изменены в соответствии с настройками склада");	
КонецПроцедуры // ИзмСклад

//======================================================================
Процедура ПриВводеСтроки()
	рез = спрКонтрПрава.ПроверитьКонтрагентаЗаполненоОткудаПришел(радиоОткудаКлиент,Контрагент);
	СтатусВозврата(рез);
КонецПроцедуры // ПриВводеНовойСтроки

// ===============================
Процедура ПриВводеНаОсновании(ДокОснование)
	Перем ВидОсн;
	
	Перем ВремСклад, ВремВалюта;
	Перем ВремДата_Курса, ВремКурс;
	Перем ВремКонтрагент, ВремДоговор;
	
	Если ПустоеЗначение(ДокОснование) = 1 Тогда
		Возврат;
	КонецЕсли;
	
	ВидОсн = ДокОснование.Вид();
	
	Если (ВидОсн="Счет") Тогда		
		Валюта=ДокОснование.Валюта;
		Дата_Курса=ДокОснование.Дата_Курса;
		Курс=ДокОснование.Курс;
		Глубина = ДокОснование.СрокРезервирования;
		неликвид = ДокОснование.неликвид;
	ИначеЕсли (ВидОсн="ВводПартийТоваров") Тогда		
		Валюта=Гривня;
		Дата_Курса=ДатаДок;
		Курс=глКурсДляВалюты(Валюта,Дата_Курса);
		Контрагент =ДокОснование.Поставщик;
		Глубина = Контрагент.Глубина.Получить(ДатаДок);
	ИначеЕсли (ВидОсн="ПриходнаяНакладная") тогда
		// приходная накладная		
		Валюта=ДокОснование.Валюта;
		Дата_Курса=ДокОснование.Дата_Курса;
		Курс=ДокОснование.Курс;
		Глубина = Контрагент.ГлубинаКредитаПоставщика.Получить(ДатаДок);
	ИначеЕсли (ВидОсн="Договор") тогда	
		Валюта=ДокОснование.Валюта;
		Курс=глКурсДляВалюты(Валюта,ДатаДок);
		Дата_Курса=ДатаДок; 
	КонецЕсли;
	
	глЗаполнитьШапкуНаОсн(Контекст,ДокОснование);
	ВыбранВидТорговли();
	ИзмДоговор();
	УстГлубина();       
	УстДоступностьГлубина();		
	Если ПустаяСтрока(АдресДоставки) = 1 Тогда
		АдресДоставки = Контрагент.ЮридическийАдрес;
	КонецЕсли;
	
	Если ВидОсн <> "Договор" Тогда
		глСкопироватьТовСостав(Контекст,ДокОснование); 
		ВремРег = СоздатьОбъект("Регистры");
		
		выбратьстроки();
		пока получитьстроку()=1 цикл
			Рекламация = ДокРекламация;
			РассчитатьБонусыПоДокументу(Контекст);
			Если Товар.Выбран() = 1 Тогда
				ПартияПост = ПолучитьПартиюПостПоКоличеству(Товар,Количество,Коэффициент);
			КонецЕсли;
		конеццикла;	
		
		Если Константа.НачальноеЗаполнение = Да тогда			
			Если ДокументОснование.Вид() = "Счет" тогда
				// если основание - Счет, заполняем остатками резерва	
				Если ТипУчета <> Фин Тогда
					ВыбратьСтроки();
					Пока ПолучитьСтроку() = 1 цикл            
						Если Товар.ВидТовара = Перечисление.ВидыТоваров.Услуга Тогда
							Продолжить;
						КонецЕсли;
						Если неликвид = 0 Тогда
							КвоРезерв = Регистр.РезервыТоваров.СводныйОстаток(Товар,ДокументОснование,"РезервТовара"); 
							Если Количество = КвоРезерв/Коэффициент Тогда
								Продолжить;
							Иначе
								Количество = Мин(КвоРезерв/Коэффициент,Количество); 
							КонецЕсли;	
						КонецЕсли;
						глВыч_суммы_накл(Контекст);
					КонецЦикла;	                
				КонецЕсли;
			ИначеЕсли ДокументОснование.Вид() = "ПриходнаяНакладная" тогда	
				// если это возврат, проверяем сколько уже возвращено 			
				ВыбратьСтроки();
				Пока ПолучитьСтроку() = 1 цикл    
					Если Товар.ВидТовара = Перечисление.ВидыТоваров.Услуга Тогда
						Продолжить;
					КонецЕсли;
					Фрм = ?(ТипУчета = Упр,глПустаяФирма,Фирма);
					//+ralex, 21-10-21 20:49
					//а теперь по рекламации
					Если ПустоеЗначение(Рекламация) = 0 Тогда 
						тбОстРекл = 0; 	спОтбор = СоздатьОбъект("СписокЗначений");
						ОстРекламация = Регистр.Рекламации.СводныйОстаток(Контрагент,Товар,ДокументОснование,Рекламация,"Кво");
						количество = Мин(ОстРекламация, Количество*Коэффициент);
					КонецЕсли;
					//+/------------------------
					
					КвоВозвр = Регистр.ВозвратыПартий.СводныйОстаток(ДокументОснование,Фрм,Товар,,,,,,"ОстатокТовара"); 
					Если КвоВозвр/Коэффициент = 0 Тогда
						глВыч_суммы_накл(Контекст);
						Продолжить;
					Иначе
						Количество = Количество+КвоВозвр/Коэффициент; 
						глВыч_суммы_накл(Контекст);
					КонецЕсли;	
				КонецЦикла;	 
			ИначеЕсли ДокументОснование.Вид() = "Рекламация" тогда	
				// если это возврат, проверяем сколько уже возвращено 		
				Валюта = Гривня;
				Курс = 1;
				Дата_курса = ДатаДок;
				ВыбратьСтроки();
				Пока ПолучитьСтроку() = 1 цикл    
					Если Товар.ВидТовара = Перечисление.ВидыТоваров.Услуга Тогда
						Продолжить;
					КонецЕсли;
					Фрм = ?(ТипУчета = Упр,глПустаяФирма,Фирма);
					//+ralex, 21-10-21 20:49
					//а теперь по рекламации
					Если ПустоеЗначение(Рекламация) = 0 Тогда 
						тбОстРекл = 0; 	спОтбор = СоздатьОбъект("СписокЗначений");
						ОстРекламация = Регистр.Рекламации.СводныйОстаток(Контрагент,Товар,ДокументОснование,Рекламация,"Кво");
						количество = Мин(ОстРекламация, Количество*Коэффициент);
					КонецЕсли;
					//+/------------------------
					
					КвоВозвр = Регистр.ВозвратыПартий.СводныйОстаток(ДокументОснование,Фрм,Товар,,,,,,"ОстатокТовара"); 
					Если НЕ(КвоВозвр/Коэффициент = 0) Тогда
						Количество = Количество+КвоВозвр/Коэффициент; 
					КонецЕсли;	
					ИзмТовар();
					//резЦена = 0; резВалюта = 0;
					//глПолучитьЦенуТовара(Константа.Закупочная,Товар,Единица,ДатаДок,резЦена,резВалюта);
					//ЦенаБезНДС = глПересчет(резЦена,резВалюта,ДатаДок,Валюта,Курс);
					//ЦенаСНДС = ЦенаБезНДС;
					глВыч_суммы_накл(Контекст);
				КонецЦикла;	               
			КонецЕсли;	         
			// удаляем сторки с количеством 0
			ТаблЧ = СоздатьОбъект("ТаблицаЗначений");
			ВыгрузитьТабличнуюЧасть(ТаблЧ);
			КСтр = ТаблЧ.КоличествоСтрок();
			Пока КСтр <> 0 цикл
				ТаблЧ.ПолучитьСтрокуПоНомеру(КСтр);				
				Если (ТаблЧ.Количество = 0) И (ТаблЧ.Товар.ВидТовара <> Перечисление.ВидыТоваров.Услуга) Тогда
					ТаблЧ.УдалитьСтроку();
					КСтр = ТаблЧ.КоличествоСтрок();
				Иначе
					КСтр = КСтр-1;
				КонецЕсли;	  
			КонецЦикла;	
			ЗагрузитьТабличнуюЧасть(ТаблЧ);
			Если КоличествоСтрок() = 0 тогда
				глТрассировка("При начальном заполнении на основании "+ДокументОснование+", табличная часть пустая.",0);
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;
	//*/ralex, 21-01-19 20:16
	
	//+ralex, 15-12-21 22:53
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ЦенаПрибыльВР = 0; СуммаПрибыльВР = 0; //переменные не используются, но нужны для совместимости
		РассчитатьПрибыль(Контекст,1,ЦенаПрибыльВР,СуммаПрибыльВР);
	КонецЦикла;
	//+/------------------------
	
	Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
		Касса = глНайтиКассу(Фирма,Валюта);
	КонецЕсли;                             
	спрКонтрПрава.ПроверитьСтопПечать(Контекст);
КонецПроцедуры

// ===============================
Процедура ВыборОснования()
	// Процедура по кнопке редактирования основания в докумнете
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", КонтекстДокумента);
	ПриВводеНаОсновании(ДокументОснование);
	// Могли изменить Контрагента
	ИзмДоговор();
	ОбновитьНадписи();         
	глУстДостСумм(Контекст);
КонецПроцедуры	

// ===============================
Процедура ПриЗаписи() //Предопределенная процедура
	Перем тз;
	
	Если глМожноЗаписатьДокумент(Контекст)=0 Тогда
		СтатусВозврата(0);                        
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;  
	
	//коммент Админ впереди пишем наш комментарий
	флПр = 0;
	текКоммент = "";
	Если СтрДлина(КомментарийАдм) <> 0 Тогда
		поз = Найти(КомментарийАдм,"#");
		Если поз <> 0 Тогда
			текКоммент = СокрЛП(Прав(КомментарийАдм,стрДлина(КомментарийАдм) - поз)); //сохраняем то, что возможно приписал пользователь
		Иначе
			текКоммент = СокрЛП(КомментарийАдм);
		КонецЕсли;
	КонецЕсли;
	
	Если Итог("СуммаБезСкидки") <> 0 Тогда
		Если ПрСкидки =0  Тогда
			проц = (Итог("СуммаБезСкидки") - Итог("СуммаБезНДС"))*100/Итог("СуммаБезСкидки");
			Если проц <> 0 Тогда
				флПр = 1; //если в документе есть скидка от розничной цены но это не скидка данная вручную
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Сорт= сорт_ПолучитьСорт(Контекст); //+ralex, 09-06-23 11:50
	
	КомментарийАдм = "";
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		ЦенаПрибыль = 0; СуммаПрибыльВР = 0; //переменные не используются, но нужны для совместимости
		РассчитатьПрибыль(Контекст,1,ЦенаПрибыль,СуммаПрибыльВР);
		Если флПр = 1 Тогда
			Если Товар.АкцияПоставщика.получить(ДатаДок) = 1 Тогда
				КомментарийАдм = СокрЛП(КомментарийАдм) + ?(ПустаяСтрока(КомментарийАдм) = 1,"акция поставщика " + Товар.Родитель,"");
				флОтборАкцияРаспродажа = 1;
			ИначеЕсли Товар.Распродажа.получить(ДатаДок) = 1 Тогда
				КомментарийАдм = СокрЛП(КомментарийАдм) + ?(ПустаяСтрока(КомментарийАдм) = 1,"распродажа " + Товар.Родитель,"");
				флОтборАкцияРаспродажа = 1;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ПустаяСтрока(КомментарийАдм) = 0 Тогда
		КомментарийАдм = СокрЛП(КомментарийАдм) + " # " + текКоммент;
	Иначе
		КомментарийАдм = текКоммент;
	КонецЕсли;
	
	////+ralex, 07-06-21 21:54
	//Если (подтвержденСМС = 1) Тогда
	//	Если Найти(КомментарийАдм,"подтверждение смс") = 0 Тогда
	//		КомментарийАдм = СокрЛП(КомментарийАдм) + " # подтверждение смс. тел.: " + ?(ПустаяСтрока(Контрагент.Телефон1) = 0,Контрагент.Телефон1,Контрагент.Телефон2);
	//	КонецЕсли;
	//КонецЕсли;
	////+/------------------------
	
	новый=0;
	ПричинаВозвратаПок = спсПричины.ПолучитьЗначение(спсПричины.ТекущаяСтрока());
	Если НЕ((ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.ошибка) или (ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.ошибкаМенеджера)) Тогда
		квоОшибок = 0;
	КонецЕсли;
	
	ОтборАвтор=фирма;	
	Пользователь = Автор;
	ГруппаПользователей = Автор.Родитель;
	ШтрКод = СформироватьШтрихКодДокумента(Контекст,ТекущийДокумент());
	
	//контроль изменения партии поставщика пользователем на партию с большим остатком
	Если тзТЧ.КоличествоСтрок() <> 0 Тогда
		тзТЧ.ВыбратьСтроки();
		Пока тзТЧ.ПолучитьСтроку() = 1 Цикл
			//+ralex, 02-02-23 23:15
			Если дополненияТорговля.ПолучитьПараметрГруппыСправочника(тзТЧ.Товар,"разрешеныПартииПост") = 0 Тогда
				Продолжить;
			КонецЕсли;
			//+/------------------------
			
			ВыбратьСтроки();
			Пока ПолучитьСтроку() = 1 Цикл
				Если Товар = тзТЧ.Товар Тогда
					ОстатокМинПартии = 0;
					минПартия = ПолучитьПартиюПостПоКоличеству(Товар,Количество,Коэффициент,ОстатокМинПартии);
					Если (ПартияПост <> минПартия) и (тзТЧ.НачПартияПост <> ПартияПост) Тогда //проверяем была ли она при открытии
						тхтИзм = "нач. партия = " + тзТЧ.НачПартияПост + " изменена на " + ПартияПост + " док: " + НомерДок + " " + Вид();
						ЗаписьЖурналаРегистрации(тхтИзм,,"#измПартииПост",Товар,2);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Если ПустаяСтрока(id_задачиВ_CRM) = 1 Тогда
		СтатусЗадачиВCRM = 0;
	ИначеЕсли ЗадачаВCRMВыполнена = 0 Тогда
		СтатусЗадачиВCRM = 1;
	ИначеЕсли ЗадачаВCRMВыполнена = 1 Тогда
		СтатусЗадачиВCRM = 2;
	КонецЕсли;
	
	ВыгрузитьТабличнуюЧасть(тз);
	тз.Сортировать("Товар");
	ЗагрузитьТабличнуюЧасть(тз);
	
	рознКлиенты = гл_ПолучитьЗначениеДопКонстанты("грКлРозница");
	Если Контрагент.ПринадлежитГруппе(рознКлиенты) = 1 Тогда
		Если радиоОткудаКлиент <> 0 Тогда
			Если (радиоОткудаКлиент = 6) и ((ПустаяСтрока(прочееОткудаПришел) = 1) или (СтрДлина(СокрЛП(прочееОткудаПришел)) < 3)) Тогда
				Если Форма.прочееОткудаПришел.Доступность() = 1 Тогда
					Предупреждение("Для ""Прочее"" не заполнено поле описания откуда пришел клиент.");
					Активизировать("прочееОткудаПришел",1);
					СтатусВозврата(0);
					Возврат;
				КонецЕсли;
			КонецЕсли;
			
			врОткудаКлиент = перечисление.ОткудаКлиент.ЗначениеПоНомеру(радиоОткудаКлиент);
			//2 варианта. Если у клиента не заполнен тел1 и тел2 то сохраняем откуда пришел в документе - это разовый розничный клиент, 
			//если номер заполнен то сохраняем в справочнике.
			Если (ПустоеЗначение(Контрагент.Телефон1) = 0) или (ПустоеЗначение(Контрагент.Телефон2) = 0) Тогда
				спр = СоздатьОбъект("Справочник.Контрагенты");
				спр.НайтиЭлемент(Контрагент);
				спр.ОткудаПришелКлиент = врОткудаКлиент;
				спр.Записать();
			Иначе
				откудаКлиент = врОткудаКлиент;
			КонецЕсли;
		Иначе
			Предупреждение("Не указано откуда пришел клиент.");
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	//+/------------------------
КонецПроцедуры          

//======================================================================
//текИмя - имя принтера из списка доступных в данной сессии.
//в спсПринтеровЧеков имена или части имен принтеров на которых разрешена печать чеков
Функция НайтиПринтерВСпискеПринтеровЧеков(текИмя)
	Нашли = 0;
	Если спсПринтеровЧеков.РазмерСписка() <> 0 Тогда
		Для сч = 1 По спсПринтеровЧеков.РазмерСписка() Цикл
			выбПринтер = спсПринтеровЧеков.ПолучитьЗначение(сч);
			Если Найти(ВРЕГ(текИмя),ВРЕГ(выбПринтер)) <> 0 Тогда
				Нашли = 1;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Возврат Нашли;
КонецФункции // НайтиПринтерВСпискеПринтеровЧеков(текИмя)

Процедура ПечатьА7()
	выбПринтер = "";
	//имяПринтера = "Microsoft Print to PDF";
	спсПринтеров = Сервис.ПолучитьСписокПринтеров();
	Если спсПринтеров.РазмерСписка() <> 0 Тогда
		Для сч = 1 По спсПринтеров.РазмерСписка() Цикл
			текИмя = спсПринтеров.ПолучитьЗначение(сч);
			Нашли = НайтиПринтерВСпискеПринтеровЧеков(текИмя);
			Если Нашли <> 0 Тогда
				выбПринтер = текИмя;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Если выбПринтер = "" Тогда
		Предупреждение("Нет доступных для печать чека принтеров.");
		Возврат;
	КонецЕсли;
	
	ЗаписьЖурналаРегистрации(Шаблон("Печать A7 (чек) документа. права: [названиеНабораПрав()]"),"печать",,ТекущийДокумент());
	
	Таб = СоздатьОбъект("Таблица");  	
	ВП = Валюта;  
	КурсПечати = Курс;                     
	ДатаКурса = Дата_Курса;
	Если ПустоеЗначение(Контрагент) = 0 Тогда
		Если Контрагент.ВидКонтрагента <> Перечисление.ВидыКонтрагентов.Нерезидент Тогда
			Если ТипУчета > 0 Тогда
				ВП = Гривня;  
				КурсПечати = глКурсДляВалюты(ВП,ДатаДок);                     
				ДатаКурса = ДатаДок;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;	
	
	ПечФорма = "НакладнаяА7";
	Язык = глЯзык(ПечФорма); 	
	
	Таб.ИсходнаяТаблица("НакладнаяА7");
	глУстПропись(Валюта,Язык);
	
	Фирма.ИспользоватьДату(ДатаДок,1);
	_Фирма = СокрЛП(Константа.ФирмаДляЧека.ОфициальноеНаименование.Получить(ДатаДок));
	Таб.ВывестиСекцию("Шапка"); 
	
	Таб.ВывестиСекцию("Секция_7"); 

	Ном = 1;
	ВСоставе = 0;  ИтВес=0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл                
		Если Набор.Выбран()=1 Тогда
			Если ПустоеЗначение(ВСоставе)=1 Тогда
				Таб.ВывестиСекцию("ВСоставе");
				ВСоставе=Набор;
			ИначеЕсли ВСоставе<>Набор Тогда
				Таб.ВывестиСекцию("ВСоставе");
				ВСоставе=Набор;
			КонецЕсли;
		Иначе
			Если ПустоеЗначение(ВСоставе)=0 Тогда
				ВСоставе=0;
			КонецЕсли;
		КонецЕсли;      
		ИтВес=ИтВес+Товар.вес*Количество;
		ПечЦена			 = глФРМ(глПересчет(ЦенаБезНДС,Валюта,Курс,ВП,ДатаДок),ВП,0);
		ПечЦенаСоСкидкой = глФРМ(глПересчет(ЦенаСоСкидкой,Валюта,Курс,ВП,ДатаДок),ВП,0);
		ПечСумма		 = глФРМ(глПересчет(СуммаСНДС,Валюта,Курс,ВП,ДатаДок),ВП,0);
		Таб.ВывестиСекцию("Строка");
		Ном = Ном+1;
	КонецЦикла;
	ПечБезНДС = глФРМ(глПересчет(Итог("СуммаБезНДС"),Валюта,Курс,ВП,ДатаДок),ВП,0);
	ПечНДС = глФРМ(глПересчет(Итог("СуммаСНДС") - Итог("СуммаБезНДС"),Валюта,Курс,ВП,ДатаДок),ВП,0);
	ПечСНДС = глФРМ(глПересчет(Итог("СуммаСНДС"),Валюта,Курс,ВП,ДатаДок),ВП,0);	
	ПечНДСПропись = " "+Формат(глПересчет(Итог("СуммаСНДС") - Итог("СуммаБезНДС"),Валюта,Курс,ВП,ДатаДок),"Ч12.2")+" "+ВП.Кратко;
	ПечСНДСПропись = глСуммаПрописью(глПересчет(Итог("СуммаСНДС"),Валюта,Курс,ВП,ДатаДок),ВП);  
	Таб.ВывестиСекцию("Дно"); 
	
	
	Если (ВРЕГ(ИмяПользователя()) = врег("инна")) Тогда
		Таб.ПараметрыСтраницы(1,,,0,0,5,5,5,5,1,,"Datecs EP-300");   
		Если Константа.ПоказыватьЧек = Да Тогда
			Таб.Показать("ПЕЧАТЬ: Расходная накладная",""); 
		Иначе
			Таб.Напечатать(0);
		КонецЕсли;
		
	ИначеЕсли (ВРЕГ(ИмяПользователя()) = врег("таня")) Тогда
		
		Таб.ПараметрыСтраницы(1,,,0,0,5,5,5,5,1);   
		Таб.Напечатать(1);
	Иначе
		Таб.ПараметрыСтраницы(1,,,0,0,5,5,5,5,1,,выбПринтер);  
		Таб.Показать("Печать чека на принтер " + выбПринтер);
		Таб.Напечатать(1);
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ВывестиСтрокуТовара(Таб,допТорг,старыйТовар,КвоБаз,ном,КвоВДок,ЕдВДок,текПартияПост,текСкладскоеМесто)
	
	Если ПустоеЗначение(текСкладскоеМесто) = 1 Тогда
		складскоеМестоСтрокой = "";
	Иначе
		складскоеМестоСтрокой = "место: "+ текСкладскоеМесто + " (" + текСкладскоеМесто.Зона + ")";
	КонецЕсли;
	
	тхтПредупреждениеОбОстатке = "";
	ЕдИзмМесто = допТорг.ПолучитьЕдиницуИзмеренияТовараПоКлассификатору(старыйТовар,гл_ПолучитьЗначениеДопКонстанты("упаковка"));
	ЕдИзмШтука = допТорг.ПолучитьЕдиницуИзмеренияТовараПоКлассификатору(старыйТовар,гл_ПолучитьЗначениеДопКонстанты("штука"));
	ЕдИзмБазовая = допТорг.ПолучитьЕдиницуИзмеренияТовараПоКлассификатору(старыйТовар,старыйТовар.БазоваяЕдиница);
	ном = ном + 1;	ОстатокСтрокой = ""; тхтМест = "";  тхтКоличествоСклад = "";
	Если ЕдИзмМесто <> 0 Тогда
		ВМестах = Окр(КвоБаз/ЕдИзмМесто.Коэффициент,3);
		Разница = ВМестах-Цел(ВМестах);
		Если ВМестах < 1 Тогда
			тхтМест = "" + КвоБаз +  " " + ЕдИзмБазовая;
		Иначе
			тхтМест = "" + Цел(ВМестах) + " " + ЕдИзмМесто + ?(Разница = 0, "", " + "+(КвоБаз - Цел(ВМестах)*ЕдИзмМесто.Коэффициент) + " " + ЕдИзмБазовая);
		КонецЕсли;
		тхтКоличествоСклад = "" + КвоБаз +  " " + ЕдИзмБазовая;
		ОстатокСтрокой = ОстаткиСтрокой(ОстаткиТоваров,старыйТовар,ЕдИзмБазовая,ЕдИзмМесто,ЕдИзмШтука,текСкладскоеМесто);
	Иначе //если у товара нет единицы измерения = Константа.Упаковка. Выводим в той единице, которая в документе
		ВМестах = КвоВДок;
		тхтМест = "" + ВМестах + " " + ЕдВДок;
		тхтКоличествоСклад = "" + КвоВДок +  " " + ЕдВДок;
		ОстатокСтрокой = ОстаткиСтрокой(ОстаткиТоваров,старыйТовар,ЕдВДок,ЕдИзмМесто,ЕдИзмШтука,текСкладскоеМесто);
		Если ЕдВДок = ЕдИзмШтука Тогда //проверяем на наличие на складе 0,5 штки
			ОстатокНаСкладе = ОстатокТовара(ОстаткиТоваров,Склад,старыйТовар,ЕдИзмШтука);
			Если Проведен() = 1 Тогда
				//ОстатокНаСкладе = ОстатокНаСкладе; //пытаемся для склада угадать количество на складе реальное
				ОстатокНаСкладе = ОстатокНаСкладе + КвоВДок; //пытаемся для склада угадать количество на складе реальное
			КонецЕсли;
			
			Если (ОстатокНаСкладе - Цел(ОстатокНаСкладе) >= КвоВДок - Цел(КвоВДок)) и (КвоВДок - Цел(КвоВДок) <> 0) Тогда
				тхтПредупреждениеОбОстатке = "[выдать 0,5 ( есть на складе )]";
			КонецЕсли;
			
			//-ralex, 06-12-22 15:15
			//Если ОстатокНаСкладе - Цел(ОстатокНаСкладе) >= КвоВДок - Цел(КвоВДок) Тогда
			//	тхтПредупреждениеОбОстатке = "[выдать 0,5 ( есть на складе )]";
			//КонецЕсли;
			//-/------------------------
		КонецЕсли;
	КонецЕсли;
	
	Если ПустоеЗначение(текПартияПост) = 1 Тогда
		стрСтрока = "Строка_Склад";
		тхтПартия = "";
	Иначе
		стрСтрока = "Строка_СкладПартия";
		тхтПартия = "партия: " + текПартияПост;
	КонецЕсли;
	
	Если НЕ(старыйТовар = "") Тогда
		высота1 = Таб.ВысотаТаблицы();
		Таб.ВывестиСекцию(стрСтрока);
		высота2 = Таб.ВысотаТаблицы();
		Если старыйТовар.Распродажа.Получить(ДатаДок) = 1 Тогда
			текСекция = таб.Область(высота1 + 1,1,высота2,таб.ШиринаТаблицы());
			текСекция.ЦветФона(14342874);
		КонецЕсли;
	КонецЕсли;
	
	Если флСОстатками = 1 Тогда
		Таб.ВывестиСекцию("Остаток");
	КонецЕсли;
КонецПроцедуры // ВывестиСтрокуТовара(Таб,старыйТовар,КвоБаз,ном);

//======================================================================
//*ralex, 03-03-21 22:21
//Функция ЕстьДверь()
//	спр = СоздатьОбъект("Справочник.Категории");
//	Если спр.НайтиПоНаименованию("Двери") = 0 Тогда
//		Возврат 0;
//	КонецЕсли;
//	Дверь = спр.ТекущийЭлемент();
//	
//	Если Дверь.ЭтоГруппа() = 0 Тогда
//		Возврат 0;
//	КонецЕсли;
//	
//	спрКатегории = СоздатьОбъект("Справочник.КатегорииТоваров");
//	ВыбратьСтроки();
//	Пока ПолучитьСтроку() = 1 Цикл
//		спрКатегории.ИспользоватьВладельца(Товар);
//		спрКатегории.ВыбратьЭлементы();
//		Пока спрКатегории.ПолучитьЭлемент() = 1 Цикл
//			Если спрКатегории.Категория.ПринадлежитГруппе(Дверь) = 1 Тогда
//				Возврат 1;
//			КонецЕсли;
//		КонецЦикла;
//	КонецЦикла;
//	Возврат 0;
//КонецФункции // ЕстьДверь
// -------- заменено на:
Функция ЕстьДверь()
	допТорг = СоздатьОбъект("дополненияТорговля");
	флДверь = 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		флДверь = допТорг.ПолучитьПараметрГруппыСправочника(Товар,"флЭтоГруппаДвери",ДатаДок);
		Если флДверь = 1 Тогда
			Возврат флДверь;
		КонецЕсли;
	КонецЦикла;
	Возврат флДверь;
КонецФункции // ЕстьДверь
//*/ralex, 03-03-21 22:21

//======================================================================
Функция ПолучитьДанныеДляЗаполненияПечФормы(ВП,ИтогСумма_БНДС,ИтогСуммаРозница = 0)
	тхтБонусы = ""; ПечСкидка = ""; тхтСкидка = "";
	
	Если Итог("СписаноБонусов") <> 0 Тогда
		ОстатокБонусов = ПолучитьОстатокБонусов(Контекст);
		тхтБонусы = "Списано бонусов (учтено в скидке): " + Итог("СписаноБонусов") + ".       Остаток бонусов: " + (ОстатокБонусов - Итог("СписаноБонусов"));
	КонецЕсли;
	
	Если ИтогСуммаРозница <> 0 Тогда
		итогоСуммаБезСкидки = ИтогСуммаРозница;
		ИтогСуммаСкидки = ИтогСуммаРозница - ИтогСумма_БНДС;
	Иначе
		итогоСуммаБезСкидки = Итог("СуммаБезСкидки");
		ИтогСуммаСкидки = Итог("СуммаСкидки");
	КонецЕсли;
	печБезСкидки = глФРМ(глПересчет(итогоСуммаБезСкидки,Валюта,Курс,ВП,ДатаДок),ВП,0);
	ПечБезНДС = глФРМ(глПересчет(ИтогСумма_БНДС,Валюта,Курс,ВП,ДатаДок),ВП,0);
	ПечСкидкаДоставка = глФРМ(глПересчет(Итог("СуммаСкидкиСамовывоз"),Валюта,Курс,ВП,ДатаДок),ВП,0);
	тхтСкидкаДоставка = ?(Константа.ФормыНаУкраинском = Да,"Знижка самовивіз:","Скидка самовывоз:");
	
	Если ИтогСуммаСкидки + Итог("СписаноБонусов") <>0 Тогда
		итогСкидка = ИтогСуммаСкидки + Итог("СписаноБонусов");
		ПечСкидка = глФРМ(глПересчет(итогСкидка,Валюта,Курс,ВП,ДатаДок),ВП,0);
		//посчитаем процент скидки
		итогоСуммаБезНДС = Итог("СуммаБезНДС");
		//*ralex, 26-06-22 00:25
		//процент = Окр((итогоСуммаБезСкидки - итогоСуммаБезНДС - ИтогоСуммаСкидкиСамовывоз) * 100 / (итогоСуммаБезСкидки - ИтогоСуммаСкидкиСамовывоз),2);
		// -------- заменено на:
		//*ralex, 29-06-22 11:00
		//процент = Окр(итогоСуммаБезСкидки/итогСкидка ,2);
		процент = Окр(итогСкидка * 100/итогоСуммаБезСкидки ,0);	
		//*/------------------------
		тхтСкидка = ?(Константа.ФормыНаУкраинском = Да,"Знижка","Скидка") + " (" + процент + "%):";
	КонецЕсли;
	
	структураДанных = СоздатьОбъект("Структура");
	структураДанных.Вставить("тхтБонусы",тхтБонусы);
	структураДанных.Вставить("печБезСкидки",печБезСкидки);
	структураДанных.Вставить("ПечБезНДС",ПечБезНДС);
	структураДанных.Вставить("ПечСкидкаДоставка",ПечСкидкаДоставка);
	структураДанных.Вставить("тхтСкидкаДоставка",тхтСкидкаДоставка);
	структураДанных.Вставить("ПечСкидка",ПечСкидка);
	структураДанных.Вставить("тхтСкидка",тхтСкидка);
	
	Возврат структураДанных;
	
КонецФункции // ПолучитьДанныеДляЗаполненияПечФормы

//======================================================================
Процедура ОбъединитьЯчейкиЦеныПриОтсутствииСкидки(Таб,смещение = 0)
	Если Итог("СуммаСкидки") = 0 Тогда
		обл = Таб.область(Таб.ВысотаТаблицы()+смещение,7,Таб.ВысотаТаблицы()+смещение,8);
		обл.объединить();
	КонецЕсли;
КонецПроцедуры // ОбъединитьЯчейкиЦеныПриОтсутствииСкидки

Процедура ОбъединитьЯчейкиШапкиЦеныПриОтсутствииСкидки(Таб)
	Если Итог("СуммаСкидки") = 0 Тогда
		обл = Таб.область(Таб.ВысотаТаблицы(),7,Таб.ВысотаТаблицы(),8);
		обл.объединить();
		обл.Текст = "Цена без НДС";
		обл = Таб.область(Таб.ВысотаТаблицы(),9,Таб.ВысотаТаблицы(),9);
		обл.Текст = "Сумма без НДС";
	КонецЕсли;
КонецПроцедуры // ОбъединитьЯчейкиЦеныПриОтсутствииСкидки

//======================================================================
Процедура ПечатьЭкземпляраНаСклад(Таб,ВП,тхтНеликвид,ПечШтрихКод,листКомплектации = 0)
	Если листКомплектации = 0 Тогда
		номерЭкземпляра = 1;
		Таб.ВывестиСекцию("Секция_7_Склад"); 
	КонецЕсли;
	Ном = 1;
	ВСоставе = 0;  ИтВес=0;
	ИтогСумма_БНДС = 0;
	ИтогСумма_НДС = 0;
	ИтогСумма_СДНС = 0;
	
	ОстаткиТоваров=СоздатьОбъект("Регистр.ОстаткиТоваров"); //для склада инфо об остатках товара по складам
	допТорг = СоздатьОбъект("дополненияТорговля");
	тз = СоздатьОбъект("ТаблицаЗначений");
	
	тзГруппТоваровСИнструкциями  = СоздатьОбъект("ТаблицаЗначений");
	тзГруппТоваровСИнструкциями.НоваяКолонка("описаниеДляРНДляСклада");
	тзГруппТоваровСИнструкциями.НоваяКолонка("ссылкаНаСайтДляТовара");
	тзГруппТоваровСИнструкциями.НоваяКолонка("Счетчик","Число",1,0);
	
	тхтПроверкаПартий = "";
	ВыгрузитьТабличнуюЧасть(тз);
	тз.Сортировать("Товар");
	тз.НоваяКолонка("Индекс","Строка");
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		тз.Индекс = ЗначениеВСтроку(тз.Товар) + ЗначениеВСтроку(тз.ПартияПост)+ ЗначениеВСтроку(тз.складскоеМесто);
		описаниеДляРНДляСклада = дополненияТорговля. ПолучитьПараметрГруппыСправочника(тз.Товар,"описаниеДляРНДляСклада");
		ссылкаНаТовар = СокрЛП(тз.Товар.url);
		Если НЕ((ПустоеЗначение(описаниеДляРНДляСклада) = 1) и (ПустаяСтрока(ссылкаНаТовар) = 1)) Тогда
			тзГруппТоваровСИнструкциями.НоваяСтрока();
			тзГруппТоваровСИнструкциями.описаниеДляРНДляСклада = описаниеДляРНДляСклада;
			тзГруппТоваровСИнструкциями.ссылкаНаСайтДляТовара = ссылкаНаТовар;
			тзГруппТоваровСИнструкциями.Счетчик = 1;
		КонецЕсли;
	КонецЦикла;
		
	старыйИндекс = ""; старыйТовар = ""; стараяПартия = ""; ном = 0; староеСкладскоеМесто = "";	КвоБаз = 0;//количество будем считать в базовой
	текКво = 0; текЕдИзм = 0; КвоБаз = 0; //количество будем считать в базовой
	
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		Если старыйИндекс <> тз.Индекс Тогда
			Если старыйИндекс <> "" Тогда
				ВывестиСтрокуТовара(Таб,допТорг,старыйТовар,КвоБаз,ном,текКво,текЕдИзм,стараяПартия,староеСкладскоеМесто);
			КонецЕсли;
			
			старыйТовар = тз.Товар;
			старыйИндекс = тз.Индекс;
			стараяПартия = тз.ПартияПост;
			староеСкладскоеМесто = тз.складскоеМесто;
			Если ПустоеЗначение(стараяПартия) = 0 Тогда
				тхтПроверкаПартий = "Увага! Перевірте співпадіння партії товару вказаній на упаковці!";
			КонецЕсли;
			текКво = 0; текЕдИзм = 0; КвоБаз = 0; //количество будем считать в базовой
		КонецЕсли;
		текКво = тз.Количество; текЕдИзм = тз.Единица;
		ИтВес=ИтВес + тз.Товар.вес * тз.Количество * тз.Коэффициент;
		КвоБаз = КвоБаз  + тз.Количество * тз.Единица.Коэффициент;		
	КонецЦикла;
	
	//последний товар
	Если тз.КоличествоСтрок() > 0 Тогда
		ВывестиСтрокуТовара(Таб,допТорг,старыйТовар,КвоБаз,ном,текКво,текЕдИзм,стараяПартия,староеСкладскоеМесто);
	КонецЕсли;
	
	Если листКомплектации = 0 Тогда
		тхтСкидка = "";
		Если КатегорияЦен = Константа.РозничнаяКатегорияЦен Тогда
			итогоСуммаБезНДС = Итог("СуммаБезНДС");
			итогоСуммаБезСкидки = Итог("СуммаБезСкидки");
			печБезСкидки = глФРМ(глПересчет(итогоСуммаБезСкидки,Валюта,Курс,ВП,ДатаДок),ВП,0);
			ПечБезНДС = глФРМ(глПересчет(итогоСуммаБезНДС,Валюта,Курс,ВП,ДатаДок),ВП,0);
			Если Итог("СуммаСкидки")<>0 Тогда
				ПечСкидка = глФРМ(глПересчет(Итог("СуммаСкидки"),Валюта,Курс,ВП,ДатаДок),ВП,0);
				//посчитаем процент скидки
				процент = Окр((итогоСуммаБезСкидки - итогоСуммаБезНДС) * 100 / итогоСуммаБезСкидки,2);
				тхтСкидка = ?(Константа.ФормыНаУкраинском = Да,"Скидка","Скидка") + " (" + процент + "%):";
				Таб.ВывестиСекцию("Дно_Склад_Розница");   
			Иначе
				Таб.ВывестиСекцию("Дно_Склад_Розница>"); 
			КонецЕсли;
		Иначе
			Таб.ВывестиСекцию("Дно_Склад"); 
		КонецЕсли;
		
		Таб.ВывестиСекцию("Сборщик"); 
		
		//выводим инструкции
		тзСсылки = СоздатьОбъект("ТаблицаЗначений");
		тзГруппТоваровСИнструкциями.Выгрузить(тзСсылки,,,"описаниеДляРНДляСклада,Счетчик");
		тзСсылки.Свернуть("описаниеДляРНДляСклада","Счетчик");
		тзСсылки.ВыбратьСтроки();
		Пока тзСсылки.ПолучитьСтроку() = 1 Цикл
			Если тзСсылки.описаниеДляРНДляСклада <> 0 Тогда
				тхтИнструкция = "    " + СокрЛП(тзСсылки.описаниеДляРНДляСклада.ТекстШаблона);
				Таб.ВывестиСекцию("Инструкция");
			КонецЕсли;
		КонецЦикла;
		
		//выводим ссылки на сайт
		тзСсылки = СоздатьОбъект("ТаблицаЗначений");
		тзГруппТоваровСИнструкциями.Выгрузить(тзСсылки,,,"ссылкаНаСайтДляТовара,Счетчик");
		тзСсылки.Свернуть("ссылкаНаСайтДляТовара","Счетчик");
		Если тзСсылки.Итог("Счетчик") <> 0 Тогда
			тхтЗаголовокQRКоды = " Посилання на товари";
			Таб.ВывестиСекцию("ЗаголовокQRКоды");
			счКодов = 0;
			тзСсылки.ВыбратьСтроки();
			Пока тзСсылки.ПолучитьСтроку() = 1 Цикл
				qrCodeИнструкция = "";
				Если ПустоеЗначение(тзСсылки.ссылкаНаСайтДляТовара) = 0 Тогда
					qrCodeИнструкция = СокрЛП(тзСсылки.ссылкаНаСайтДляТовара);
					счКодов = счКодов + 1;
					счКодов = ?(счКодов%5 = 0,1,счКодов);
					Если счКодов = 1 Тогда
						Таб.ВывестиСекцию("QRКоды|шк"+счКодов);
					Иначе
						Таб.ПрисоединитьСекцию("QRКоды|шк"+счКодов);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;	
		
		
		//-ralex, 27-11-23 18:30
		//флДверь = ЕстьДверь();
		//
		//Если флДверь = 0 Тогда
		//	тхтПодвал = "Увага! Перевіряйте матеріал до порізки. Різаний матеріал поверненню і обміну не підлягає. " + РазделительСтрок + 
		//	"Не зберігайте матеріал під прямим сонячним промінням!";
		//Иначе
		//	тхтПодвал = "Уважаемый клиент! Проверьте целостность упаковки и целостность стекла. Сохраняйте 
		//	|паспорт-вкладыш к двери до окончания гарантийного срока. Без паспорта претензии к качеству двери не принимаются.";
		//КонецЕсли;
		//Если флДверь = 1 Тогда
		//	Таб.ВывестиСекцию("Дно4_Двери" + ?(Склад.флСкладЗаказной = 1,"_Заказ","")); 
		//Иначе
		//	Таб.ВывестиСекцию("Дно4"); 
		//	Если Склад.флСкладЗаказной = 1 Тогда
		//		Таб.ВывестиСекцию("Дно4_Прочее_Заказ");
		//	КонецЕсли;
		//КонецЕсли;
		//-/------------------------
		//+ralex, 01-02-23 22:37
		Если листКомплектации = 0 Тогда
			текРаспечатанСклад = дополненияТорговля.ПолучитьСостояниеДокумента(Контекст,"распечатанСклад"); 
			дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"распечатанСклад",текРаспечатанСклад + 1);
		КонецЕсли;
	КонецЕсли;
	//+/------------------------
КонецПроцедуры // ПечатьЭкземпляраНаСклад

//======================================================================
Процедура ПечатьЭкз2(Таб,ВП,ЭтоОпт,ПечФорма,тхтНеликвид,ПечШтрихКод)
	этоРозница1Этаж = гл_ПолучитьЗначениеДопКонстанты("Розница1Этаж");
	этоРозница2Этаж = гл_ПолучитьЗначениеДопКонстанты("Розница2Этаж");
	текКатегорияЦен = ?(Контрагент.Выбран() = 1,Контрагент.КатегорияЦен,КатегорияЦен);

	ИтогСумма_БНДС = 0;
	ИтогСумма_НДС = 0;
	ИтогСумма_СДНС = 0;
	ИтогСуммаРозница = 0;
	
	Если (контрагент.печатьДолг=1) и (КатегорияЦен <> Константа.РозничнаяКатегорияЦен) тогда
		ТекущийДолг = глДолгКонтрагента(Контекст,-1,Упр, ,Контрагент,,,1) + глДолгКонтрагента(Контекст,1,Упр, ,Контрагент,,,1);
		ДолгТек="Заборгованість без поточного замовлення: "+ТекущийДолг+" грн.";
		ДолгЦифрами = ?(ТекущийДолг = 0,"",""+ТекущийДолг + " грн.");
	Иначе
		ДолгЦифрами = "";
		ДолгТек="";
	КонецЕсли;	
	
	номерЭкземпляра = 2;
	таб.новаястраница();
	
	Если Найти(ПечФорма,"Дубликат") = 0 Тогда
		Таб.ИсходнаяТаблица("НакладнаяУ2");
	Иначе
		Таб.ИсходнаяТаблица("НакладнаяУ2_Дубликат");
	КонецЕсли;
	
	Фирма.ИспользоватьДату(ДатаДок,1); 
	Если вывркз=1 Тогда
		Если (Фирма.менятьПоставщика=1) И (Контрагент.печатьФОП=1) тогда
			Таб.ВывестиСекцию("Секция_8"); 
		Иначе	
			Таб.ВывестиСекцию("Шапка"); 
		КонецЕсли;	
		тхтТекущаяДата = "";
		Таб.ВывестиСекцию("Секция_6"); 
	КонецЕсли;
	тхтШапкаНомерДок = "";
	Если КатегорияЦен = Константа.РозничнаяКатегорияЦен Тогда
		тхтШапкаНомерДок = "Видаткова накладна " + ?(ВидОперации=1," (повернення)","") + " № " + НомерДок;
	КонецЕсли;
	
	контрагентКод = Контрагент.Код;
	Если Контрагент.типВзаиморасчетов = Перечисление.типыВзаиморасчетовСКлиентами.отПоставкиДоПоставки Тогда
		Таб.ВывестиСекцию("Шапка2");
	Иначе
		Таб.ВывестиСекцию("Шапка2<");
		Таб.ВывестиСекцию("Шапка2>");
	КонецЕсли;
	
	Если (текКатегорияЦен = Константа.крупнооптоваяЦена) или (КатегорияЦен = Константа.РозничнаяКатегорияЦен) Тогда
		//корректируем шапку
		ОбъединитьЯчейкиШапкиЦеныПриОтсутствииСкидки(Таб);
		
		допТорг = СоздатьОбъект("дополненияТорговля");
		тз = СоздатьОбъект("ТаблицаЗначений");
		тхтПроверкаПартий = "";
		ВыгрузитьТабличнуюЧасть(тз);
		тз.Сортировать("Товар");
		тз.НоваяКолонка("Индекс","Строка");
		тз.ВыбратьСтроки();
		Пока тз.ПолучитьСтроку() = 1 Цикл
			тз.Индекс = ЗначениеВСтроку(тз.Товар) + ЗначениеВСтроку(тз.ПартияПост);
		КонецЦикла;
		
		тзГруппТоваровСИнструкциями  = СоздатьОбъект("ТаблицаЗначений");
		тзГруппТоваровСИнструкциями.НоваяКолонка("описаниеДляРН");
		тзГруппТоваровСИнструкциями.НоваяКолонка("ссылкаНаСайтДляГруппы");
		тзГруппТоваровСИнструкциями.НоваяКолонка("Счетчик","Число",1,0);
		
		Ном = 1;
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл   
			ссылкаНаСайтДляГруппы = ""; описаниеДляРН = "";
			описаниеДляРН = дополненияТорговля. ПолучитьПараметрГруппыСправочника(Товар,"описаниеДляРН");
			ссылкаНаСайтДляГруппы = дополненияТорговля. ПолучитьПараметрГруппыСправочника(Товар,"ссылкаНаСайтДляГруппы");
			Если (ПустоеЗначение(описаниеДляРН) = 0) или (ПустоеЗначение(ссылкаНаСайтДляГруппы) = 0)  Тогда
				тзГруппТоваровСИнструкциями.НоваяСтрока();
				тзГруппТоваровСИнструкциями.описаниеДляРН = описаниеДляРН;
				тзГруппТоваровСИнструкциями.ссылкаНаСайтДляГруппы = ссылкаНаСайтДляГруппы;
				тзГруппТоваровСИнструкциями.Счетчик = 1;
			КонецЕсли;
						
			Цена_БНДС = Окр(СуммаБезСкидки/Количество,3);
			Цена_СоСкидкой = Окр(СуммаБезНДС/Количество,3);
			Цена_СНДС = Цена_БНДС; 
			гл_ПолучитьЦенуТовараДляПечати(Контекст,Товар,Цена_СНДС,Цена_БНДС);//с НДС
			
			Если тз.ЦенаСНДС <> Цена_СНДС Тогда
				Пересчитан = 1;
			КонецЕсли;
			
			Сумма_соСкидкой = Цена_СоСкидкой * Количество; //безНДС
			ИтогСумма_БНДС = ИтогСумма_БНДС + Сумма_соСкидкой - СписаноБонусов;
			ПечЦена = глФРМ(глПересчет(Цена_БНДС,Валюта,Курс,ВП,ДатаДок),ВП,0);
			ПечЦенаСоСкидкой = глФРМ(глПересчет(Цена_СоСкидкой,Валюта,Курс,ВП,ДатаДок),ВП,0);
			ПечСумма = глФРМ(глПересчет(Сумма_соСкидкой,Валюта,Курс,ВП,ДатаДок),ВП,0);
			тхтЕдиница = Единица;
			тхтКоличество = Количество;
			Если ПустоеЗначение(ПартияПост) = 1 Тогда
				Таб.ВывестиСекцию("Строка");
				ОбъединитьЯчейкиЦеныПриОтсутствииСкидки(Таб);
			Иначе
				тхтПартия = "" + ПартияПост;
				Таб.ВывестиСекцию("Строка_Партия");
				ОбъединитьЯчейкиЦеныПриОтсутствииСкидки(Таб,-1);
			КонецЕсли;
			
			//вторая цена (за м2)
			едИзмМ2 = гл_ВернутьЕдиницуИзмеренияТовара(Константа.едИзмМетр2,Товар,0);
			едИзмУпаковка = гл_ВернутьЕдиницуИзмеренияТовара(Константа.едИзмУпаковка,Товар,0);
			Если ПустоеЗначение(едИзмМ2) = 0 Тогда
				ПечЦенаМ2 = Окр(Цена_БНДС /Единица.Коэффициент * едИзмМ2.коэффициент,3); 
				ПечЦенаМ2СоСкидкой = Окр(Цена_СоСкидкой /Единица.Коэффициент * едИзмМ2.коэффициент,3); 
				печКвоМ2 = Окр(Количество * Единица.Коэффициент / едИзмМ2.коэффициент,2); 
				Таб.ВывестиСекцию("стр_втораяЦена");
				ОбъединитьЯчейкиЦеныПриОтсутствииСкидки(Таб);
				
			ИначеЕсли Единица.Единица = Константа.едИзмУпаковка Тогда
				//попробуем найти цену за штуку (за базовую единицу т.к. штука у нас не выделена)
				едИзмМ2 = Товар.БазоваяЕдиница;
				ПечЦенаМ2 = Окр(Цена_БНДС /Единица.Коэффициент,3); 
				ПечЦенаМ2СоСкидкой = Окр(Цена_СоСкидкой /Единица.Коэффициент,3); 
				Таб.ВывестиСекцию("стр_втораяЦена");
				ОбъединитьЯчейкиЦеныПриОтсутствииСкидки(Таб);
			КонецЕсли;
			
			//третья единица- упаковка
			Если  (Единица.Единица <> Константа.едИзмУпаковка) и (ПустоеЗначение(едИзмУпаковка) = 0) Тогда //т.е. упаковку не выводили
				едИзмМ2 = едИзмУпаковка;
				ПечЦенаМ2 = Окр(Цена_БНДС /Единица.Коэффициент * едИзмУпаковка.коэффициент,3); 
				ПечЦенаМ2СоСкидкой = Окр(Цена_СоСкидкой /Единица.Коэффициент * едИзмУпаковка.коэффициент,3); 
				печКвоМ2 = Окр(Количество * Единица.Коэффициент / едИзмУпаковка.коэффициент,2); 
				Таб.ВывестиСекцию("стр_втораяЦена");
				ОбъединитьЯчейкиЦеныПриОтсутствииСкидки(Таб);
			КонецЕсли;
			
			Ном = Ном+1;
		КонецЦикла; 
		
		//нижняя рамка в последней строке
		Обл = Таб.Область(Таб.ВысотаТаблицы(),1,Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы());
		Обл.РамкаСнизу(3);
		
		//выводим ДНО
		структураДанных = ПолучитьДанныеДляЗаполненияПечФормы(ВП,ИтогСумма_БНДС);
		тхтБонусы = структураДанных.тхтБонусы;
		печБезСкидки = структураДанных.печБезСкидки;
		ПечБезНДС = структураДанных.ПечБезНДС;
		ПечСкидкаДоставка = структураДанных.ПечСкидкаДоставка;
		тхтСкидкаДоставка = структураДанных.тхтСкидкаДоставка;
		ПечСкидка = структураДанных.ПечСкидка;
		тхтСкидка = структураДанных.тхтСкидка;
		
		Если Итог("СуммаСкидки") + Итог("СписаноБонусов") <>0 Тогда
			Таб.ВывестиСекцию("ДноВсегоБезСкидки"); 
			Таб.ВывестиСекцию("ДноСкидка"); 
			Если Итог("СуммаСкидкиСамовывоз") <> 0 Тогда
				Таб.ВывестиСекцию("ДноСкидкаДоставка"); 
			КонецЕсли;
		ИначеЕсли Итог("СуммаСкидкиСамовывоз") <> 0 Тогда
			Таб.ВывестиСекцию("ДноВсегоБезСкидки"); 
			Таб.ВывестиСекцию("ДноСкидкаДоставка"); 
		КонецЕсли;
		
		Таб.ВывестиСекцию("ДноВсего"); 
		
	Иначе	
		тз = СоздатьОбъект("ТаблицаЗначений");
		тхтПроверкаПартий = "";
		ВыгрузитьТабличнуюЧасть(тз);
		тз.Сортировать("Товар");
		тз.НоваяКолонка("Индекс","Строка");
		тз.ВыбратьСтроки();
		Пока тз.ПолучитьСтроку() = 1 Цикл
			тз.Индекс = ЗначениеВСтроку(тз.Товар) + ЗначениеВСтроку(тз.ПартияПост);
		КонецЦикла;
		
		тзГруппТоваровСИнструкциями  = СоздатьОбъект("ТаблицаЗначений");
		тзГруппТоваровСИнструкциями.НоваяКолонка("описаниеДляРН");
		тзГруппТоваровСИнструкциями.НоваяКолонка("ссылкаНаСайтДляГруппы");
		тзГруппТоваровСИнструкциями.НоваяКолонка("Счетчик","Число",1,0);
		
		Ном = 1;
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл   
			ссылкаНаСайтДляГруппы = ""; описаниеДляРН = "";
			описаниеДляРН = дополненияТорговля. ПолучитьПараметрГруппыСправочника(Товар,"описаниеДляРН");
			ссылкаНаСайтДляГруппы = дополненияТорговля. ПолучитьПараметрГруппыСправочника(Товар,"ссылкаНаСайтДляГруппы");
			Если (ПустоеЗначение(описаниеДляРН) = 0) или (ПустоеЗначение(ссылкаНаСайтДляГруппы) = 0)  Тогда
				тзГруппТоваровСИнструкциями.НоваяСтрока();
				тзГруппТоваровСИнструкциями.описаниеДляРН = описаниеДляРН;
				тзГруппТоваровСИнструкциями.ссылкаНаСайтДляГруппы = ссылкаНаСайтДляГруппы;
			КонецЕсли;
			
			//получаем цену по розничной цене как цену без скидки
			Цена_Розн=0;
			глПолучитьЦенуТовара(Константа.РозничнаяКатегорияЦен,Товар,Единица,ДатаДок,Цена_Розн,Валюта); 	
			Если Валюта = Гривня Тогда
				Цена_Розн = Окр(Цена_Розн,Константа.КоэффОкрГрнЦены,1);
			КонецЕсли;
			
			//Цена_БНДС = Окр(СуммаБезСкидки/Количество,3);
			Цена_СоСкидкой = Окр(СуммаБезНДС/Количество,3);
			Цена_СНДС = 0; Цена_БНДС = 0;
			гл_ПолучитьЦенуТовараДляПечати(Контекст,Товар,Цена_СНДС,Цена_БНДС);//с НДС
			Цена_БНДС = Цена_Розн; 
			
			Если тз.ЦенаСНДС <> Цена_СНДС Тогда
				Пересчитан = 1;
			КонецЕсли;
			Сумма_соСкидкой = Цена_СоСкидкой * Количество; //безНДС
			ИтогСумма_БНДС = ИтогСумма_БНДС + Сумма_соСкидкой - СписаноБонусов;
			ИтогСуммаРозница =  ИтогСуммаРозница + Окр(Цена_Розн * Количество,2); //+ralex, 07-11-23 11:52
			ПечЦена = глФРМ(глПересчет(Цена_БНДС,Валюта,Курс,ВП,ДатаДок),ВП,0);
			ПечЦенаСоСкидкой = глФРМ(глПересчет(Цена_СоСкидкой,Валюта,Курс,ВП,ДатаДок),ВП,0);
			ПечСумма = глФРМ(глПересчет(Сумма_соСкидкой,Валюта,Курс,ВП,ДатаДок),ВП,0);
			тхтЕдиница = Единица;
			тхтКоличество = Количество;
			Если ПустоеЗначение(ПартияПост) = 1 Тогда
				Таб.ВывестиСекцию("Строка");
			Иначе
				тхтПартия = "" + ПартияПост;
				Таб.ВывестиСекцию("Строка_Партия");
			КонецЕсли;
			
			//вторая цена (за м2)
			едИзмМ2 = гл_ВернутьЕдиницуИзмеренияТовара(Константа.едИзмМетр2,Товар,0);
			едИзмУпаковка = гл_ВернутьЕдиницуИзмеренияТовара(Константа.едИзмУпаковка,Товар,0);
			Если ПустоеЗначение(едИзмМ2) = 0 Тогда
				ПечЦенаМ2 = Окр(Цена_БНДС /Единица.Коэффициент * едИзмМ2.коэффициент,3); 
				ПечЦенаМ2СоСкидкой = Окр(Цена_СоСкидкой /Единица.Коэффициент * едИзмМ2.коэффициент,3); 
				печКвоМ2 = Окр(Количество * Единица.Коэффициент / едИзмМ2.коэффициент,2); 
				Таб.ВывестиСекцию("стр_втораяЦена");
				
			ИначеЕсли Единица.Единица = Константа.едИзмУпаковка Тогда
				//попробуем найти цену за штуку (за базовую единицу т.к. штука у нас не выделена)
				едИзмМ2 = Товар.БазоваяЕдиница;
				ПечЦенаМ2 = Окр(Цена_БНДС /Единица.Коэффициент,3); 
				ПечЦенаМ2СоСкидкой = Окр(Цена_СоСкидкой /Единица.Коэффициент,3); 
				Таб.ВывестиСекцию("стр_втораяЦена");
			КонецЕсли;
			
			//третья единица- упаковка
			Если  (Единица.Единица <> Константа.едИзмУпаковка) и (ПустоеЗначение(едИзмУпаковка) = 0) Тогда //т.е. упаковку не выводили
				едИзмМ2 = едИзмУпаковка;
				ПечЦенаМ2 = Окр(Цена_БНДС /Единица.Коэффициент * едИзмУпаковка.коэффициент,3); 
				ПечЦенаМ2СоСкидкой = Окр(Цена_СоСкидкой /Единица.Коэффициент * едИзмУпаковка.коэффициент,3); 
				печКвоМ2 = Окр(Количество * Единица.Коэффициент / едИзмУпаковка.коэффициент,2); 
				Таб.ВывестиСекцию("стр_втораяЦена");
			КонецЕсли;
			
			Ном = Ном+1;
		КонецЦикла; 
		
		//нижняя рамка в последней строке
		Обл = Таб.Область(Таб.ВысотаТаблицы(),1,Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы());
		Обл.РамкаСнизу(3);
		
		//выводим ДНО
		структураДанных = ПолучитьДанныеДляЗаполненияПечФормы(ВП,ИтогСумма_БНДС,ИтогСуммаРозница);
		тхтБонусы = структураДанных.тхтБонусы;
		печБезСкидки = структураДанных.печБезСкидки;
		ПечБезНДС = структураДанных.ПечБезНДС;
		ПечСкидкаДоставка = структураДанных.ПечСкидкаДоставка;
		тхтСкидкаДоставка = структураДанных.тхтСкидкаДоставка;
		ПечСкидка = структураДанных.ПечСкидка;
		тхтСкидка = структураДанных.тхтСкидка;
		
		Таб.ВывестиСекцию("ДноВсегоБезСкидки"); 
		Таб.ВывестиСекцию("ДноСкидка"); 
		Если Итог("СуммаСкидкиСамовывоз") <> 0 Тогда
			Таб.ВывестиСекцию("ДноСкидкаДоставка"); 
		КонецЕсли;
		
		Таб.ВывестиСекцию("ДноВсего"); 
	КонецЕсли;
	
	Если ПустаяСтрока(тхтБонусы) = 0 Тогда
		Таб.ВывестиСекцию("Бонусы");
	КонецЕсли;
	Таб.ВывестиСекцию("Дно2_1"); 
	
	//флДверь = ЕстьДверь();
	Если (КатегорияЦен <> Константа.РозничнаяКатегорияЦен) Тогда
		Таб.ВывестиСекцию("ДноФактОплата"); 
	Иначе
		Таб.ВывестиСекцию("Дно_Экспедитор"); 
	КонецЕсли;
	
	//выводим инструкции
	тзИнструкции = СоздатьОбъект("ТаблицаЗначений");
	тзГруппТоваровСИнструкциями.Выгрузить(тзИнструкции,,,"описаниеДляРН,Счетчик");
	тзИнструкции.Свернуть("описаниеДляРН","Счетчик");
	тзИнструкции.ВыбратьСтроки();
	Пока тзИнструкции.ПолучитьСтроку() = 1 Цикл
		Если тзИнструкции.описаниеДляРН <> 0 Тогда
			тхтИнструкция = "    " + СокрЛП(тзИнструкции.описаниеДляРН.ТекстШаблона);
			Таб.ВывестиСекцию("Инструкция");
		КонецЕсли;
	КонецЦикла;
	
	//выводим ссылки на сайт
	тзСсылки = СоздатьОбъект("ТаблицаЗначений");
	тхтЗаголовокQRКоды = " Посилання на характеристики товарів, умови зберігання та експлуатації";

	тзГруппТоваровСИнструкциями.Выгрузить(тзСсылки,,,"ссылкаНаСайтДляГруппы,Счетчик");
	тзСсылки.Свернуть("ссылкаНаСайтДляГруппы","Счетчик");
	Если тзСсылки.Итог("Счетчик") <> 0 Тогда
		Таб.ВывестиСекцию("ЗаголовокQRКоды");
		счКодов = 0;
		тзСсылки.ВыбратьСтроки();
		Пока тзСсылки.ПолучитьСтроку() = 1 Цикл
			qrCodeИнструкция = "";
			Если ПустоеЗначение(тзГруппТоваровСИнструкциями.ссылкаНаСайтДляГруппы) = 0 Тогда
				qrCodeИнструкция = СокрЛП(тзГруппТоваровСИнструкциями.ссылкаНаСайтДляГруппы.текстСсылки);
				счКодов = счКодов + 1;
				счКодов = ?(счКодов%5 = 0,1,счКодов);
				Если счКодов = 1 Тогда
					Таб.ВывестиСекцию("QRКоды|шк"+счКодов);
				Иначе
					Таб.ПрисоединитьСекцию("QRКоды|шк"+счКодов);
				КонецЕсли;
			КонецЕсли;
			//	Таб.ВывестиСекцию("Инструкция");
		КонецЦикла;
	КонецЕсли;
		
	//Если флДверь = 0 Тогда
	//	тхтПодвал = "Внимание! Проверяйте материал до порезки. Резаный материал возврату и обмену не подлежит." + РазделительСтрок + 
	//	"Не хранить материалы под прямыми солнечными лучами!";
	//Иначе
	//	тхтПодвал = "Уважаемый клиент! Проверьте целостность упаковки и целостность стекла. Сохраняйте 
	//	|паспорт-вкладыш к двери до окончания гарантийного срока. Без паспорта претензии к качеству двери не принимаются.";
	//КонецЕсли;
	//Если флДверь = 1 Тогда
	//	Таб.ВывестиСекцию("Дно4_Двери" + ?(Склад.флСкладЗаказной = 1,"_Заказ","")); 
	//Иначе
	//	Таб.ВывестиСекцию("Дно4"); 
	//	Если Склад.флСкладЗаказной = 1 Тогда
	//		Таб.ВывестиСекцию("Дно4_Прочее_Заказ");
	//	КонецЕсли;
	//КонецЕсли;
	Если (этоОпт = 0) и (Найти(ПечФорма,"Дубликат") = 0) Тогда
		Если вывркз=1 Тогда
			Таб.ВывестиСекцию("БлагодарностьБезКода");
		Иначе
			Таб.ВывестиСекцию("Благодарность");
		КонецЕсли;
		Если глПользователь.ПринадлежитГруппе(этоРозница1Этаж) = 1 Тогда
			Таб.ВывестиСекцию("Подвал1Этаж");
		ИначеЕсли глПользователь.ПринадлежитГруппе(этоРозница2Этаж) = 1 Тогда
			Таб.ВывестиСекцию("Подвал2Этаж");
		КонецЕсли;
	КонецЕсли;
	
	Если Найти(ПечФорма,"Дубликат") = 0 Тогда
		текЗаказ = НайтиЗаказДвери();
		тхтОтзывПоРаботам = "";
		
		Если ТипЗначения(текЗаказ) = 12 Тогда
			Исполнитель = текЗаказ.Исполнитель;
			Если ПустоеЗначение(Исполнитель) = 0 Тогда
				qrCode = СокрЛП(Исполнитель.qrCode);
			КонецЕсли;
			Если ПустаяСтрока(qrCode) = 0 Тогда
				тхтОтзывПоРаботам = "залишити відгук про виконання робіт >";
				Таб.ВывестиСекцию("Отзыв");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Таб.ИсходнаяТаблица(ПечФорма);
КонецПроцедуры // ПечатьЭкз2(Таб,ВП)

//======================================================================
Процедура ПечатьЭкз3(Таб,ВП,ЭтоОпт,тхтНеликвид,ПечШтрихКод,чтоПечатать = "")
	контрагентКод = "";
	Если этоОпт = 1 Тогда
		таб.новаястраница();
		номерЭкземпляра = 3;
		тхтТекущаяДата = ""; //+ralex, 17-12-19 22:20
		ДолгТек = "";
		тхтШапкаНомерДок = "";
		Если (КатегорияЦен = Константа.РозничнаяКатегорияЦен) или (чтоПечатать = "РН") Тогда
			тхтШапкаНомерДок = "Видаткова накладна " + ?(ВидОперации=1," (повернення)","") + " № " + НомерДок;
		КонецЕсли;
		
		Если вывркз=1 Тогда
			Если (Фирма.менятьПоставщика=1) И (Контрагент.печатьФОП=1) тогда
				Таб.ВывестиСекцию("Секция_8"); 
			Иначе	
				Таб.ВывестиСекцию("Шапка"); 
			КонецЕсли;	
			
			Таб.ВывестиСекцию("Секция_6"); 
		КонецЕсли;
		Таб.ВывестиСекцию("Шапка3");
		
		//корректируем шапку
		ОбъединитьЯчейкиШапкиЦеныПриОтсутствииСкидки(Таб);
		
		Ном = 1; ИтогСуммаСоСкидкой = 0;
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл    
			Цена_БНДС = Окр(СуммаБезСкидки/Количество,3);
			Цена_СоСкидкой = Окр(СуммаБезНДС/Количество,3);
			Цена_СНДС = Цена_БНДС; 
			гл_ПолучитьЦенуТовараДляПечати(Контекст,Товар,Цена_СНДС,Цена_БНДС);//с НДС
			Сумма_БезСкидки = Цена_БНДС * Количество; //безНДС
			Сумма_СоСкидкой = Цена_СоСкидкой * Количество; //безНДС
			ИтогСуммаСоСкидкой = ИтогСуммаСоСкидкой + Сумма_СоСкидкой - СписаноБонусов;
			ПечЦена = глФРМ(глПересчет(Цена_БНДС,Валюта,Курс,ВП,ДатаДок),ВП,0);
			ПечЦенаСоСкидкой = глФРМ(глПересчет(Цена_СоСкидкой,Валюта,Курс,ВП,ДатаДок),ВП,0);
			ПечСумма = глФРМ(глПересчет(Сумма_СоСкидкой,Валюта,Курс,ВП,ДатаДок),ВП,0);
			тхтЕдиница = Единица;
			тхтКоличество = Количество;
			Таб.ВывестиСекцию("Строка");
			ОбъединитьЯчейкиЦеныПриОтсутствииСкидки(Таб);
			
			//вторая цена (за м2)
			едИзмМ2 = гл_ВернутьЕдиницуИзмеренияТовара(Константа.едИзмМетр2,Товар,0);
			Если ПустоеЗначение(едИзмМ2) = 0 Тогда
				ПечЦенаМ2 = Окр(Цена_БНДС /Единица.Коэффициент * едИзмМ2.коэффициент,3); 
				ПечЦенаМ2СоСкидкой = Окр(Цена_СоСкидкой /Единица.Коэффициент * едИзмМ2.коэффициент,3); 
				Таб.ВывестиСекцию("стр_втораяЦена");
				ОбъединитьЯчейкиЦеныПриОтсутствииСкидки(Таб);
			КонецЕсли;
			Ном = Ном+1;
		КонецЦикла; 
		
		//нижняя рамка в последней строке
		Обл = Таб.Область(Таб.ВысотаТаблицы(),1,Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы());
		Обл.РамкаСнизу(3);
		
		///выводим ДНО
		
		структураДанных = ПолучитьДанныеДляЗаполненияПечФормы(ВП,ИтогСуммаСоСкидкой);
		тхтБонусы = структураДанных.тхтБонусы;
		печБезСкидки = структураДанных.печБезСкидки;
		ПечБезНДС = структураДанных.ПечБезНДС;
		ПечСкидкаДоставка = структураДанных.ПечСкидкаДоставка;
		тхтСкидкаДоставка = структураДанных.тхтСкидкаДоставка;
		ПечСкидка = структураДанных.ПечСкидка;
		тхтСкидка = структураДанных.тхтСкидка;
		
		Если Итог("СуммаСкидки") + Итог("СписаноБонусов") <>0 Тогда
			Таб.ВывестиСекцию("ДноВсегоБезСкидки"); 
			Таб.ВывестиСекцию("ДноСкидка"); 
			Если Итог("СуммаСкидкиСамовывоз") <> 0 Тогда
				Таб.ВывестиСекцию("ДноСкидкаДоставка"); 
			КонецЕсли;
		ИначеЕсли Итог("СуммаСкидкиСамовывоз") <> 0 Тогда
			Таб.ВывестиСекцию("ДноВсегоБезСкидки"); 
			Таб.ВывестиСекцию("ДноСкидкаДоставка"); 
		КонецЕсли;
		Таб.ВывестиСекцию("ДноВсего"); 
		
		Если ПустаяСтрока(тхтБонусы) = 0 Тогда
			Таб.ВывестиСекцию("Бонусы");
		КонецЕсли;
		Таб.ВывестиСекцию("Дно2_1"); 
	КонецЕсли;
КонецПроцедуры // 

Процедура ПечатьРН(Таб,ВП,ЭтоОпт,тхтНеликвид,ПечШтрихКод,чтоПечатать = "")
	контрагентКод = "";
	текКатегорияЦен = ?(Контрагент.Выбран() = 1,Контрагент.КатегорияЦен,КатегорияЦен);
	
	Если этоОпт = 1 Тогда
		Если (текКатегорияЦен = Константа.крупнооптоваяЦена) или (КатегорияЦен = Константа.РозничнаяКатегорияЦен) Тогда
			
			таб.новаястраница();
			номерЭкземпляра = 3;
			тхтТекущаяДата = ""; //+ralex, 17-12-19 22:20
			ДолгТек = "";
			тхтШапкаНомерДок = "";
			Если (КатегорияЦен = Константа.РозничнаяКатегорияЦен) или (чтоПечатать = "РН") Тогда
				тхтШапкаНомерДок = "Видаткова накладна " + ?(ВидОперации=1," (повернення)","") + " № " + НомерДок;
			КонецЕсли;
			
			Таб.ВывестиСекцию("Шапка"); 
			Таб.ВывестиСекцию("Секция_6"); 
			Таб.ВывестиСекцию("Секция_7");
			
			//корректируем шапку
			ОбъединитьЯчейкиШапкиЦеныПриОтсутствииСкидки(Таб);
			
			Ном = 1; ИтогСуммаСоСкидкой = 0;
			ВыбратьСтроки();
			Пока ПолучитьСтроку()=1 Цикл    
				Цена_БНДС = Окр(СуммаБезСкидки/Количество,3);
				Цена_СоСкидкой = Окр(СуммаБезНДС/Количество,3);
				Цена_СНДС = Цена_БНДС; 
				гл_ПолучитьЦенуТовараДляПечати(Контекст,Товар,Цена_СНДС,Цена_БНДС);//с НДС
				//Сумма_БезСкидки = Цена_БНДС * Количество; //безНДС
				Сумма_СоСкидкой = Цена_СоСкидкой * Количество; //безНДС
				ИтогСуммаСоСкидкой = ИтогСуммаСоСкидкой + Сумма_СоСкидкой - СписаноБонусов;
				ПечЦена = глФРМ(глПересчет(Цена_БНДС,Валюта,Курс,ВП,ДатаДок),ВП,0);
				ПечЦенаСоСкидкой = глФРМ(глПересчет(Цена_СоСкидкой,Валюта,Курс,ВП,ДатаДок),ВП,0);
				ПечСумма = глФРМ(глПересчет(Сумма_СоСкидкой,Валюта,Курс,ВП,ДатаДок),ВП,0);
				тхтЕдиница = Единица;
				тхтКоличество = Количество;
				Таб.ВывестиСекцию("Строка");
				ОбъединитьЯчейкиЦеныПриОтсутствииСкидки(Таб);
				
				//вторая цена (за м2)
				едИзмМ2 = гл_ВернутьЕдиницуИзмеренияТовара(Константа.едИзмМетр2,Товар,0);
				Если ПустоеЗначение(едИзмМ2) = 0 Тогда
					ПечЦенаМ2 = Окр(Цена_БНДС /Единица.Коэффициент * едИзмМ2.коэффициент,3); 
					ПечЦенаМ2СоСкидкой = Окр(Цена_СоСкидкой /Единица.Коэффициент * едИзмМ2.коэффициент,3); 
					Таб.ВывестиСекцию("стр_втораяЦена");
					ОбъединитьЯчейкиЦеныПриОтсутствииСкидки(Таб);
				КонецЕсли;
				Ном = Ном+1;
			КонецЦикла; 
			
			//нижняя рамка в последней строке
			Обл = Таб.Область(Таб.ВысотаТаблицы(),1,Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы());
			Обл.РамкаСнизу(3);
			
			//выводим ДНО
			структураДанных = ПолучитьДанныеДляЗаполненияПечФормы(ВП,ИтогСуммаСоСкидкой);
			тхтБонусы = структураДанных.тхтБонусы;
			печБезСкидки = структураДанных.печБезСкидки;
			ПечБезНДС = структураДанных.ПечБезНДС;
			ПечСкидкаДоставка = структураДанных.ПечСкидкаДоставка;
			тхтСкидкаДоставка = структураДанных.тхтСкидкаДоставка;
			ПечСкидка = структураДанных.ПечСкидка;
			тхтСкидка = структураДанных.тхтСкидка;
			
			Если Итог("СуммаСкидки") + Итог("СписаноБонусов") <>0 Тогда
				Таб.ВывестиСекцию("ДноВсегоБезСкидки"); 
				Таб.ВывестиСекцию("ДноСкидка"); 
				Если Итог("СуммаСкидкиСамовывоз") <> 0 Тогда
					Таб.ВывестиСекцию("ДноСкидкаДоставка"); 
				КонецЕсли;
			ИначеЕсли Итог("СуммаСкидкиСамовывоз") <> 0 Тогда
				Таб.ВывестиСекцию("ДноВсегоБезСкидки"); 
				Таб.ВывестиСекцию("ДноСкидкаДоставка"); 
			КонецЕсли;
			
			Таб.ВывестиСекцию("ДноВсего"); 
			
			Если ПустаяСтрока(тхтБонусы) = 0 Тогда
				Таб.ВывестиСекцию("Бонусы");
			КонецЕсли;
			Таб.ВывестиСекцию("Дно2_1"); 
			
		Иначе
			таб.новаястраница();
			номерЭкземпляра = 3;
			тхтТекущаяДата = ""; 
			ДолгТек = "";
			тхтШапкаНомерДок = "";
				тхтШапкаНомерДок = "Видаткова накладна " + ?(ВидОперации=1," (повернення)","") + " № " + НомерДок;
			
			Таб.ВывестиСекцию("Шапка"); 
			Таб.ВывестиСекцию("Секция_6"); 
			Таб.ВывестиСекцию("Секция_7");
			
			Ном = 1; ИтогСуммаСоСкидкой = 0; ИтогСуммаРозница = 0;
			ВыбратьСтроки();
			Пока ПолучитьСтроку()=1 Цикл 
				//получаем цену по розничной цене как цену без скидки
				Цена_Розн=0;
				глПолучитьЦенуТовара(Константа.РозничнаяКатегорияЦен,Товар,Единица,ДатаДок,Цена_Розн,Валюта); 
				Если Валюта = Гривня Тогда
					Цена_Розн = Окр(Цена_Розн,Константа.КоэффОкрГрнЦены,1);
				КонецЕсли;
				
				Цена_СоСкидкой = Окр(СуммаБезНДС/Количество,3);
				Цена_СНДС = Цена_Розн; 
				//гл_ПолучитьЦенуТовараДляПечати(Контекст,Товар,Цена_СНДС,Цена_БНДС);//с НДС
				//Сумма_БезСкидки = Цена_Розн * Количество; //безНДС
				Сумма_СоСкидкой = Цена_СоСкидкой * Количество; //безНДС
				ИтогСуммаСоСкидкой = ИтогСуммаСоСкидкой + Сумма_СоСкидкой - СписаноБонусов;
				ИтогСуммаРозница =  ИтогСуммаРозница + Окр(Цена_Розн * Количество,2);
				ПечЦена = глФРМ(глПересчет(Цена_Розн,Валюта,Курс,ВП,ДатаДок),ВП,0);
				ПечЦенаСоСкидкой = глФРМ(глПересчет(Цена_СоСкидкой,Валюта,Курс,ВП,ДатаДок),ВП,0);
				ПечСумма = глФРМ(глПересчет(Сумма_СоСкидкой,Валюта,Курс,ВП,ДатаДок),ВП,0);
				тхтЕдиница = Единица;
				тхтКоличество = Количество;
				Таб.ВывестиСекцию("Строка");
				
				//вторая цена (за м2)
				едИзмМ2 = гл_ВернутьЕдиницуИзмеренияТовара(Константа.едИзмМетр2,Товар,0);
				Если ПустоеЗначение(едИзмМ2) = 0 Тогда
					ПечЦенаМ2 = Окр(Цена_Розн /Единица.Коэффициент * едИзмМ2.коэффициент,3); 
					ПечЦенаМ2СоСкидкой = Окр(Цена_СоСкидкой /Единица.Коэффициент * едИзмМ2.коэффициент,3); 
					Таб.ВывестиСекцию("стр_втораяЦена");
				КонецЕсли;
				Ном = Ном+1;
			КонецЦикла; 
			
			//нижняя рамка в последней строке
			Обл = Таб.Область(Таб.ВысотаТаблицы(),1,Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы());
			Обл.РамкаСнизу(3);
			
			//выводим ДНО
			структураДанных = ПолучитьДанныеДляЗаполненияПечФормы(ВП,ИтогСуммаСоСкидкой,ИтогСуммаРозница);
			тхтБонусы = структураДанных.тхтБонусы;
			печБезСкидки = структураДанных.печБезСкидки;
			ПечБезНДС = структураДанных.ПечБезНДС;
			ПечСкидкаДоставка = структураДанных.ПечСкидкаДоставка;
			тхтСкидкаДоставка = структураДанных.тхтСкидкаДоставка;
			ПечСкидка = структураДанных.ПечСкидка;
			тхтСкидка = структураДанных.тхтСкидка;
			
			Таб.ВывестиСекцию("ДноВсегоБезСкидки"); 
			Таб.ВывестиСекцию("ДноСкидка"); 
			Если Итог("СуммаСкидкиСамовывоз") <> 0 Тогда
				Таб.ВывестиСекцию("ДноСкидкаДоставка"); 
			КонецЕсли;
			
			Таб.ВывестиСекцию("ДноВсего"); 
			
			Если ПустаяСтрока(тхтБонусы) = 0 Тогда
				Таб.ВывестиСекцию("Бонусы");
			КонецЕсли;
			Таб.ВывестиСекцию("Дно2_1"); 
			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // 

Процедура ПечатьЭкземпляраНаСклад_А7(Таб,ВП,тхтНеликвид,ПечШтрихКод)
	номерЭкземпляра = 1;
	Таб.ИсходнаяТаблица("НакладнаяСклад_А7У");
	Таб.ВывестиСекцию("ШК"); 
	Таб.ВывестиСекцию("Шапка"); 
	Таб.ВывестиСекцию("Секция_7_Склад"); 
	тхтМеткаВремени = ТекущаяДата() + " " + ТекущееВремя();
	Дубликат = "";
	текРаспечатан = дополненияТорговля.ПолучитьСостояниеДокумента(Контекст,"распечатан"); //+ralex, 19-12-21 23:02
	Если (текРаспечатан > 0) и (флБезДубликата = 0) Тогда
		Дубликат = "(ДУБЛІКАТ)";
	КонецЕсли;
	
	Ном = 1;
	ВСоставе = 0;  ИтВес=0;
	ИтогСумма_БНДС = 0;
	ИтогСумма_НДС = 0;
	ИтогСумма_СДНС = 0;
	
	ОстаткиТоваров=СоздатьОбъект("Регистр.ОстаткиТоваров"); //для склада инфо об остатках товара по складам
	допТорг = СоздатьОбъект("дополненияТорговля");
	тз = СоздатьОбъект("ТаблицаЗначений");
	тхтПроверкаПартий = "";
	ВыгрузитьТабличнуюЧасть(тз);
	тз.Сортировать("Товар");
	тз.НоваяКолонка("Индекс","Строка");
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		тз.Индекс = ЗначениеВСтроку(тз.Товар) + ЗначениеВСтроку(тз.ПартияПост);
	КонецЦикла;
	
	тзГруппТоваровСИнструкциями  = СоздатьОбъект("ТаблицаЗначений");
	тзГруппТоваровСИнструкциями.НоваяКолонка("описаниеДляСклада");
	тзГруппТоваровСИнструкциями.НоваяКолонка("ссылкаНаСайтДляТовара");
	тзГруппТоваровСИнструкциями.НоваяКолонка("Счетчик","Число",1,0);		
	
	тз.ВыбратьСтроки();
	старыйИндекс = ""; старыйТовар = ""; стараяПартия = ""; ном = 0;	КвоБаз = 0; складскоеМестоСтрокой = "";//количество будем считать в базовой
	текКво = 0; текЕдИзм = 0; КвоБаз = 0; //количество будем считать в базовой
	Пока тз.ПолучитьСтроку() = 1 Цикл
		описаниеДляРНДляСклада = "";
		ссылкаНаСайтДляТовара = СокрЛП(тз.Товар.url);
		описаниеДляРНДляСклада = дополненияТорговля. ПолучитьПараметрГруппыСправочника(Товар,"описаниеДляРНДляСклада");
		Если НЕ((ПустоеЗначение(описаниеДляРНДляСклада) = 1) и (ПустаяСтрока(ссылкаНаСайтДляТовара) = 1)) Тогда
			тзГруппТоваровСИнструкциями.НоваяСтрока();
			тзГруппТоваровСИнструкциями.описаниеДляСклада = описаниеДляРНДляСклада;
			тзГруппТоваровСИнструкциями.ссылкаНаСайтДляТовара = ссылкаНаСайтДляТовара;
			тзГруппТоваровСИнструкциями.Счетчик = 1;
		КонецЕсли;
		
		Если старыйИндекс <> тз.Индекс Тогда
			Если старыйИндекс <> "" Тогда
				ВывестиСтрокуТовара(Таб,допТорг,старыйТовар,КвоБаз,ном,текКво,текЕдИзм,стараяПартия,складскоеМестоСтрокой);
			КонецЕсли;
			старыйТовар = тз.Товар;
			старыйИндекс = тз.Индекс;
			стараяПартия = тз.ПартияПост;
			//*ralex, 08-01-24 10:41
			//складскоеМестоСтрокой = "место: "+ тз.складскоеМесто;
			// -------- заменено на:
			складскоеМестоСтрокой = тз.складскоеМесто;
			//*/------------------------
			Если ПустоеЗначение(стараяПартия) = 0 Тогда
				тхтПроверкаПартий = "Увага! Перевірте співпадіння партії товару вказаній на упаковці!";
			КонецЕсли;
			текКво = 0; текЕдИзм = 0; КвоБаз = 0; //количество будем считать в базовой
		КонецЕсли;
		текКво = тз.Количество; текЕдИзм = тз.Единица;
		ИтВес=ИтВес + тз.Товар.вес * тз.Количество * тз.Коэффициент;
		КвоБаз = КвоБаз  + тз.Количество * тз.Единица.Коэффициент;		
	КонецЦикла;
	
	//последний товар
	Если тз.КоличествоСтрок() > 0 Тогда
		ВывестиСтрокуТовара(Таб,допТорг,старыйТовар,КвоБаз,ном,текКво,текЕдИзм,стараяПартия,складскоеМестоСтрокой);
	КонецЕсли;
	
	тхтСкидка = "";
	Если КатегорияЦен = Константа.РозничнаяКатегорияЦен Тогда
		итогоСуммаБезНДС = Итог("СуммаБезНДС");
		итогоСуммаБезСкидки = Итог("СуммаБезСкидки");
		печБезСкидки = глФРМ(глПересчет(итогоСуммаБезСкидки,Валюта,Курс,ВП,ДатаДок),ВП,0);
		ПечБезНДС = глФРМ(глПересчет(итогоСуммаБезНДС,Валюта,Курс,ВП,ДатаДок),ВП,0);
		Если Итог("СуммаСкидки")<>0 Тогда
			ПечСкидка = глФРМ(глПересчет(Итог("СуммаСкидки"),Валюта,Курс,ВП,ДатаДок),ВП,0);
			//посчитаем процент скидки
			процент = Окр((итогоСуммаБезСкидки - итогоСуммаБезНДС) * 100 / итогоСуммаБезСкидки,2);
			тхтСкидка = ?(Константа.ФормыНаУкраинском = Да,"Знижка","Знижка") + " (" + процент + "%):";
			Таб.ВывестиСекцию("Дно_Склад_Розница");   
		Иначе
			Таб.ВывестиСекцию("Дно_Склад_Розница>"); 
		КонецЕсли;
	Иначе
		Таб.ВывестиСекцию("Дно_Склад"); 
	КонецЕсли;
	
	Таб.ВывестиСекцию("Сборщик"); 
	
	//выводим инструкции
	тзИнструкции = СоздатьОбъект("ТаблицаЗначений");
	тзГруппТоваровСИнструкциями.Выгрузить(тзИнструкции,,,"описаниеДляСклада,Счетчик");
	тзИнструкции.Свернуть("описаниеДляСклада","Счетчик");
	тзИнструкции.ВыбратьСтроки();
	Пока тзИнструкции.ПолучитьСтроку() = 1 Цикл
		Если тзИнструкции.описаниеДляСклада <> 0 Тогда
			тхтИнструкция = "    " + СокрЛП(тзИнструкции.описаниеДляСклада.ТекстШаблона);
			Таб.ВывестиСекцию("Инструкция");
		КонецЕсли;
	КонецЦикла;
	
	//выводим ссылки на сайт
	тзСсылки = СоздатьОбъект("ТаблицаЗначений");
	тзГруппТоваровСИнструкциями.Выгрузить(тзСсылки,,,"ссылкаНаСайтДляТовара,Счетчик");
	тзСсылки.Свернуть("ссылкаНаСайтДляТовара","Счетчик");
	Если тзСсылки.Итог("Счетчик") <> 0 Тогда
		тхтЗаголовокQRКоды = " Посилання на товари:";
		Таб.ВывестиСекцию("ЗаголовокQRКоды");
		счКодов = 0;
		тзСсылки.ВыбратьСтроки();
		Пока тзСсылки.ПолучитьСтроку() = 1 Цикл
			qrCodeИнструкция = "";
			Если ПустоеЗначение(тзСсылки.ссылкаНаСайтДляТовара) = 0 Тогда
				qrCodeИнструкция = СокрЛП(тзСсылки.ссылкаНаСайтДляТовара);
				счКодов = счКодов + 1;
				счКодов = ?(счКодов%4 = 0,1,счКодов);
				Если счКодов = 1 Тогда
					Таб.ВывестиСекцию("QRКоды|шк"+счКодов);
				Иначе
					Таб.ПрисоединитьСекцию("QRКоды|шк"+счКодов);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
	
	//флДверь = ЕстьДверь();
	//
	//Если флДверь = 0 Тогда
	//	тхтПодвал = "Увага! Перевіряйте матеріал до порізки. Різаний матеріал поверненню і обміну не підлягає. " + РазделительСтрок + 
	//	"Не зберігайте матеріал під прямим сонячним промінням!";
	//Иначе
	//	тхтПодвал = "Уважаемый клиент! Проверьте целостность упаковки и целостность стекла. Сохраняйте 
	//	|паспорт-вкладыш к двери до окончания гарантийного срока. Без паспорта претензии к качеству двери не принимаются.";
	//КонецЕсли;
	//Если флДверь = 1 Тогда
	//	Таб.ВывестиСекцию("Дно4_Двери" + ?(Склад.флСкладЗаказной = 1,"_Заказ","")); 
	//Иначе
	//	Таб.ВывестиСекцию("Дно4"); 
	//	Если Склад.флСкладЗаказной = 1 Тогда
	//		Таб.ВывестиСекцию("Дно4_Прочее_Заказ");
	//	КонецЕсли;
	//КонецЕсли;
	//+ralex, 01-02-23 22:37
	текРаспечатанСклад = дополненияТорговля.ПолучитьСостояниеДокумента(Контекст,"распечатанСклад"); 
	дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"распечатанСклад",текРаспечатанСклад + 1);
	//+/------------------------
КонецПроцедуры // ПечатьЭкземпляраНаСклад_А7

Процедура ПечатьРН_А7(Таб,ВП,ЭтоОпт,тхтНеликвид,ПечШтрихКод,чтоПечатать,ПечФорма,квоЭкз)
	
	Если (Строка(ВидТорговли) = "Товарный кредит") ИЛИ ((ЭтоВидТогровлиНал(ВидТорговли) = Перечисление.ВидыТорговли.Нал) И (Контрагент.печатьФОП=0)) Тогда
		ИтогСумма_БНДС = 0;
		ИтогСумма_НДС = 0;
		ИтогСумма_СДНС = 0;
	КонецЕсли;
	
	Если (контрагент.печатьДолг=1) и (КатегорияЦен <> Константа.РозничнаяКатегорияЦен) тогда
		ТекущийДолг = глДолгКонтрагента(Контекст,-1,Упр, ,Контрагент,,,1) + глДолгКонтрагента(Контекст,1,Упр, ,Контрагент,,,1);
		ДолгТек="Заборгованість без поточного замовлення: "+ТекущийДолг+" грн.";
		ДолгЦифрами = ?(ТекущийДолг = 0,"",""+ТекущийДолг + " грн.");
	Иначе
		ДолгЦифрами = "";
		ДолгТек="";
	КонецЕсли;	
	
	_Фирма = Фирма.ПолнНаименование;
	ПечСНДСПропись = глСуммаПрописью(глПересчет(Итог("СуммаСНДС"),Валюта,Курс,ВП,ДатаДок),ВП);  
	тхтМеткаВремени = ТекущаяДата() + " " + ТекущееВремя();
	//ПечШтрихКод=Строка(ШтрКод);
	
	Дубликат = "";
	текРаспечатан = дополненияТорговля.ПолучитьСостояниеДокумента(Контекст,"распечатан"); //+ralex, 19-12-21 23:02
	Если (текРаспечатан > 0) и (флБезДубликата = 0) Тогда
		Дубликат = "(ДУБЛІКАТ)";
	КонецЕсли;
	
	Таб.ИсходнаяТаблица("НакладнаяА7У");
	Язык = "у";
	глУстПропись(Валюта,Язык);
	
	Для сч = 1 По квоЭкз Цикл
		Фирма.ИспользоватьДату(ДатаДок,1); 
		Если (квоЭкз = 2) и (сч = 1) Тогда //если печатаем 2 экземпляра то на одном должен быть ШК а на втором нет. Если одн экз. то без ШК
			Таб.ВывестиСекцию("ШК");
		КонецЕсли;
		Таб.ВывестиСекцию("Шапка");
		тхтШапкаНомерДок = "";
		Если КатегорияЦен = Константа.РозничнаяКатегорияЦен Тогда
			тхтШапкаНомерДок = "Видаткова накладна " + ?(ВидОперации=1," (повернення)","") + " № " + НомерДок;
		КонецЕсли;
		Таб.ВывестиСекцию("Секция_7");
		
		тзГруппТоваровСИнструкциями  = СоздатьОбъект("ТаблицаЗначений");
		тзГруппТоваровСИнструкциями.НоваяКолонка("описаниеДляРН");
		тзГруппТоваровСИнструкциями.НоваяКолонка("ссылкаНаСайтДляГруппы");
		тзГруппТоваровСИнструкциями.НоваяКолонка("Счетчик","Число",1,0);		
		
		допТорг = СоздатьОбъект("дополненияТорговля");
		тз = СоздатьОбъект("ТаблицаЗначений");
		тхтПроверкаПартий = "";
		ВыгрузитьТабличнуюЧасть(тз);
		тз.Сортировать("Товар");
		тз.НоваяКолонка("Индекс","Строка");
		тз.ВыбратьСтроки();
		Пока тз.ПолучитьСтроку() = 1 Цикл
			тз.Индекс = ЗначениеВСтроку(тз.Товар) + ЗначениеВСтроку(тз.ПартияПост);
		КонецЦикла;
		
		Ном = 1;
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл   
			ссылкаНаСайтДляГруппы = ""; описаниеДляРН = "";
			описаниеДляРН = дополненияТорговля. ПолучитьПараметрГруппыСправочника(Товар,"описаниеДляРН");
			ссылкаНаСайтДляГруппы = дополненияТорговля. ПолучитьПараметрГруппыСправочника(Товар,"ссылкаНаСайтДляГруппы");
			Если (ПустоеЗначение(описаниеДляРН) = 0) или (ПустоеЗначение(ссылкаНаСайтДляГруппы) = 0)  Тогда
				тзГруппТоваровСИнструкциями.НоваяСтрока();
				тзГруппТоваровСИнструкциями.описаниеДляРН = описаниеДляРН;
				тзГруппТоваровСИнструкциями.ссылкаНаСайтДляГруппы = ссылкаНаСайтДляГруппы;
				тзГруппТоваровСИнструкциями.Счетчик = 1;
			КонецЕсли;
			
			Цена_БНДС = Окр(СуммаБезСкидки/Количество,3);
			Цена_СоСкидкой = Окр(СуммаБезНДС/Количество,3);
			Цена_СНДС = Цена_БНДС; 
			гл_ПолучитьЦенуТовараДляПечати(Контекст,Товар,Цена_СНДС,Цена_БНДС);//с НДС
			
			Если тз.ЦенаСНДС <> Цена_СНДС Тогда
				Пересчитан = 1;
			КонецЕсли;
			
			Сумма_соСкидкой = Цена_СоСкидкой * Количество; //безНДС
			ИтогСумма_БНДС = ИтогСумма_БНДС + Сумма_соСкидкой - СписаноБонусов;
			ПечЦена = глФРМ(глПересчет(Цена_БНДС,Валюта,Курс,ВП,ДатаДок),ВП,0);
			ПечЦенаСоСкидкой = глФРМ(глПересчет(Цена_СоСкидкой,Валюта,Курс,ВП,ДатаДок),ВП,0);
			ПечСумма = глФРМ(глПересчет(Сумма_соСкидкой,Валюта,Курс,ВП,ДатаДок),ВП,0);
			тхтЕдиница = Единица;
			тхтКоличество = Количество;
			Если ПустоеЗначение(ПартияПост) = 1 Тогда
				Таб.ВывестиСекцию("Строка");
			Иначе
				тхтПартия = "" + ПартияПост;
				Таб.ВывестиСекцию("Строка_Партия");
			КонецЕсли;
			
			//вторая цена (за м2)
			едИзмМ2 = гл_ВернутьЕдиницуИзмеренияТовара(Константа.едИзмМетр2,Товар,0);
			едИзмУпаковка = гл_ВернутьЕдиницуИзмеренияТовара(Константа.едИзмУпаковка,Товар,0);
			Если ПустоеЗначение(едИзмМ2) = 0 Тогда
				ПечЦенаМ2 = Окр(Цена_БНДС /Единица.Коэффициент * едИзмМ2.коэффициент,3); 
				ПечЦенаМ2СоСкидкой = Окр(Цена_СоСкидкой /Единица.Коэффициент * едИзмМ2.коэффициент,3); 
				КвоМ2 = Окр(Количество * Единица.Коэффициент / едИзмМ2.коэффициент,2); 
				печКвоМ2 = СокрЛП(Формат(КвоМ2,"Ч012.2") + " " + едИзмМ2);
				Таб.ВывестиСекцию("стр_втораяЦена");
				
			ИначеЕсли Единица.Единица = Константа.едИзмУпаковка Тогда
				//попробуем найти цену за штуку (за базовую единицу т.к. штука у нас не выделена)
				едИзмМ2 = Товар.БазоваяЕдиница;
				ПечЦенаМ2 = Окр(Цена_БНДС /Единица.Коэффициент,3); 
				ПечЦенаМ2СоСкидкой = Окр(Цена_СоСкидкой /Единица.Коэффициент,3); 
				Таб.ВывестиСекцию("стр_втораяЦена");
			КонецЕсли;
			
			//третья единица- упаковка
			Если  (Единица.Единица <> Константа.едИзмУпаковка) и (ПустоеЗначение(едИзмУпаковка) = 0) Тогда //т.е. упаковку не выводили
				едИзмМ2 = едИзмУпаковка;
				ПечЦенаМ2 = Окр(Цена_БНДС /Единица.Коэффициент * едИзмУпаковка.коэффициент,3); 
				ПечЦенаМ2СоСкидкой = Окр(Цена_СоСкидкой /Единица.Коэффициент * едИзмУпаковка.коэффициент,3); 
				КвоМ2 = Окр(Количество * Единица.Коэффициент / едИзмУпаковка.коэффициент,2); 
				печКвоМ2 = СокрЛП(Формат(КвоМ2,"Ч012.2") + " " + едИзмМ2);
				Таб.ВывестиСекцию("стр_втораяЦена");
			КонецЕсли;
			Ном = Ном+1;
		КонецЦикла; 
		
		//нижняя рамка в последней строке
		Обл = Таб.Область(Таб.ВысотаТаблицы(),1,Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы());
		Обл.РамкаСнизу(3);
		
		//выводим ДНО
		структураДанных = ПолучитьДанныеДляЗаполненияПечФормы(ВП,ИтогСумма_БНДС);
		тхтБонусы = структураДанных.тхтБонусы;
		печБезСкидки = структураДанных.печБезСкидки;
		ПечБезНДС = структураДанных.ПечБезНДС;
		ПечСкидкаДоставка = структураДанных.ПечСкидкаДоставка;
		тхтСкидкаДоставка = структураДанных.тхтСкидкаДоставка;
		ПечСкидка = структураДанных.ПечСкидка;
		тхтСкидка = структураДанных.тхтСкидка;
		
		Если ПустаяСтрока(печБезСкидки) = 0 Тогда
			Таб.ВывестиСекцию("безСкидки");
		КонецЕсли;
		
		Если ПустаяСтрока(ПечСкидка) = 0 Тогда
			Таб.ВывестиСекцию("Скидка");
		КонецЕсли;
		
		Если ПустаяСтрока(ПечСкидкаДоставка) = 0 Тогда
			Таб.ВывестиСекцию("скидкаДоставка");
		КонецЕсли;
		
		Таб.ВывестиСекцию("Всего");
		
		//флДверь = ЕстьДверь();
		//Если флДверь = 0 Тогда
		//	тхтПодвал = "Увага! Перевіряйте матеріал до нарізання. Різаний матеріал поверненню та обміну не підлягає." + РазделительСтрок + 
		//	"Не тримати матеріали під прямим сонячним промінням!";
		//Иначе
		//	тхтПодвал = "Шановний кліент! Перевірте цілісність пакування та цілісність скла. Зберігайте 
		//	|паспорт-вкладення до двері до завершення гарантійного терміну. Без паспорта претензії до якостті дверей не приймаються.";
		//КонецЕсли;
		
		Если сч = 1 Тогда
			Таб.ВывестиСекцию("Дно<");
		Иначе
			Таб.ВывестиСекцию("Дно");
		КонецЕсли;
				
		//Если флДверь = 1 Тогда
		//	Таб.ВывестиСекцию("Дно4_Двери" + ?(Склад.флСкладЗаказной = 1,"_Заказ","")); 
		//КонецЕсли;
		
	//выводим инструкции
	тзИнструкции = СоздатьОбъект("ТаблицаЗначений");
	тзГруппТоваровСИнструкциями.Выгрузить(тзИнструкции,,,"описаниеДляРН,Счетчик");
	тзИнструкции.Свернуть("описаниеДляРН","Счетчик");
	тзИнструкции.ВыбратьСтроки();
	Пока тзИнструкции.ПолучитьСтроку() = 1 Цикл
		Если тзИнструкции.описаниеДляРН <> 0 Тогда
			тхтИнструкция = "    " + СокрЛП(тзИнструкции.описаниеДляРН.ТекстШаблона);
			Таб.ВывестиСекцию("Инструкция");
		КонецЕсли;
	КонецЦикла;
	
	//выводим ссылки на сайт
	тзСсылки = СоздатьОбъект("ТаблицаЗначений");
	тзГруппТоваровСИнструкциями.Выгрузить(тзСсылки,,,"ссылкаНаСайтДляГруппы,Счетчик");
	тзСсылки.Свернуть("ссылкаНаСайтДляГруппы","Счетчик");
	Если тзСсылки.Итог("Счетчик") <> 0 Тогда
		Таб.ВывестиСекцию("ЗаголовокQRКоды");
		счКодов = 0;
		тзСсылки.ВыбратьСтроки();
		Пока тзСсылки.ПолучитьСтроку() = 1 Цикл
			qrCodeИнструкция = "";
			Если ПустоеЗначение(тзГруппТоваровСИнструкциями.ссылкаНаСайтДляГруппы) = 0 Тогда
				qrCodeИнструкция = СокрЛП(тзГруппТоваровСИнструкциями.ссылкаНаСайтДляГруппы.текстСсылки);
				счКодов = счКодов + 1;
				счКодов = ?(счКодов%3 = 0,1,счКодов);
				Если счКодов = 1 Тогда
					Таб.ВывестиСекцию("QRКоды|шк"+счКодов);
				Иначе
					Таб.ПрисоединитьСекцию("QRКоды|шк"+счКодов);
				КонецЕсли;
			КонецЕсли;
			//	Таб.ВывестиСекцию("Инструкция");
		КонецЦикла;
	КонецЕсли;

		
		
		Если сч < квоЭкз Тогда
			Таб.НоваяСтраница(Таб.ВысотаТаблицы());
		КонецЕсли;
	КонецЦикла;
	
	//имяПринтера = "";
	//спсПринтеров = Сервис.ПолучитьСписокПринтеров();
	//Если спсПринтеров.РазмерСписка() <> 0 Тогда
	//	Для сч = 1 По спсПринтеров.размерСписка() Цикл
	//		имяПринтера = спсПринтеров.ПолучитьЗначение(сч,);
	//		Если Найти(имяПринтера,"80 mm Series Printer") <> 0 Тогда
	//			Прервать;
	//		Иначе
	//			имяПринтера = "";
	//		КонецЕсли;
	//	КонецЦикла;
	//	
	//	//Если имяПринтера = "" Тогда //не нашли принтер
	//	//	Если спсПринтеров.ВыбратьЗначение(имяПринтера,"Выберите принтер на котором печатать накладную формата А7.",,,0) <> 1 Тогда
	//	//		Возврат;
	//	//	КонецЕсли;
	//	//КонецЕсли;	
	//КонецЕсли;
	
	//Таб.ПараметрыСтраницы(1,,,0,0,5,5,5,5,1,,имяПринтера);   
	//Таб.Опции(0,0,0,0);
	//Таб.Показать();
КонецПроцедуры // ПечатьРН_А7(Таб,ВП)


Процедура Печать(Быстраяпечать=0,чтоПечатать="")
	перем тз;
	Если (спрКонтрПрава.ПроверитьНаличиеПодтвержденияСМС(контекст) = 0) Тогда
		Если (флОтклКонтрольЦен = 0) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	//*ralex, 09-04-23 23:11
	//Если новый=1 Тогда
	//	возврат;
	//КонецЕсли; 
	// -------- заменено на:
	//*/------------------------
	Если (названиенабораправ()="Продавець") ИЛИ (Найти(Врег(НазваниеНабораПрав()),"МЕНЕДЖЕР") <> 0) Тогда
		Если пометкаудаления()=1 тогда
			сообщить("Документ помечен на удаление!!!"); 
			статусвозврата(0);
			возврат;
		КонецЕсли;	
		Если датадок>рабочаядата() тогда
			сообщить("Можно печатать документ только в текущей дате!!!");  
			статусвозврата(0);
			возврат;
		КонецЕсли;	     
		Если Склад.Выбран()=0 Тогда
			Предупреждение("Выберите Склад....");
			статусвозврата(0);
			возврат;
		КонецЕсли;
	КонецЕсли;   
	
	ВыгрузитьТабличнуюЧасть(тз);
	тз.Сортировать("Товар");
	ЗагрузитьТабличнуюЧасть(тз);
	тз = 0;
	
	тОтпустил = глФИО(Отпустил,2);
	ПечШтрихКод=Строка(ШтрКод);
	ДатаОплатыКалендарная = ДатаДок + Глубина;
	ВП = Валюта;  
	КурсПечати = Курс;                     
	ДатаКурса = Дата_Курса;
	Если неликвид = 1 Тогда
		тхтНеликвид = ?(Константа.ФормыНаУкраинском = Да,"--- НЕКОНДИЦІЯ ","--- НЕКОНДИЦИЯ ") + Сорт + " ---";
	Иначе
		тхтНеликвид = "";
	КонецЕсли;
	стрТелефоны = СокрЛП(Контрагент.Телефон1);
	Если НЕ((СокрЛП(Контрагент.Телефон2) = "0") или (ПустаяСтрока(Контрагент.Телефон2) = 1)) Тогда
		стрТелефоны = стрТелефоны + ", "+ СокрЛП(Контрагент.Телефон2);
	КонецЕсли;
	Таб = СоздатьОбъект("Таблица");  	
	
	Если (названиенабораправ()="Продавець") ИЛИ (Найти(Врег(НазваниеНабораПрав()),"МЕНЕДЖЕР") <> 0)Тогда
		//какая-то хрень непонятная доставшаяся в наследство. Нет выбора строки из которой брать данные.
		Цена_СНДС = ЦенаСНДС; Цена_БНДС = ЦенаБезНДС;
		гл_ПолучитьЦенуТовараДляПечати(Контекст,Товар,Цена_СНДС,Цена_БНДС);//с НДС
		Если ЦенаСНДС <> Цена_СНДС Тогда
			Пересчитан = 1;
		КонецЕсли;
		//конец какая-то хрень непонятная доставшаяся в наследство
		
		Если Проведен() = 0 Тогда
			Если (Провести() = 0) и (разрешитьПечать = 0) Тогда
				Сообщить("Перед печатью документ должен быть проведен.");
				Сообщить("Доступна только печать листа комплектации.");
				чтоПечатать = "листКомлектации";
			Иначе
				форма.толькоПросмотр(1);
				Форма.Обновить();
			КонецЕсли;			
		КонецЕсли;
		Если выбран()=1 Тогда
			новый=0;
		КонецЕсли;		
	КонецЕсли;	
	
	//*ralex, 16-10-23 20:40
	//Если (НазваниеНабораПрав() <> "Администратор") Тогда
	// -------- заменено на:
	Если (НазваниеНабораПрав() <> "Администратор") и (разрешитьПечать = 0) Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			Если Товар.Распродажа.Получить(ДатаДок) = 0 Тогда
				рез = ПроверитьЦенуТовара(Контекст);
				Если рез = 0 Тогда
					Возврат;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	естьВрезка = ?(ПустоеЗначение(НайтиЗаказДвери()) = 1,"","ВРЕЗКА"); //+ralex, 12-01-22 22:43
	контрагентыПрава = СоздатьОбъект("КонтрагентыПрава");
	этоОпт = КонтрагентыПрава.ЭтоОптовыйКонтрагент(Контрагент); 
	
	Если (ЭтоВидТогровлиНал(ВидТорговли) = Перечисление.ВидыТорговли.Нал) И ((Контрагент.печатьФОП=1) или 
	(КатегорияЦен = Константа.РозничнаяКатегорияЦен)) и (чтоПечатать <> "листКомлектации") Тогда  
		этоОпт = 0;
		чтоПечатать = "1РН_А7";
	КонецЕсли;
	
	Если ПустоеЗначение(Контрагент) = 0 Тогда
		Если Контрагент.ВидКонтрагента <> Перечисление.ВидыКонтрагентов.Нерезидент Тогда
			Если ТипУчета > 0 Тогда
				ВП = Гривня;  
				КурсПечати = глКурсДляВалюты(ВП,ДатаДок);                     
				ДатаКурса = ДатаДок;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;	
	
	ИмяФайлаПечатнойФормы = КаталогИБ()+"ExtForms\PrnForms\RN_ukr.mxl";		
	Если ФС.СуществуетФайл(ИмяФайлаПечатнойФормы) = 1 Тогда
		ПечФорма = ИмяФайлаПечатнойФормы;
	Иначе
		ПечФорма = "Накладная";
		Язык = глЯзык(ПечФорма); 	
	КонецЕсли;
	
	текРаспечатан = дополненияТорговля.ПолучитьСостояниеДокумента(Контекст,"распечатан"); //+ralex, 19-12-21 23:02
	
	Если (текРаспечатан > 0) и (флБезДубликата = 0) Тогда
		ИмяФайлаПечатнойФормы = КаталогИБ()+"ExtForms\PrnForms\RN_ukr_Дубликат.mxl";		
		Если ФС.СуществуетФайл(ИмяФайлаПечатнойФормы) = 1 Тогда
			ПечФорма = ИмяФайлаПечатнойФормы;
		Иначе
			ПечФорма = "Накладная";
			Язык = глЯзык(ПечФорма); 	
			ПечФорма = ПечФорма + "_Дубликат";
		КонецЕсли;
	КонецЕсли;
	Таб.ИсходнаяТаблица(ПечФорма);
	Язык = глЯзык(); 	
	глУстПропись(Валюта,Язык);
	
	Если флСамовывоз = 1 Тогда
		тхтНеликвид = ?(Константа.ФормыНаУкраинском = Да,"--- САМОВИВІЗ ","--- САМОВЫВОЗ ") + " ---";
	КонецЕсли;
	
	тхтТекущаяДата = "" + ТекущаяДата() + " " + ТекущееВремя(); //+ralex, 16-03-19 23:23
	Фирма.ИспользоватьДату(ДатаДок,1); 
	Если ШтрКод = 0 Тогда
		Предупреждение("Для документа не сгенерирован штрихкод. Необходимо записать документ.");
		Возврат;
	КонецЕсли;
	
	Если чтоПечатать = "РН" Тогда
		ПечатьРН(Таб,ВП,1,тхтНеликвид,ПечШтрихКод,чтоПечатать);
		РаспечататьТаблицу(Таб,	БыстраяПечать,чтоПечатать,текРаспечатан);
	ИначеЕсли чтоПечатать = "1РН_А7" Тогда
		ПечатьЭкземпляраНаСклад(Таб,ВП,тхтНеликвид,ПечШтрихКод);
		тхтОкнаВыбораПринтера = "Выберите принтер для печати накладной на склад формата А4";
		РаспечататьТаблицу(Таб,	БыстраяПечать,чтоПечатать,текРаспечатан,1,тхтОкнаВыбораПринтера);
		
		Таб = СоздатьОбъект("Таблица");
		ПечатьРН_А7(Таб,ВП,1,тхтНеликвид,ПечШтрихКод,чтоПечатать,ПечФорма,1);
		тхтОкнаВыбораПринтера = "Выберите принтер для печати накладной формата А7";
		РаспечататьТаблицу(Таб,	БыстраяПечать,чтоПечатать,текРаспечатан,1,тхтОкнаВыбораПринтера);
	ИначеЕсли чтоПечатать = "2РН_А7" Тогда
		ПечатьЭкземпляраНаСклад(Таб,ВП,тхтНеликвид,ПечШтрихКод);
		тхтОкнаВыбораПринтера = "Выберите принтер для печати накладной на склад формата А4";
		РаспечататьТаблицу(Таб,	БыстраяПечать,чтоПечатать,текРаспечатан,1,тхтОкнаВыбораПринтера);
		
		Таб = СоздатьОбъект("Таблица");
		ПечатьРН_А7(Таб,ВП,1,тхтНеликвид,ПечШтрихКод,чтоПечатать,ПечФорма,2);
		тхтОкнаВыбораПринтера = "Выберите принтер для печати накладной формата А7";
		РаспечататьТаблицу(Таб,	БыстраяПечать,чтоПечатать,текРаспечатан,1,тхтОкнаВыбораПринтера);
	ИначеЕсли чтоПечатать = "документ_А7" Тогда
		ПечатьЭкземпляраНаСклад_А7(Таб,ВП,тхтНеликвид,ПечШтрихКод);
		таб.НоваяСтраница();
		ПечатьРН_А7(Таб,ВП,1,тхтНеликвид,ПечШтрихКод,чтоПечатать,ПечФорма,1);
		РаспечататьТаблицу(Таб,	БыстраяПечать,чтоПечатать,текРаспечатан,0,тхтОкнаВыбораПринтера);
	ИначеЕсли чтоПечатать = "листКомлектации" Тогда
		ПечатьЭкземпляраНаСклад(Таб,ВП,тхтНеликвид,ПечШтрихКод,1);
		РаспечататьТаблицу(Таб,	БыстраяПечать,чтоПечатать,текРаспечатан);
	Иначе
		Если (Фирма.менятьПоставщика=1) И (Контрагент.печатьФОП=1) тогда
			Таб.ВывестиСекцию("Секция_8"); 
		Иначе	
			Таб.ВывестиСекцию("Шапка"); 
		КонецЕсли;	
		ПечатьЭкземпляраНаСклад(Таб,ВП,тхтНеликвид,ПечШтрихКод);
		ПечатьЭкз2(Таб,ВП,этоОпт,ПечФорма,тхтНеликвид,ПечШтрихКод);
		ПечатьЭкз3(Таб,ВП,ЭтоОпт,тхтНеликвид,ПечШтрихКод,чтоПечатать);
		РаспечататьТаблицу(Таб,	БыстраяПечать,чтоПечатать,текРаспечатан);
	КонецЕсли;
	
	Если спрКонтрПрава.ПроверитьРазрешениеГруппыСМС(Контрагент) <> 0 Тогда
		Если подтвержденСМС = 1 Тогда
			отправленоСМССумма = дополненияТорговля.ПолучитьСостояниеДокумента(Контекст,"отправленоСМССумма"); 
			
			Если Окр(отправленоСМССумма,0) <> Окр(Итог("СуммаСНДС"),0) Тогда
				смс = СоздатьОбъект("sms");
				текСообщение = "Ваш заказ № ";
				Если КатегорияЦен = Константа.РозничнаяКатегорияЦен Тогда
					
					процент = Окр((Итог("СуммаБезСкидки") - Итог("СуммаБезНДС")) * 100 / Итог("СуммаБезСкидки"),2);
					процент = "("+процент+"%)";
					текСообщение = текСообщение + Прав(НомерДок,6) + " на сумму " + Окр(Итог("СуммаСНДС"),2) + " грн., скидка составила " + (Окр(Итог("СуммаБезСкидки") - Итог("СуммаСНДС"),2)) + " грн. " + процент;
				Иначе
					текСообщение = текСообщение + Прав(НомерДок,6) + " на сумму " + Окр(Итог("СуммаСНДС"),2) + " грн.";
				КонецЕсли;
				
				//отладка
				Если НазваниеНабораПрав() = "Администратор" Тогда
					Сообщить("от администратора СМС не отправляется. Текст: " + текСообщение);
				Иначе
					смс.ОтправитьТурбоСМС(Контрагент, текСообщение);
					дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"отправленоСМССумма",Окр(Итог("СуммаСНДС"),2));
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	
	//Если НазваниеНабораПрав() <> "Администратор" Тогда
	//дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"распечатан",текРаспечатан + 1);
	//		УстановитьНадписьРаспечатан(); //-ralex, 06-08-22 15:27
	//КонецЕсли;
	
	//Если БыстраяПечать = 1 Тогда
	//Иначе	
	//	Таб.ТолькоПросмотр(1);
	//	Если Найти("Администратор,Продавец_Вячеслав",НазваниеНабораПрав()) = 0 Тогда
	//		Таб.Защита(1);
	//	Иначе
	//		Таб.Защита(Константа.ФлагЗащитыТаблиц);
	//	КонецЕсли;      
	//	Таб.Опции(0,0,,);                           
	//	Таб.параметрыСтраницы(1,,,,,5,5,,,1,,); 
	//	
	//	Если (ВРЕГ(ИмяПользователя()) = "СВЕТА") ИЛИ (ВРЕГ(ИмяПользователя()) = врег("таня")) 
	//	Тогда  
	//		//Татьяна_Ленина
	//		Таб.параметрыСтраницы(1,,,,,,,,,1,,);	 
	//		Таб.Напечатать(1);
	//	Иначе
	//		Если (ВРЕГ(ИмяПользователя()) = "ИННА") ИЛИ (ВРЕГ(ИмяПользователя()) = "таня1") Тогда
	//			Таб.параметрыСтраницы(1,,,,,,,,,1,,"Canon LBP6020"); 
	//			Таб.параметрыСтраницы(1,,,,,,,,,1,,);
	//			Таб.Напечатать(1);                 
	//		ИначеЕсли ВРЕГ(ИмяПользователя()) = врег("Игорь") тогда
	//			Таб.параметрыСтраницы(1,,,,,,,,,1,,); 
	//			Таб.Напечатать(1);
	//		else
	//			Если названиенабораправ()<>"Администратор" тогда
	//				Таб.Напечатать(1); 
	//			Иначе
	//				Если чтоПечатать = "РН" Тогда
	//					ВывестиВоФрейм(Таб);
	//				Иначе
	//					Таб.Показать("ПЕЧАТЬ: Расходная накладная","");
	//				КонецЕсли;
	//			КонецЕсли;	
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЕсли;	    
КонецПроцедуры

//======================================================================
Процедура РаспечататьТаблицу(Таб,БыстраяПечать = 0,чтоПечатать,текРаспечатан,флВыбораПринтера = 0,тхтОкнаВыбораПринтера = "")
	Если БыстраяПечать = 1 Тогда
	Иначе
		имяПринтера = "";
		показыватьДиалогВыбораПринтера = 1;
		Если (флВыбораПринтера = 1)  Тогда
			Предупреждение(тхтОкнаВыбораПринтера);
		КонецЕсли;
		
		//Если (флВыбораПринтера = 1) и (НазваниеНабораПрав() <> "Администратор") Тогда
		//	спсПринтеров = Сервис.ПолучитьСписокПринтеров();
		//	Если спсПринтеров.РазмерСписка() <> 0 Тогда
		//		//Для сч = 1 По спсПринтеров.размерСписка() Цикл
		//		//	имяПринтера = спсПринтеров.ПолучитьЗначение(сч,);
		//		//	Если Найти(имяПринтера,"80 mm Series Printer") <> 0 Тогда
		//		//		Прервать;
		//		//	Иначе
		//		//		имяПринтера = "";
		//		//	КонецЕсли;
		//		//КонецЦикла;
		//		
		//		Если имяПринтера = "" Тогда //не нашли принтер
		//			Если спсПринтеров.ВыбратьЗначение(имяПринтера,тхтОкнаВыбораПринтера,,,0) <> 1 Тогда
		//				Возврат;
		//			КонецЕсли;
		//		КонецЕсли;	
		//		показыватьДиалогВыбораПринтера = 0;
		//	КонецЕсли;
		//КонецЕсли;	
		
		Таб.ТолькоПросмотр(1);
		Если Найти("Администратор,Продавец_Вячеслав",НазваниеНабораПрав()) = 0 Тогда
			Таб.Защита(1);
		Иначе
			Таб.Защита(Константа.ФлагЗащитыТаблиц);
		КонецЕсли;      
		Таб.Опции(0,0,,);                           
		Таб.параметрыСтраницы(1,,,,,5,5,,,1,,имяПринтера); 
		
		Если (ВРЕГ(ИмяПользователя()) = "СВЕТА") ИЛИ (ВРЕГ(ИмяПользователя()) = врег("таня")) 
		Тогда  
			//Татьяна_Ленина
			Таб.параметрыСтраницы(1,,,,,,,,,1,,имяПринтера);	
			Если чтоПечатать = "листКомлектации" Тогда
				Таб.Показать("ПЕЧАТЬ: Лист комплектации","");
			Иначе
				Таб.Напечатать(показыватьДиалогВыбораПринтера);
			КонецЕсли;
		Иначе
			Если (ВРЕГ(ИмяПользователя()) = "ИННА") ИЛИ (ВРЕГ(ИмяПользователя()) = "таня1") Тогда
				Таб.параметрыСтраницы(1,,,,,,,,,1,,имяПринтера); 
				Если чтоПечатать = "листКомлектации" Тогда
					Таб.Показать("ПЕЧАТЬ: Лист комплектации","");
				Иначе
					Таб.Напечатать(показыватьДиалогВыбораПринтера);
				КонецЕсли;
			ИначеЕсли ВРЕГ(ИмяПользователя()) = врег("Игорь") тогда
				Таб.параметрыСтраницы(1,,,,,,,,,1,,имяПринтера); 
				Если чтоПечатать = "листКомлектации" Тогда
					Таб.Показать("ПЕЧАТЬ: Лист комплектации","");
				Иначе
					Таб.Напечатать(показыватьДиалогВыбораПринтера);
				КонецЕсли;
			else
				Если названиенабораправ()<>"Администратор" тогда
					Если чтоПечатать = "листКомлектации" Тогда
						Таб.Показать("ПЕЧАТЬ: Лист комплектации","");
					Иначе
						Таб.Напечатать(показыватьДиалогВыбораПринтера);
					КонецЕсли;
				Иначе
					Если чтоПечатать = "РН" Тогда
						ВывестиВоФрейм(Таб);
					Иначе
						Таб.Показать("ПЕЧАТЬ: Расходная накладная","");
					КонецЕсли;
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	Если чтоПечатать <> "листКомлектации" Тогда
		дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"распечатан",текРаспечатан + 1);
		Если текРаспечатан = 0 Тогда
			дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"распечатанДата",ТекущаяДата());
			дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"распечатанВремя",ТекущееВремя());
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // РаспечататьТаблицу()

Процедура ВыборВариантаПечати()
	Если контрагент.стоппечать=0 тогда
		выбЗн = 0;
		спсМеню = СоздатьОбъект("СписокЗначений");
		спсМеню.ДобавитьЗначение("документ","документ");
		спсМеню.ДобавитьЗначение("документ_А7","документ А7");
		спсМеню.ДобавитьЗначение("2РН_А7","на Склад + 2 экз. РН формат А7");
		спсМеню.ДобавитьЗначение("1РН_А7","на Склад + 1 экз. РН формат А7");
		Если НазваниеНабораПрав() = "Администратор" Тогда
			спсМеню.ДобавитьЗначение("РН",">>расходная накладная");
		КонецЕсли;
		спсМеню.ДобавитьЗначение("Заказ","Заказ на бланке");
		
		//+ralex, 22-10-23 22:52
		Если (Проведен() = 1) и (ЧекРаспечатан = 0)  и (глПользователь.КассирРРО = 1) Тогда
			Если (НазваниеНабораПрав() = "Администратор") Тогда
				спсМеню.ДобавитьЗначение("чек","Друкувати на ПРРО");
			ИначеЕсли (Контрагент.ВидКонтрагента = Перечисление.ВидыКонтрагентов.ЧастноеЛицо) и (КатегорияЦен = Константа.РозничнаяКатегорияЦен) Тогда
				спсМеню.ДобавитьЗначение("чек","Друкувати на ПРРО");
			КонецЕсли;
		ИначеЕсли ПустаяСтрока(ФискальныйНомерЧека) = 0 Тогда
			спсМеню.ДобавитьЗначение("viber","відправити чек на Viber");
			спсМеню.ДобавитьЗначение("sms","відправити чек СМС");
			спсМеню.ДобавитьЗначение("email","відправити чек email");
		КонецЕсли;
		//+/------------------------
		
		Если спсМеню.ВыбратьЗначение(выбЗн,,,,1) <> 1 Тогда
			Возврат;
		КонецЕсли;
		Если выбЗн = "Заказ" Тогда
			спсПарам = СоздатьОбъект("СписокЗначений");
			спсПарам.ДобавитьЗначение(ТекущийДокумент(),"Док");
			ОткрытьФормуМодально("Обработка.ПечатьЗаказаДвери",спсПарам);
			Возврат;
		ИначеЕсли выбЗн = "чек" Тогда
			спрПРРО = СоздатьОбъект("Справочник.ПРРО");
			спрПРРО.ВыбратьЭлементыПоРеквизиту("Фирма",Фирма);
			ФН = "";
			Пока спрПРРО.ПолучитьЭлемент() = 1 Цикл
				Если спрПРРО.Рабочий = Перечисление.ДаНет.Да Тогда
					ФН = спрПРРО.ФискальныйНомер;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если ПустоеЗначение(ФН) = 1 Тогда
				Предупреждение("Для фірми "+Фирма+" не вказаний ПРРО");
				Возврат;
			КонецЕсли;
			спПарам = СоздатьОбъект("СписокЗначений");
			спПарам.Установить("Конт",ТекущийДокумент());
			спПарам.Установить("ЧтоДелать","ПечатьЧека");
			спПарам.Установить("ПродажаВозврат",1);
			спПарам.Установить("ФискальныйНомер",ФН);
			глРасшифровка = спПарам;
			ОткрытьФормуМодально("Обработка.ОбслуживаниеЭККА_ВчасноКасса",спПарам);
			
			ошибка = спПарам.Получить("Ошибка");
			ФискальныйНомерЧека = спПарам.Получить("ФискальныйНомерЧека");
			ДатаВремяЧека = спПарам.Получить("ДатаВремя");
			НомерПРРО = спПарам.Получить("ФН");
			дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"ФискальныйНомерЧека",ФискальныйНомерЧека);
			дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"ДатаВремяЧека",ДатаВремяЧека);
			дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"кассирЧека",глПользователь);
			дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"НомерПРРО",глПользователь);
			Если ошибка = 0 Тогда
				ЧекРаспечатан = 1;
			КонецЕсли;
			Провести();
			Форма.Закрыть(0);
			Возврат;
		ИначеЕсли (выбЗн = "viber") или (выбЗн = "sms") или (выбЗн = "email") Тогда
			спрПРРО = СоздатьОбъект("Справочник.ПРРО");
			спрПРРО.ВыбратьЭлементыПоРеквизиту("Фирма",Фирма);
			ФН = "";
			Пока спрПРРО.ПолучитьЭлемент() = 1 Цикл
				Если спрПРРО.Рабочий = Перечисление.ДаНет.Да Тогда
					ФН = спрПРРО.ФискальныйНомер;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если ПустоеЗначение(ФН) = 1 Тогда
				Предупреждение("Для фірми "+Фирма+" не вказаний ПРРО");
				Возврат;
			КонецЕсли;
			спПарам = СоздатьОбъект("СписокЗначений");
			спПарам.Установить("Конт",ТекущийДокумент());
			спПарам.Установить("ЧтоДелать",выбЗн);
			спПарам.Установить("ФискальныйНомер",ФН);
			спПарам.Установить("ФНЧека",СокрЛП(ФискальныйНомерЧека));
			КудаОтправленЧек = выбЗн;
			
			Если (выбЗн = "viber") или (выбЗн = "sms") Тогда
				спсТелефоны = СоздатьОбъект("СписокЗначений");
				тел1 = СокрЛП(Контрагент.Телефон1);
				Если СтрДлина(тел1) = 10 Тогда
					спсТелефоны.ДобавитьЗначение("+38"+тел1);
				ИначеЕсли СтрДлина(тел1) = 12 Тогда
					спсТелефоны.ДобавитьЗначение("+"+тел1);
				КонецЕсли;
				тел2 = СокрЛП(Контрагент.Телефон2);
				Если СтрДлина(тел2) = 10 Тогда
					спсТелефоны.ДобавитьЗначение("+38"+тел2);
				ИначеЕсли СтрДлина(тел2) = 12 Тогда
					спсТелефоны.ДобавитьЗначение("+"+тел2);
				КонецЕсли;
				спсТелефоны.ДобавитьЗначение(3,"ввести номер...");
				
				выбЗн = "";
				Если спсТелефоны.ВыбратьЗначение(выбЗн,,,,1) <> 1 Тогда
					Возврат;
				КонецЕсли;
				Если выбЗн = 3 Тогда
					выбЗн = "+380";
					Если ВвестиСтроку(выбЗн,"введите номер телефона",13) <> 1 Тогда
						Возврат;
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли (выбЗн = "email") Тогда
				спс = СоздатьОбъект("СписокЗначений");
				email = СокрЛП(Контрагент.АдресПолучателя);
				Если СтрДлина(email) <> 0 Тогда
					спс.ДобавитьЗначение(email);
				КонецЕсли;
				спс.ДобавитьЗначение(3,"ввести email...");
				
				выбЗн = "";
				Если спс.ВыбратьЗначение(выбЗн,,,,1) <> 1 Тогда
					Возврат;
				КонецЕсли;
				Если выбЗн = 3 Тогда
					выбЗн = "";
					Если ВвестиСтроку(выбЗн,"введите email",40) <> 1 Тогда
						Возврат;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			спПарам.Установить("email_телефон",выбЗн);
			адресКудаОтправленЧек = выбЗн;
			глРасшифровка = спПарам;
			ОткрытьФормуМодально("Обработка.ОбслуживаниеЭККА_ВчасноКасса",спПарам);
			Провести();
			Возврат;
		КонецЕсли;
		
		Печать(,выбЗн);
	КонецЕсли;
	//Если НазваниеНабораПрав() <> "Администратор" Тогда
	//приОткрытии(); //доступы к элементам формы.
	//КонецЕсли;
	//-ralex, 12-03-23 22:07
	Если НазваниеНабораПрав() <> "Администратор" Тогда
		Если (выбЗн <>"РН") Тогда
			Форма.Закрыть(0);
		КонецЕсли;
	КонецЕсли;
	//-/------------------------
КонецПроцедуры

Процедура ВывестиQRCodeСтройбум(ОбъектКартинка)
	Сервис.НарисоватьШтрихкод(ОбъектКартинка,58,"https://stroibum.com.ua",0);
КонецПроцедуры

Процедура ВывестиQRCodeОтзывМенеждер(ОбъектКартинка)
	qrCode = "";
	Если ПустоеЗначение(Автор.Сотрудник) = 0 Тогда
		qrCode = СокрЛП(Автор.Сотрудник.qrCode);
	КонецЕсли;
	Если ПустаяСтрока(qrCode) = 0 Тогда
		Сервис.НарисоватьШтрихкод(ОбъектКартинка,58,qrCode,0);
	КонецЕсли;
КонецПроцедуры

Процедура ВывестиQRCodeОтзывВрезка(ОбъектКартинка)
	текЗаказ = НайтиЗаказДвери();
	Если ТипЗначения(текЗаказ) <> 12 Тогда
		Возврат;
	КонецЕсли;
	Исполнитель = текЗаказ.Исполнитель;
	
	Если ПустоеЗначение(Исполнитель) = 0 Тогда
		qrCode = СокрЛП(Исполнитель.qrCode);
	КонецЕсли;
	Если ПустаяСтрока(qrCode) = 0 Тогда
		Сервис.НарисоватьШтрихкод(ОбъектКартинка,58,qrCode,0);
	КонецЕсли;
КонецПроцедуры

Процедура ВывестиQRCodeНаИнструкцию(ОбъектКартинка)
	Если ПустаяСтрока(qrCodeИнструкция) = 0 Тогда
		Сервис.НарисоватьШтрихкод(ОбъектКартинка,58,qrCodeИнструкция,0);
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура СрПечать()
	Если (названиенабораправ()="Продавець") ИЛИ (Найти(Врег(НазваниеНабораПрав()),"МЕНЕДЖЕР") <> 0)Тогда
		СТАТУСВОЗВРАТА(0);    
	КонецЕсли;	
	ВП = Валюта;  
	КурсПечати = Курс;                     
	ДатаКурса = Дата_Курса;
	Таб = СоздатьОбъект("Таблица");  	
	ПечФорма = "Таблица1";
	Таб.ИсходнаяТаблица(ПечФорма);
	Таб.ВывестиСекцию("Секция_7"); 
	Ном = 1;    
	СпрКатЦен=создатьобъект("Справочник.КатегорииЦен");
	СпрЦен=создатьобъект("Справочник.Цены");
	СпрКатЦен.НайтиПоНаименованию(сокрлп(КатегорияЦен));
	ВидЗак=СпрКатЦен.ТекущийЭлемент();
	ВыбратьСтроки();              
	ИтБезНДСРасч=0;
	Пока ПолучитьСтроку()=1 Цикл                
		ПечЦена = ЦенаБезНДС;
		ПечСумма = СуммаБезСкидки; 
		ценатовара =глВернутьЦену(товар, ВидЗак);
		ПечЦенаРасЧ = ЦенаТовара.цена.получить(датадок);
		ПечСуммаРасЧ =ПечЦенаРасЧ*Количество;  
		ИтБезНДСРасч=ИтБезНДСРасч+ ПечСуммаРасЧ;
		Таб.ВывестиСекцию("Строка");
		Ном = Ном+1;
	КонецЦикла;
	Таб.ВывестиСекцию("Дно"); 
	
	Таб.ТолькоПросмотр(1);
	Если названиенабораправ() <> "Администратор" Тогда
		Таб.Защита(1);
	Иначе
		Таб.Защита(Константа.ФлагЗащитыТаблиц);
	КонецЕсли;      
	Таб.Опции(0,0,,);
	Таб.Показать("ПЕЧАТЬ: Расходная накладная","");
	дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"распечатан",1); //+ralex, 19-12-21 23:04
КонецПроцедуры

//возвращает многострочный текст с остатками товара по складам

Функция ОстаткиСтрокой(ОстаткиТоваров,текТовар,текЕд,ЕдИзмМесто,ЕдИзмШтука,текСкладскоеМесто)
	Перем Результат;
	Если ПустоеЗначение(текТовар)=1 Тогда
		Возврат "";
	КонецЕсли;
	ИзмФирма=глПустаяФирма;
	Результат="";
	
	Если ТипЗначенияСтр(спсМХ) <> "СписокЗначений" Тогда
		спсМХ =  СоздатьОбъект("СписокЗначений");
		спсМХ.ДобавитьЗначение(Склад);
	КонецЕсли;
	
	// если объекты регистры не переданы через параметры процедуры, то создаем.
	// при этом врем. расчет не производим
	Если ПустоеЗначение(ОстаткиТоваров)=1 Тогда
		ОстаткиТоваров=СоздатьОбъект("Регистр.ОстаткиТоваров");
	КонецЕсли;
	Для сч = 1 По спсМХ.РазмерСписка() Цикл
		текМХ = спсМХ.ПолучитьЗначение(сч,);
		ОстатокТовара=ОстаткиТоваров.СводныйОстаток(ИзмФирма,текТовар,текМХ,Сорт,текСкладскоеМесто,"ОстатокТовара"); 
		Попытка
			Если текЕд.Коэффициент <> 1 Тогда
				ОстатокТовара = ОстатокТовара/текЕд.Коэффициент;
			КонецЕсли;
		Исключение
			//разберем ошибку
			Если ПустоеЗначение(текЕд) = 1 Тогда
				Сообщить("Для товара " + текТовар.Код + " " + текТовар + " не найдена единица измерения " + текЕд);
			КонецЕсли;
			Если ПустоеЗначение(текТовар) = 1 Тогда
				Сообщить("В функцию передан пустой параметр ""текТовар""");
			КонецЕсли;
			Сообщить(ОписаниеОшибки());			
		КонецПопытки;
		Если ОстатокТовара = 0 Тогда
			Продолжить;
		КонецЕсли;
		///рассчитаем остаток вдругих единицах измерения
		остМесто = "";	остШтука = "";
		
		Если ЕдИзмМесто <> 0 Тогда
			Если текЕд <> ЕдИзмМесто Тогда
				остМесто = ОстатокТовара/текЕд.коэффициент / ЕдИзмМесто.Коэффициент;
				остМесто = СокрЛП(Формат(Окр(остМесто,2),глФорматКоличестваВформах))+" "+ЕдИзмМесто.Единица;
			КонецЕсли;
		КонецЕсли;
		
		Если ЕдИзмШтука <> 0 Тогда
			Если текЕд <> ЕдИзмШтука Тогда
				остШтука = ОстатокТовара/текЕд.коэффициент / ЕдИзмШтука.Коэффициент;
				остШтука = СокрЛП(Формат(Окр(остШтука,2),глФорматКоличестваВформах))+" "+ЕдИзмШтука.Единица;
			КонецЕсли;
		КонецЕсли;
		
		ОстатокТовара = СокрЛП(Формат(Окр(ОстатокТовара,2),глФорматКоличестваВформах))+" "+текЕд.Единица;
		
		Результат = Результат + СокрЛП(текМХ)+ ": " + ОстатокТовара + ?(остМесто = "","","; " + остМесто) + ?(остШтука = "","","; " + остШтука);
	КонецЦикла;
	
	
	//Если (УчитыватьРезерв = 1) и (Сорт = КондиционныйТовар) Тогда //резервируется только кондиционній товар
	//	Если ПустоеЗначение(РезервыТоваров)=1 Тогда
	//		РезервыТоваров=СоздатьОбъект("Регистр.РезервыТоваров");
	//	КонецЕсли;
	//	// проверяем резерв товара
	//	Если НЕ(Константа.РазрешитьПродаватьРезерв=Да) Тогда
	//		// Вычислим, сколько всего данного товара
	//		// Вычислим, сколько зарезервировано всего данного товара
	//		Резерв=РезервыТоваров.СводныйОстаток(Конт.Товар,,"РезервТовара");
	//		РезервПоСчету=0;
	//		Если Конт.Вид()="РасходнаяНакладная" Тогда
	//			// Если выписывается накладная на основании Счета
	//			Если Конт.ДокументОснование.Вид()="Счет" Тогда
	//				// Вычислим, сколько зарезервировано именно по данному Счету
	//				РезервПоСчету=РезервыТоваров.Остаток(Конт.Товар,Конт.ДокументОснование,"РезервТовара");
	//			КонецЕсли;
	//		КонецЕсли;
	//		ПолныйОстаток=ОстаткиТоваров.СводныйОстаток(ИзмФирма,Конт.Товар,Конт.Склад,Сорт,"ОстатокТовара"); //"" - кондиционный товар
	//		СвободныйРесурс=ПолныйОстаток-Резерв+РезервПоСчету;
	//		Если СвободныйРесурс<0  Тогда
	//			// товара не хватает на все зарезервированные Счета
	//			СвободныйРесурс=0;
	//		КонецЕсли;
	//		Если СвободныйРесурс<ОстатокТовара Тогда
	//			ОстатокТовара=СвободныйРесурс;
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЕсли;
	Если ПустаяСтрока(Результат) = 1 Тогда
		Результат = "товар отсутствует."
	КонецЕсли;
	Возврат Результат;
КонецФункции

Функция ОстатокТовара(ОстаткиТоваров,текСклад,текТовар,текЕд)
	Если ПустоеЗначение(текТовар)=1 Тогда
		Возврат 0;
	КонецЕсли;
	ИзмФирма=глПустаяФирма;
	ОстатокТовара=0;
	
	// если объекты регистры не переданы через параметры процедуры, то создаем.
	// при этом врем. расчет не производим
	Если ПустоеЗначение(ОстаткиТоваров)=1 Тогда
		ОстаткиТоваров=СоздатьОбъект("Регистр.ОстаткиТоваров");
	КонецЕсли;
	
	ОстатокТовара=ОстаткиТоваров.СводныйОстаток(ИзмФирма,текТовар,текСклад,Сорт,,"ОстатокТовара"); 
	Попытка
		Если текЕд.Коэффициент <> 1 Тогда
			ОстатокТовара = ОстатокТовара/текЕд.Коэффициент;
		КонецЕсли;
	Исключение КонецПопытки;
	Возврат ОстатокТовара;
КонецФункции

// ===============================
// Предопределенные процедуры

// ===============================
Процедура ПриВыбореЗакладки(Номер,Значение)     
	форма.Закладки.ТекущаяСтрока(Номер);
	Форма.ИспользоватьСлой("Совместный,"+Значение,2);
	УстДоступность();
	УстДоступностьКнопок(); 
	глУстановкаРеквизитаТип(Контекст);
КонецПроцедуры

// ===============================
Процедура ВводНового(Скопирован) //Предопределенная процедура
	новый=1;   
	//	распечатан=0; //-ralex, 19-12-21 23:05
	глЗаполнитьШапку(Контекст);
	
	Если Скопирован=1 Тогда	//копирование документа
		ПричинаВозвратаПок = "";
		квоОшибок = 0;
		комментОшибки = "";
		Комментарий = "";
		КомментарийАдм = "";
		Пересчитан = 0;
		ПрСкидки = 0;
		подтвержденСМС = 0;
		смсСуммаОтправлено = 0;
		СкладОтгрузки = 0;
		СкладНеОтгрузки = 0;
		отборОтгружен = 0;
		ЧекРаспечатан = 0;
		ФискальныйНомерЧека = "";
		ДатаВремяЧека = "";
		КудаОтправленЧек = "";
		адресКудаОтправленЧек = "";
		
		//АвторПровел = "";
		//АвторПервоеПроведение = "";
		//ДатаВремяПервоеПроведение = "";
		//ДатаВремяПоследнееПроведение = "";
		
		Если ПустоеЗначение(Сорт) = 1 Тогда
			Сорт = КондиционныйТовар;
		КонецЕсли;
		ИзмДатаДок();
		//+ralex, 27-04-21 23:58
		Если Константа.вклПроверкуКлиентаСМС = Да Тогда
			КатегорияЦен = Константа.РозничнаяКатегорияЦен;
		КонецЕсли;
		ИзмКонтрагент();
		//+/------------------------
		Возврат;
	КонецЕсли;
	
	ДатаДок=РабочаяДата();             
	Если ПустоеЗначение(Сорт) = 1 Тогда
		Сорт = КондиционныйТовар;
	КонецЕсли;
	
	Если ПустоеЗначение(глАктивныйДоговор) = 0 Тогда
		Контрагент = глАктивныйДоговор.Владелец;
		//+ralex, 2018-04-29 21:50:38
		Если спрКонтрПрава.ПроверитьРазрешение(Контрагент) = 0 Тогда
			Предупреждение("Вам запрещено создавать документы для этого контрагента",10);
			СтатусВозврата(0); Возврат;
		КонецЕсли;
		//+/ralex, 2018-04-29 21:50:38
		
		Договор = глАктивныйДоговор;
		КатегорияЦен = Контрагент.КатегорияЦен;
		СтарыйКонтрагент = Контрагент;
		ТипЦенСкидки = "";
	Иначе
		Контрагент=Константа.ОсновнойПокупатель;
		//+ralex, 2018-04-29 21:50:38
		Если спрКонтрПрава.ПроверитьРазрешение(Контрагент) = 0 Тогда
			Предупреждение("Вам запрещено создавать документы для этого контрагента",10);
			СтатусВозврата(0); Возврат;
		КонецЕсли;
		//+/ralex, 2018-04-29 21:50:38
		ИзмКонтрагент();
	КонецЕсли;
	
	
	Если Форма.Параметр="Возврат" Тогда                          
		ВидОперации = 1;
		Если ПустоеЗначение(Контрагент) = 1 Тогда
			Контрагент=Константа.ОсновнойПоставщик;
		КонецЕсли;
		Если ПустоеЗначение(Контрагент) = 0 Тогда
			ВремКатегорияЦен = Контрагент.КатегорияЦенПоставщика;
		КонецЕсли;
		Валюта=Константа.ОсновнаяВалютаЗакупки;
	Иначе
		ВидОперации = 0;
		Если ПустоеЗначение(Контрагент) = 1 Тогда
			Контрагент=Константа.ОсновнойПокупатель;
		КонецЕсли;
		Если ПустоеЗначение(Контрагент) = 0 Тогда
			КатегорияЦен = Контрагент.КатегорияЦен;
		КонецЕсли;
		Валюта=Константа.ОсновнаяВалютаПродажи;
	КонецЕсли;
	
	
	Дата_Курса = ДатаДок;
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта = Гривня;
	КонецЕсли;
	
	Курс=глКурсДляВалюты(Валюта,Дата_Курса);
	
	Если ПустоеЗначение(КатегорияЦен)=1 Тогда
		КатегорияЦен = Автор.КатегорияЦен;
	КонецЕсли;
	
	ИзмДоговор();
	
	Если ПустоеЗначение(ВидТорговли)=1 Тогда
		ВидТорговли = Константа.ОсновнойВидТорговли;
	КонецЕсли;
	
	ВыбранВидТорговли();
	
	Если ВидТорговли = Перечисление.ВидыТорговли.Нал Тогда
		Касса = глНайтиКассу(Фирма,Валюта);
	КонецЕсли; 
	//+ralex.zp@gmail.com, 2015-02-19 23:07:12
	//Сказал владелец. В расходных накладных есть строка коментарии,когда создаеш новые расходные,часто старые коментарии появляються.
	//на всякий случай просто
	Комментарий = "";
	//+/ralex.zp@gmail.com, 2015-02-19 23:07:12
	Неликвид = 0;
	//+ralex, 2018-02-16 15:54:54
	ИзмДатаДок();
	//+/ralex, 2018-02-16 15:54:54
КонецПроцедуры

// ===============================
Процедура ВводНаОсновании(ДокОснование) //Предопределенная процедура
	Перем ВидОсн;
	
	новый=1;   
	//-ralex, 19-12-21 23:05
	//распечатан=0;
	//-/------------------------
	ВидОсн = ДокОснование.Вид();
	отгружен = 0;
	отборОтгружен = 0;
	датаОтгрузки = 0;
	времяОтгрузки = 0;
	id_задачиВ_CRM = "";
	срокИсполненияЗадачи = 0;
	ОписаниеЗадачи = "";
	СотрудникЗадачи = 0;
	грузчик1 = 0;
	грузчик2 = 0;
	грузчик3 = 0;
	грузчик4 = 0;
	грузчик5 = 0;
	Отпустил = 0;
	
	Если (ВидОсн="Счет") Тогда
		ВидОперации = 0;	
		Сорт = ДокОснование.Сорт;
		ПрСкидки = ДокОснование.ПрСкидки;
		подтвержденСМС = ДокОснование.подтвержденСМС;
		откудаКлиент = докОснование.откудаКлиент;
		прочееОткудаПришел = ДокОснование.прочееОткудаПришел;
		флСамовывоз = ДокОснование.флСамовывоз;
		
	ИначеЕсли ВидОсн = "ПриходнаяНакладная" Тогда
		Если ДокОснование.ВидОперации = 1 Тогда
			СтатусВозврата(0);
			Предупреждение("Расходную накладную нельзя выписывать"+РазделительСтрок+
			"на основании приходной накладной с признаком возврат!");
			Возврат;
		КонецЕсли;
		ВидОперации = 1;
	ИначеЕсли ВидОсн="ВводПартийТоваров" Тогда
		ВидОперации = 1;
	ИначеЕсли ВидОсн="Рекламация" Тогда
		ДокРекламация = ДокОснование;
		Если ПустоеЗначение(ДокОснование.ДокументОснование) = 1 Тогда
			//*ralex, 28-10-21 23:21
			//СтатусВозврата(0);
			//Предупреждение("Возвратную накладную нельзя выписывать"+РазделительСтрок+
			//               "на основании док. Рекламация у которого нет документа - основания");
			//Возврат;
			// -------- заменено на:
		Иначе
			ДокОснование = ДокОснование.ДокументОснование;
			//*/------------------------
		КонецЕсли;
		ВидОперации = 1;
		неликвид = 1;
		Сорт = рекламационныйТовар;
		КатегорияЦен = константа.Закупочная;
	КонецЕсли;
	
	Если ПустоеЗначение(Сорт) = 1 Тогда
		Сорт = КондиционныйТовар;
	КонецЕсли;
	
	Автор = глПользователь;
	ДатаДок=РабочаяДата();
	
	ЗасчитыватьОплатуПоСлужДоговору = 0;
	
	ПриВводеНаОсновании(ДокОснование);  
	
	//+ralex, 2018-04-29 21:50:38
	Если спрКонтрПрава.ПроверитьРазрешение(Контрагент) = 0 Тогда
		Контрагент = СтарыйКонтрагент;
		Предупреждение("Вам запрещено создавать документы для этого контрагента",10);
		СтатусВозврата(0); Возврат;
	КонецЕсли;
	//+/ralex, 2018-04-29 21:50:38
	
	Если ПустоеЗначение(КатегорияЦен)=1 Тогда
		Если ПустоеЗначение(Контрагент)=0 Тогда
			КатегорияЦен = Контрагент.КатегорияЦен;    
		КонецЕсли;	    
	КонецЕсли;          
	
	Если ПустоеЗначение(КатегорияЦен)=1 Тогда
		КатегорияЦен = Автор.КатегорияЦен;
	КонецЕсли;
	//+ralex.zp@gmail.com, 2015-02-19 23:07:12
	//Сказал владелец. В расходных накладных есть строка коментарии,когда создаеш новые расходные,часто старые коментарии появляються.
	//на всякий случай просто
	Комментарий = "";
	//+/ralex.zp@gmail.com, 2015-02-19 23:07:12
	//+ralex, 2018-02-16 15:23:55
	ИзмДатаДок();
	//+/ralex, 2018-02-16 15:23:55
КонецПроцедуры          

Процедура ПриНачалеРедактированияСтроки()
	//+ralex, 21-12-19 22:38
	Если ПустоеЗначение(Склад) = 1 Тогда
		Предупреждение("Не выбран склад!",5);
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	//+/ralex, 21-12-19 22:38
	
	Если ПустоеЗначение(Предпочтение)=1 Тогда
		Форма.Предпочтение.НазначитьТип("Справочник.Контрагенты");
		Предпочтение=ПустоеЗначение("Справочник.Контрагенты");
	КонецЕсли;
КонецПроцедуры

Процедура ПриРедактированииНовойСтроки()
	//+ralex, 21-12-19 22:38
	Если ПустоеЗначение(Склад) = 1 Тогда
		Предупреждение("Не выбран склад!",5);
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	//+/ralex, 21-12-19 22:38
	
	Форма.Предпочтение.НазначитьТип("Справочник.Контрагенты");
	Предпочтение=ПустоеЗначение("Справочник.Контрагенты");
КонецПроцедуры

//======================================================================
Функция НайтиЗаказДвери()
	текЗаказДвери = "";
	//*ralex, 12-01-22 18:05
	//Если ПустоеЗначение(ДокументОснование) = 0 Тогда
	//	ДокОсн = ДокументОснование;
	//Иначе
	//	Если Выбран() = 1 Тогда
	//		ДокОсн = ТекущийДокумент();
	//	КонецЕсли;
	//КонецЕсли;
	// -------- заменено на:
	ДокОсн = "";
	Если Выбран() = 1 Тогда
		ДокОсн = ТекущийДокумент();
	КонецЕсли;
	//*/------------------------
	Если ПустоеЗначение(ДокОсн) = 0 Тогда
		док = СоздатьОбъект("Документ");
		док.ВыбратьПодчиненныеДокументы(,,ДокОсн);
		Пока док.ПолучитьДокумент() = 1 Цикл
			Если док.Вид() = "ЗаказДвери" Тогда
				текЗаказДвери = док.ТекущийДокумент();
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Возврат текЗаказДвери;
КонецФункции

Функция НайтиРекламацию()
	текРекламация = "";
	Если ПустоеЗначение(ДокументОснование) = 0 Тогда
		ДокОсн = ДокументОснование;
	Иначе
		Если Выбран() = 1 Тогда
			ДокОсн = ТекущийДокумент();
		КонецЕсли;
	КонецЕсли;
	Если ПустоеЗначение(ДокОсн) = 0 Тогда
		док = СоздатьОбъект("Документ");
		док.ВыбратьПодчиненныеДокументы(,,ДокОсн);
		Пока док.ПолучитьДокумент() = 1 Цикл
			Если док.Вид() = "Рекламация" Тогда
				текРекламация = док.ТекущийДокумент();
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Возврат текРекламация;
КонецФункции

Процедура Врезка()
	текЗаказДвери = НайтиЗаказДвери();
	конт =  глВернутьКонтекст(Контекст);
	Если ПустоеЗначение(текЗаказДвери) = 0 Тогда
		ОткрытьФорму(текЗаказДвери,конт);
	Иначе
		Если Выбран() = 0 Тогда
			Если Вопрос("В начале документ должен быть записан. Записать?",4) <> 6 Тогда
				Возврат;
			Иначе
				Записать();
			КонецЕсли;
		КонецЕсли;
		ОткрытьФорму("Документ.ЗаказДвери",конт,ТекущийДокумент());
	КонецЕсли;
КонецПроцедуры // Врезка

Процедура ЗакрытьДокумент()
	//Сообщить("Закрываем документ");
	Форма.Закрыть(0);
КонецПроцедуры // ЗакрытьДокумент

//======================================================================
Процедура ПослеОткрытия()
	Если этоКладовщикШК = 1 Тогда
		расшФормы = СоздатьОбъект("РасширениеФормы");
		расшФормы.ОбработкаОжидания("ЗакрытьДокумент",60000); //1 сек = 1000 миллисекунд 
	Иначе
		спрКонтрПрава.ПроверитьСтопПечать(Контекст,0);
	КонецЕсли;
КонецПроцедуры // ПослеОткрытия

// ===============================
Процедура ПриОткрытии() //Предопределенная процедура
	Если (спрКонтрПрава.ПолучитьПравоПользователя(,"флПоказыватьТолькоДокПользователя") = 1) и (Автор <> глПользователь) Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	//+ralex, 02-05-23 11:36
	//в июле 2023 г. можно уже убрать. Исправление ошибки в старых документах.
	Если неликвид = 0 Тогда
		Сорт = КондиционныйТовар;
	КонецЕсли;
	//+/------------------------
	
	ЗаполнитьСпсПричиныВозврата(); //+ralex, 02-08-20 10:54
	
	спс = сорт_ПолучитьСписокСортов();
	спс.Выгрузить(спсСорта);
	
	текПоз = спсСорта.НайтиЗначение(Сорт);
	Если текПоз <> 0 Тогда
		спсСорта.ТекущаяСтрока(текПоз);
	КонецЕсли;	
	
	стНеликвид = Неликвид;
	стСорт = Сорт;
	сорт_УстДоступностьРеквизитов(Контекст);
	//+/ralex, 2017-02-16 17:11:28
	
	//*ralex, 17-05-19 12:02
	//Если (названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер")  ИЛИ (названиенабораправ()="МенеджерТоварищ")Тогда
	//	Если Пересчитан=1 тогда  
	//		Если Выбран() = 1 Тогда
	//			статусвозврата(0);
	//		Иначе
	//			Форма.ТолькоПросмотр(1);
	//		КонецЕсли;
	//		//статусвозврата(0);
	//	КонецЕсли;	
	//КонецЕсли;
	// -------- заменено на:
	//*ralex, 21-09-21 23:33
	//Если (названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер")  ИЛИ (названиенабораправ()="МенеджерТоварищ")Тогда
	// -------- заменено на:
	//Если (названиенабораправ()="Продавець") ИЛИ (Найти(Врег(НазваниеНабораПрав()),"МЕНЕДЖЕР") <> 0)Тогда
	////*/------------------------
	//	Если Пересчитан=1 тогда  
	//			Форма.ТолькоПросмотр(1);
	//	КонецЕсли;	
	//КонецЕсли;
	//*/ralex, 17-05-19 12:02
	Если этоКладовщикШК = 1 Тогда
		Форма.ТолькоПросмотр(1);
	КонецЕсли;
	
	НачальнаяДатаДокумента = ДатаДок;                
	Если названиенабораправ()="МенеджерТоварищ" тогда
		Если сокрлп(контрагент.родитель.код)<>"1" тогда
			форма.контрагент.доступность(0);
		КонецЕсли;	
		Если фирма<>глПользователь.ОсновнаяФирма тогда
			статусвозврата(0);
		КонецЕсли;
	КонецЕсли;	
	Если ПустоеЗначение(Форма.Параметр)=0 Тогда
		Если ТипЗначенияСтр(Форма.Параметр)="Строка" Тогда
			Если ВРег(Форма.Параметр)="БЫСТРАЯ ПРОДАЖА" Тогда
				ФлагБыстраяПродажа = Да;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;  
	Если новый<>1 тогда
		новый=0;
	КонецЕсли;  	
	
	Форма.ИспользоватьЗакладки(1);
	Если этоКладовщикШК = 0 Тогда
		Форма.Закладки.ДобавитьЗначение("Основной","Основные");
		Форма.Закладки.ДобавитьЗначение("Доверенность","Доверенность");
		Форма.Закладки.ДобавитьЗначение("Склад","Склад");
		Если НазваниеНабораПрав() = "Администратор" Тогда
			Форма.Закладки.ДобавитьЗначение("CRM","CRM");
		КонецЕсли;
		ПриВыбореЗакладки(1,"Основной");
		//Форма.ИспользоватьСлой("Совместный,Основной",2);  
	Иначе
		Форма.Закладки.ДобавитьЗначение("Основной","Основные");
		Форма.Закладки.ДобавитьЗначение("Склад","Склад");
		ПриВыбореЗакладки(2,"Склад");
		//Форма.ИспользоватьСлой("Совместный,Склад",2);  
	КонецЕсли;
	
	глПроверкаРазрешенияРедактирования(Контекст);
	текРаспечатан = дополненияТорговля.ПолучитьСостояниеДокумента(Контекст,"распечатан"); //+ralex, 19-12-21 23:06
	//	УстановитьНадписьРаспечатан(); //-ralex, 06-08-22 15:31
	
	//*ralex, 21-09-21 23:34
	//Если (названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер")  ИЛИ (названиенабораправ()="МенеджерТоварищ")Тогда 
	// -------- заменено на:
	Если (названиенабораправ()="Продавець") ИЛИ (Найти(Врег(НазваниеНабораПрав()),"МЕНЕДЖЕР") <> 0)Тогда 
		Если Пересчитан=1 тогда  
			Форма.ТолькоПросмотр(1);
		КонецЕсли;	
		
		//*/------------------------
		форма.ЦеныПрибыль.видимость(0);
		форма.СуммаПрибыль.видимость(0);
		форма.процентПрибыли.видимость(0);
		форма.кнПрибыль.видимость(0);
		Форма.ЦенаБезНДС.Доступность(0);
		Форма.ЦенаСНДС.Доступность(0);
		Форма.ЦенаСоСкидкой.Доступность(0);
		Форма.СуммаСкидки.Доступность(0);
		Форма.СуммаБезСкидки.Доступность(0);
		форма.СуммаБезНДС.Доступность(0);
		Форма.СуммаСНДС.Доступность(0);
		
		//форма.кнДействия.доступность(0);
		//	форма.кнДействия.видимость(0);  
		Если текРаспечатан <> 0 Тогда
			форма.кнподбор.доступность(0);
			Если Строка(ВидТорговли) = "За наличные" Тогда			
				форма.кнПечать.доступность(0);
			КонецЕсли;
		КонецЕсли;								
		ЕСли (проведен()=1) ИЛИ (ПометкаУдаления()=1) тогда		
			форма.толькопросмотр(1);	
		КонецЕсли;		
		форма.КнСрпечать.доступность(0);
		форма.категорияцен.доступность(0);
	КонецЕсли;
	Если (названиенабораправ()<>"Администратор") Тогда
		Форма.флБезДубликата.Видимость(0);
		Форма.разрешитьПечать.Видимость(0);
	КонецЕсли;	
	
	глУстановкаРеквизитаТип(Контекст);
	глУстВидимостьЦен(Контекст);
	глУстДостСумм(Контекст);
	
	ОбновитьНадписи();        
	СтарыйКонтрагент = Контрагент;
	СтараяДата = ДатаДок;    
	
	Если ПустоеЗначение(ВидТорговли)=1 Тогда
		ВидТорговли = Константа.ОсновнойВидТорговли;
		ВыбранВидТорговли();
	КонецЕсли;
	
	Если (ПустоеЗначение(причинаВозвратаПок) = 0) Тогда
		Если (ТипЗначенияСтр(ПричинаВозвратаПок) <> "Строка")  Тогда
			ПричинаВозврата = ПричинаВозвратаПок.ПорядковыйНомер();
			Если ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.ошибка Тогда
				ПричинаВозвратаПок = Перечисление.ПричиныВозвратаПокупателем.ошибкаМенеджера;
			КонецЕсли;
		КонецЕсли;
		поз = спсПричины.НайтиЗначение(ПричинаВозвратаПок);
		спсПричины.ТекущаяСтрока(поз);
	Иначе
		спсПричины.ТекущаяСтрока(1);
	КонецЕсли;
	
	разрешеныСкидки = получитьРазрешениеНаСкидки();
	спрКонтрПрава.ЗаполнитьРадиоОткудаПришелКлиент(контекст);
	
	УстДоступность();
	УстДоступностьКнопок();    
	УстДоступностьГлубина();
	
	//ЕСЛИ (ИмяПользователя() = "ОЛЕГ") ИЛИ (ИмяПользователя() = "ОЛЬГА")  ИЛИ (ИмяПользователя() = "1САдм") тогда
	//	форма.кнПересчитать.Видимость(1);
	//	форма.кнПересчитать.Доступность(1);
	//	форма.Пересчитан.Видимость(1);
	//	форма.Пересчитан.Доступность(1);
	//Иначе
	//	форма.кнПересчитать.Видимость(0);
	//	форма.Пересчитан.Видимость(0);
	//	форма.кнПересчитать.Доступность(0);
	//	форма.Пересчитан.Доступность(0);
	//КонецЕсли;	
	Если Форма.ТолькоПросмотр()=1 Тогда
		СписокДействий = глПолучитьСписокДействий("
		|СтруктураПодчиненности,
		|ДвиженияДокумента,
		|ВводНаОсновании,
		|ОткрытьВЖурнале,
		|Подчиненные,
		|ИзмКомментария");
	КонецЕсли;
	
	ЗаказДвери = НайтиЗаказДвери();
	Форма.Склад.ВыполнятьФормулуТолькоПриИзменении(1);
	стСклад = Склад;
	сорт_УстДоступностьРеквизитов(Контекст);
	флСОстатками = 1;
	//*ralex, 19-12-22 03:23
	//АвторКратко = Врег(Лев(Автор,2));
	// -------- заменено на:
	АвторКратко = глФИО(Автор.Сотрудник,2);
	//*/------------------------
	стСумма = Итог("СуммаСНДС");
	тзТЧ = СоздатьОбъект("ТаблицаЗначений");
	тзТЧ.НоваяКолонка("Товар","Справочник.Номенклатура");
	тзТЧ.НоваяКолонка("НачПартияПост","Справочник.ПартииТоваровПоставщика");
	упрКнДоставка();
	
	//для старых документов заполняем "процентПрибыли" в строках при открытии документа.qrCodeИнструкция
	Если (ДатаДок < '31.12.2023') и (НазваниеНабораПрав() = "Администратор") Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			ЦенаТовара = 0;	ВалютаЗакупочнойЦены = "";
			глПолучитьЦенуТовара(Константа.Закупочная,Товар,Единица,ДатаДок,ЦенаТовара,ВалютаЗакупочнойЦены);
			Если ВалютаЗакупочнойЦены <> Валюта тогда
				ЦенаТовара = глПересчет(ЦенаТовара,ВалютаЗакупочнойЦены,ДатаДок,Валюта,ДатаДок); 
			КонецЕсли;
			процентДоставки = ПолучитьПроцентДоставкиПост(Товар,ДатаДок);
			ЦенаТовара = ЦенаТовара + ЦенаТовара*процентДоставки/100;
			суммаЗакупки = ЦенаТовара * Количество;
			
			Если суммаЗакупки <> 0 Тогда
				процентПрибыли = Окр((СуммаСНДС - суммаЗакупки)/(суммаЗакупки/100),1);	
			Иначе
				процентПрибыли = 999;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры //При открытии

// ===============================
Процедура ВыборПредпочтения()
	
	спОтбор = СоздатьОбъект("СписокЗначений");
	
	спСтатусы=СоздатьОбъект("СписокЗначений");
	спСтатусы.ДобавитьЗначение(Купленный);
	спСтатусы.ДобавитьЗначение(Принятый);
	спСтатусы.ДобавитьЗначение(ПринятыйБезПраваПередачи);	
	спОтбор.Установить("Статус",спСтатусы);
	
	спОтбор.Установить("Контекст",глВзятьКонтекст(Контекст));  
	
	ОткрытьФормуМодально("Справочник.Контрагенты.ВыборПредпочтения", спОтбор);
КонецПроцедуры

// ===============================
Процедура ВыборКассы()
	спКассы = глЗаполнитьСпКассы(Фирма,Валюта);
	спКассы.ВыбратьЗначение(Касса,,,,2);
КонецПроцедуры

//======================================================================
Функция ОткрытьПодборПартииПоставщика(выбТовар)	
	спсПартии = получитьСписокПартийПоставщика(выбТовар);
	выбПартия = "";
	Если спсПартии.ВыбратьЗначение(выбПартия,,,15,1) <> 1 Тогда
		Возврат 0;
	КонецЕсли;
	ПартияПост = выбПартия;
	Возврат 1;
КонецФункции // ОткрытьПодборПартииПоставщика


//======================================================================
Функция ОткрытьПодборСкладскогоМеста()	
	выбМесто = "";
	спсМест = дополненияТорговля.получитьСписокСкладскихМест(Товар,Склад,Единица,Сорт);
	Если спсМест.ВыбратьЗначение(выбМесто,,,15,1) <> 1 Тогда
		Возврат 0;
	КонецЕсли;
	складскоеМесто = выбМесто;
	Возврат 1;
КонецФункции // ОткрытьПодборПартииПоставщика

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,Флаг)
	Флаг=0;
	Сорт= сорт_ПолучитьСорт(Контекст); //+ralex, 09-06-23 11:50
	
	Если (Рекв="Фирма") Тогда
		//-ralex, 11-11-23 21:16
		//Если НазваниеНабораПрав() = "Администратор" Тогда
		//	Предупреждение("убедитесь в соответствии цен на товары категории цен, установленной контрагенту.");
		//Иначе
		//	Если КоличествоСтрок() <> 0 Тогда
		//		Если Вопрос("Все строки документа будут удалены. Продолжить?",4) = 6 Тогда
		//			УдалитьСтроки();
		//		Иначе
		//			СтатусВозврата(0);
		//			Возврат;
		//		КонецЕсли;
		//	КонецЕсли;
		//КонецЕсли;
		//-/------------------------
		ВыборФирмы();
	ИначеЕсли Рекв="КатегорияЦен" Тогда
		ВыборОплаты();
		измКонтрагент(,1);
	ИначеЕсли Рекв="Предпочтение" Тогда
		ВыборПредпочтения();
	ИначеЕсли Рекв="Касса" Тогда
		ВыборКассы();
	ИначеЕсли Рекв="Товар" Тогда
		Флаг = 0;
		стТовар = Товар;
		//+ralex, 19-09-22 23:54
		ОткрытьФормуМодально("Справочник.Номенклатура.ДляВыбора",Контекст);
		Если Товар.Выбран() = 1 Тогда
			ИзмТовар();
			глПриИзмененииТовара(Контекст);
			Активизировать("Количество",1);
		КонецЕсли;
		//+/------------------------
	ИначеЕсли Рекв="Контрагент" Тогда
		Если КоличествоСтрок() <> 0 Тогда
			Если Вопрос("Все цены в документе будут пересчитаны. продолжить?",4) <> 6 Тогда
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Флаг = 1;
		СтарыйКонтрагент = Контрагент;
		//+ralex, 09-05-21 23:12
	ИначеЕсли Рекв = "ПартияПост" Тогда
		//проверяем разрешение
		Если Товар.Выбран() = 0 Тогда
			Флаг = 0; Возврат;
		КонецЕсли;
		Если дополненияТорговля.ПолучитьПараметрГруппыСправочника(Товар,"разрешеныПартииПост") = 0 Тогда
			Флаг = 0; Возврат;
		КонецЕсли;
		
		стр = 0;
		Если тзТЧ.НайтиЗначение(Товар,Стр,"Товар") = 1 Тогда
			начПартияПост = тзТЧ.ПолучитьЗначение(стр,"НачПартияПост");
			Если ПустоеЗначение(начПартияПост) = 1 Тогда
				тзТЧ.УстановитьЗначение(стр,"НачПартияПост",ПартияПост);
			КонецЕсли;
		Иначе
			тзТЧ.НоваяСтрока();
			тзТЧ.Товар = Товар;
			тзТЧ.НачПартияПост = ПартияПост;
		КонецЕсли;
		ОткрытьПодборПартииПоставщика(Товар);
		Флаг = 0;
	ИначеЕсли Найти(рекв,"грузчик") <> 0 Тогда
		Флаг = 1;
		Если НазваниеНабораПрав() <> "Администратор" Тогда
			Если ПустоеЗначение(ПолучитьАтрибут(Рекв)) = 0 Тогда
				флаг = 0;
				СтатусВозврата(0);
				Возврат;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли Найти(рекв,"складскоеМесто") <> 0 Тогда
		ОткрытьПодборСкладскогоМеста();
	Иначе
		Флаг=1;
	КонецЕсли;
КонецПроцедуры                    

// ===============================
Процедура ОбработкаПодбора(Выб) //Предопределенная процедура 
	//+ralex, 17-10-23 11:47
	Если Сорт <> Константа.КондиционныйТовар Тогда
		КатегорияЦен = Сорт.КатегорияЦен;
	КонецЕсли;		
	//+/------------------------
	Если ТипЗначенияСтр(выб) = "ТаблицаЗначений" Тогда
		выбПартияПост = ПолучитьПартиюПостПоКоличеству(Выб.Элемент,Выб.Количество,Выб.Ед.Коэффициент); //это вообще-то должно обрабатываться в каждой строке тз
		глПриОбработкеПодбора(Выб,Контекст);
		ПартияПост = выбПартияПост;
		складскоеМесто = ПолучитьСкладскоеМестоПоКоличеству(Товар,Окр(Количество * Коэффициент,2));
	ИначеЕсли Выб.Вид() = "Контрагенты" Тогда
		Контрагент = Выб;
		ИзмКонтрагент();
	КонецЕсли;
КонецПроцедуры //Обработка подбора

// ===============================
Процедура ПриЗакрытии()
КонецПроцедуры	  

Процедура Пересчитать()
	ЕСЛИ НЕ((ИмяПользователя() = "ОЛЕГ") ИЛИ (ИмяПользователя() = "ОЛЬГА")  ИЛИ (ИмяПользователя() = "1САдм") или (НазваниеНабораПрав() = "Менеджер")) тогда
		Возврат;
	КонецЕсли;
	выбратьстроки();
	пока получитьстроку()=1 цикл
		//в случае изменения ед. изм. (упаковки) может быть добавлена строка с остатком (неполная упаковка)
		//запоминаем строку с которой работает и если она изменится то возвращаемся на нее.
		текСтрока = НомерСтроки;
		глПриИзмененииТовара(Контекст);	
		Если текСтрока <> НомерСтроки Тогда
			ПолучитьСтрокуПоНомеру(текСтрока);
		КонецЕсли;
		
		Если флОтклКонтрольЦен = 0 Тогда
			ПроцентСкидки = 0; ФиксЦена = 0;
			Если (КатегорияЦен = Константа.РозничнаяКатегорияЦен) или (Товар.флЕдинаяЦена = 1) Тогда
				ПроцентСкидки = Товар.ПроцентСкидки.получить(ДатаДок);
				ФиксЦена = Товар.ФиксЦена.получить(ДатаДок);
				Если (ПроцентСкидки <> 0) или (ФиксЦена <> 0) Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Если Товар.ВидТовара = Перечисление.ВидыТоваров.Услуга Тогда
			Продолжить;
		КонецЕсли;
		суммаскидки= СуммаБезСкидки/100*ПрСкидки; 			
		глВыч_суммы_накл(Контекст,2,1);
	конеццикла;	
	Пересчитан=1;
КонецПроцедуры	  

//======================================================================
функция ПроверитьКоличество()
	//Если Итог("квоШК") = 0 Тогда //полагаем что со сканера данные вообще не вводили. отменяем проверку.
	//	Возврат 0;
	//КонецЕсли;
	результат = 1;	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		рез = дополненияТорговля.ПолучитьЗначениеСвойстваГруппыНоменклатурыРекурсивно(товар,Перечисление.КлассификаторСвойствГруппНоменклатуры.отпускТовараЧерезШК);
		Если рез = 1 Тогда //нужно обязательно проверять
			Если Количество <> КвоШК Тогда
				текстСообщения = "Количество указанное в документе в строке " + НомерСтроки + " не соответствует количеству в колонке ШК";
				Предупреждение(текстСообщения,5);
				Сообщить(текстСообщения);
				результат = 0;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат результат;
КонецФункции // ПроверитьКоличество

//======================================================================
Процедура откорректироватьКоличество()
	Если Итог("квоШК") = 0 Тогда //полагаем что со сканера данные вообще не вводили. отменяем проверку.
		Возврат ;
	КонецЕсли;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если Количество <> КвоШК Тогда
			Количество = КвоШК;
			текстСообщения = "Откорректировано количество в строке " + НомерСтроки;
			Сообщить(текстСообщения);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры // откорректироватьКоличество

//======================================================================
Процедура МенюКонтроль()
	//*ralex, 15-01-23 23:17
	Меню = СоздатьОбъект("СписокЗначений");
	Меню.ДобавитьЗначение(1,"Контроль");
	Меню.ДобавитьЗначение(2,"сброс результата сканирования по строке " + НомерСтроки);
	выбЗн = 0;
	Если Меню.ВыбратьЗначение(выбЗн,,,10,1) <> 1 Тогда
		Возврат;
	КонецЕсли;
	Если выбЗн = 1 Тогда
		ПроверитьКоличество();
	ИначеЕсли выбЗн = 2 Тогда
		КвоШК = 0;
		//откорректироватьКоличество();
	КонецЕсли;
КонецПроцедуры // МенюКонтроль

//======================================================================
//*** ШК ***
Процедура ЗагрузитьСоСканера(Данные)
	Если (ПустоеЗначение(Данные) = 1) или (Данные = "0") Тогда
		Возврат;
	КонецЕсли;
	
	// Определение типа штрих-кода
	Если ШтрихКодИмеетПрефикс=1 Тогда
		Если Найти("MPJS",Лев(Данные,1))<>0 Тогда
			// Штрих-код определяет товар
			Данные=Сред(Данные,2,СтрДлина(Данные)-1);
		Иначе
			Сообщить("Формат считанного штрих-кода не предназначен для товаров");
		КонецЕсли;
	КонецЕсли;
	
	Тов=СоздатьОбъект("Справочник.Номенклатура");
	Упак=СоздатьОбъект("Справочник.Единицы");
	
	Лев2 = Лев(Данные,2);
	
	//Если Лев2 = "22" Тогда
	//	// Используется свой внутренний штрих-код товара
	//	// Штрих-код построен по коду товара и весу
	//	Если Тов.НайтиПоКоду(Сред(Данные,3,5))=0 Тогда
	//		Сообщить("Товар с кодом "+Сред(Данные,3,5)+" не найден");
	//		Возврат;
	//	КонецЕсли;
	//	Упаковка = Тов.ЕдиницаПоУмолчанию;
	Если Лев2 = "50" Тогда//сотрудник
		Если Проведен() = 0 Тогда
			Предупреждение("Документ не проведен.",2);
			Возврат;
		КонецЕсли;
		текОтгружен = дополненияТорговля.ПолучитьСостояниеДокумента(Контекст,"отгружен");
		Если текОтгружен = 1 Тогда
			Предупреждение("по документу уже была отгрузка.");
			Возврат;
		КонецЕсли;
		спрСотр = СоздатьОбъект("Справочник.Сотрудники");
		Если спрСотр.НайтиПоРеквизиту("ШтрихКод",Данные,1) = 0 Тогда
			Сообщить("Сотрудник с ШК " + Данные + " не найден.");
			Форма.Закрыть(0);
			Возврат;
		КонецЕсли;
		
		текСотр = спрСотр.ТекущийЭлемент();
		//ищем пользователя
		спрПользователи = СоздатьОбъект("Справочник.Пользователи");
		спрПользователи.ВыбратьЭлементы();
		Пока спрПользователи.ПолучитьЭлемент() = 1 Цикл
			Если спрПользователи.сотрудник = текСотр Тогда
				Если спрПользователи.флКладовщик = 1 Тогда
					Если текОтгружен = 1 Тогда
						текДатаОтгрузки = дополненияТорговля.ПолучитьСостояниеДокумента(Контекст,"датаОтгрузки");
						Предупреждение("По документу " + номерДок + " уже была отгрузка " + текДатаОтгрузки + " !!!");
						Возврат;
					Иначе
						дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"отгружен",1);
						дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"датаОтгрузки",ТекущаяДата());
						дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"времяОтгрузки",ТекущееВремя());
						отборОтгружен = 1;
						СкладОтгрузки = Склад;
						СкладНеОтгрузки = 0;
						Отпустил = текСотр;
						Если Записать() = 1 Тогда
							//Сообщить("Метка ""Отгружено"" установлена.");
							Форма.Закрыть(0);
						Иначе
							Предупреждение("МЕТКА ОТГРУЗКИ НЕ УСТАНОВЛЕНА. ПОВТОРИТЕ ПОПЫТКУ.");
							Возврат;
						КонецЕсли;
					КонецЕсли;
					Возврат;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Для сч = 1 по 5 Цикл
			текЗн = ПолучитьАтрибут("грузчик" + сч);
			Если ПустоеЗначение(текЗн) = 1 Тогда
				УстановитьАтрибут("грузчик" + сч,текСотр);
				//Сообщить("Сотрудник " + текСотр + " добавлен.");
				Если этоКладовщикШК = 0 Тогда
					Провести();
				Иначе
					Записать();
				КонецЕсли;
				//Сервис.Пауза(2000);
				Форма.Закрыть(0);
				Возврат;
			ИначеЕсли текЗн = текСотр Тогда
				Сообщить("Сотрудник " + текСотр + " уже указан.");
				//Сервис.Пауза(2000);
				Форма.Закрыть(0);
				Возврат;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли Данные = Строка(ШтрКод) Тогда	//этот документ. показываем Основную закладку
		Если Форма.Закладки.ПолучитьЗначение(Форма.Закладки.ТекущаяСтрока(),) <> "Склад" Тогда  //для кладовщиков работа со сканера
			Значение = "Склад";
		Иначе
			Значение = "Основной";
		КонецЕсли;
		поз = Форма.Закладки.найтиЗначение(Значение);
		Форма.Закладки.ТекущаяСтрока(поз);
		ПриВыбореЗакладки(поз,Значение);
		Возврат;
	Иначе
		// Используется основной штрих-код товара
		// или свой внутренний штрих-код товара с префиксом "20,21"
		Если Упак.НайтиПоРеквизиту("ШтрихКод",Данные,1)=0 Тогда
			Сообщить("Товар со штрих кодом "+Данные+" не найден");
			Возврат;
		КонецЕсли;
		Упаковка=Упак.ТекущийЭлемент();
		Тов=Упаковка.Владелец;
	КонецЕсли;
	
	тзТЧ = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(тзТЧ);
	
	стр = 0;
	Если тзТЧ.НайтиЗначение(Тов,стр,"Товар") = 1 Тогда
		тзТЧ.ПолучитьСтрокуПоНомеру(стр);
		//проверяем единицу измерения
		Если тзТЧ.Единица = Упаковка Тогда
			тзТЧ.КвоШК = тзТЧ.КвоШК + 1;
		Иначе
			//пересчет
			врКво =  1/тзТЧ.Единица.Коэффициент * Упаковка.Коэффициент;
			тзТЧ.КвоШК = тзТЧ.КвоШК + врКво;
		КонецЕсли;
	Иначе
		//не нашли
		Сообщить("товар " + Тов.Код + " " + Тов +" не найден в документе!","!!!");
	КонецЕсли;
	ЗагрузитьТабличнуюЧасть(тзТЧ);
КонецПроцедуры

Процедура ОбработкаВнешнегоСобытия(Источник,Событие,Данные)	// Предопределенная процедура
	//Сообщить(Данные);
	Если РаботаСоСканеромШтрихКода=2 Тогда
		Если Событие="BarCodeValue" Тогда
			Если Scaner <> 0 Тогда
				Если Scaner.OldVersion<>0 Тогда
					//Работа драйвера совместима с предыдущей версиией
					// Источник="BarCodeScaner" (для других устройств свои названия)
					//Событие="BarCodeValue", Данные=ПолученныеДанные
					//Сообщить("Old Version <> 0");
					//Сообщить("Источник: "+Строка( Источник ));
					//Сообщить("Событие: "+Строка( Событие ));
					//Сообщить(Строка("Данные от устройства: "+ Данные));
				Иначе
					//Работа драйвера не совместима с предыдущей версиией
					// Источник="BarCodeScaner" (для других устройств свои названия)
					////Событие="BarCodeValue", Данные=НомерСобытия
					//Сообщить("Old Version = 0");
					Scaner.EventNumber=Число(Данные);
					//Сообщить("Данные от устройства: "+Scaner.ScanData);
					//Сообщить("Порт: "+Scaner.PortDescription);
					//Сообщить("Модель: "+Scaner.DeviceDescription);
					//Сообщить("Лог. устройство: " + Строка(Scaner.CurrentDeviceNumber) + " | " + Scaner.CurrentDeviceName);
					Scaner.DeleteEvent();
				КонецЕсли;
				Scaner.DataEventEnabled = 1;
				//Сообщить("Количество сообщений "+Строка(Scaner.DataCount));
				Если Константа.Отладка = Нет Тогда
					Данные = Scaner.Данные;
				КонецЕсли;
			Иначе
				Попытка
					СканерШтрихКода.ПосылкаДанных = 1; 
				Исключение
				КонецПопытки;
			КонецЕсли;
			ЗагрузитьСоСканера(Данные);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
//
//######################################################################################
//*** конец ШК ***

Функция Раскраска()
	стр = "";
	Если (Товар.Акция.Получить(ДатаДок) = 1) и (Товар.Распродажа.Получить(ДатаДок) = 1) Тогда
		стр = "(BRUSH[" + цветАкция +"])()(BRUSH[" + цветРаспродажа + "])(BRUSH[NONE])()()()(FONT[10526880])(FONT[NONE])";
	ИначеЕсли Товар.Акция.Получить(ДатаДок) = 1 Тогда
		стр = "(BRUSH[" + цветАкция + "])()()(BRUSH[NONE])()()(FONT[10526880])(FONT[NONE])";
	ИначеЕсли Товар.Распродажа.Получить(ДатаДок) = 1 Тогда
		стр = "(BRUSH[" + цветРаспродажа + "])()()(BRUSH[NONE])()()(FONT[10526880])(FONT[NONE])";
	Иначе
		стр = "()()()()()()(FONT[10526880])(FONT[NONE])";
	КонецЕсли;
	//+ralex, 18-12-20 03:13
	Если Товар.тмцЗаблокирован = 1 Тогда
		стр = ("(FONT[0xA5A5A5] FONT_C[0xA5A5A5] FONT_S[0xA5A5A5])") + стр;
	КонецЕсли;
	//+/ralex, 18-12-20 03:13
	
	Возврат стр;
КонецФункции

Процедура ПоказатьНаКарте()
	Если Контрагент.Выбран() = 1 Тогда
		ЗапуститьПриложение("https://www.google.com.ua/maps/place/" + СокрЛП(Контрагент.ЮридическийАдрес));
	КонецЕсли;
КонецПроцедуры // ПоказатьНаКарте()

//======================================================================
Процедура подтвердитьСМС()
	ОткрытьФормуМодально("Отчет.АвторизацияКлиента",Контекст);
КонецПроцедуры // подтвердитьСМС

Форма.Товар.ВыполнятьФормулуТолькоПриИзменении(1);

// ===============================
//Инициализирум список действий по кнопке "Действия"
этоКладовщикШК = ?(НазваниеНабораПрав() = "КладовщикШК",1,0);

Если этоКладовщикШК = 0 Тогда
	СписокДействий = глПолучитьСписокДействий(
	?(НазваниеНабораПрав() = "Администратор","ТоварныйСостав,","") +
	?(НазваниеНабораПрав() = "Администратор","ОбновлениеЦен,ТоварныйСостав,","") + "
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ВводНаОсновании,
	|ОткрытьВЖурнале,
	|Подчиненные,
	|ИзмКомментария");
Иначе
	СписокДействий = глПолучитьСписокДействий("ОткрытьВЖурнале");
КонецЕсли;

ЗаполнитьСпВидТорговли();
ВыбранВидТорговли();
спрКонтрПрава = СоздатьОбъект("КонтрагентыПрава");
ПравоПользователяПричинаВозврата = спрКонтрПрава.ПолучитьПравоПользователя(,"флПричинаВозврата"); 

дополненияТорговля = СоздатьОбъект("дополненияТорговля");	

//список атрибутов для изменения видимости.
спсАтрибутов = СоздатьОбъект("СписокЗначений");
спсАтрибутов.ДобавитьЗначение("наруж. рекл.");
спсАтрибутов.ДобавитьЗначение("сайт");
спсАтрибутов.ДобавитьЗначение("совет");
спсАтрибутов.ДобавитьЗначение("Facebook");
спсАтрибутов.ДобавитьЗначение("Instagram");
спсАтрибутов.ДобавитьЗначение("прочее");
спсАтрибутов.ДобавитьЗначение("прочееОткудаПришел");

спсПринтеровЧеков = СоздатьОбъект("СписокЗначений");
спсПринтеровЧеков.ДобавитьЗначение("Datecs EP-300");
спсПринтеровЧеков.ДобавитьЗначение("80mm Series Printer");

