// ===============================
// Описание переменных 
Перем СписокДействий;
Перем Меню;
Перем СтараяДата;

Перем НачальнаяДатаДокумента;
// ===============================
// "служебные" функции и процедуры 

// ===============================
Функция ЗаголовокФормы() 
	Перем Заголовок, Название;
	Заголовок = "Движение денежных средств";
	Название  = "Банковская выписка ";
	
	Заголовок = Заголовок + глЗаголовок(Контекст);
	
    Форма.Заголовок(Заголовок);     
	Возврат Название;
КонецФункции //ЗаголовокФормы

// ===============================
Функция ВыбиратьСтавкуНДС()
	Если (((ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление)
		И (ВидОперации = Перечисление.ВидыОплаты.Оплата))
		ИЛИ ((ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Списание)
		И (ВидОперации = Перечисление.ВидыОплаты.Возврат))
		ИЛИ ((ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Списание)
		И (ВидОперации = Перечисление.ВидыОплаты.Оплата))) Тогда
	    Возврат 1;
	Иначе         
		СтавкаНДС = 0;
	    Возврат 0;
	КонецЕсли;
КонецФункции

// ===============================
Функция ПроверкаСоответствия()
	// Проверка соответствия Контрагент - Договор - ДокументОснование
	фСоответствует=1;
	Если Договор.Выбран()=1 Тогда
	    Если Договор.Контрагент<>Контрагент Тогда
	        фСоответствует=0;
	    КонецЕсли;
	КонецЕсли;
	
	Если (глДоговорКонсигнации(Договор) = Нет) и (глДополнениеДоговораКонсигнации(Договор) = Нет) Тогда
		Если ДокументОснование.Выбран()=1 Тогда
			Если глЕстьРеквизитШапки("Контрагент",ДокументОснование.Вид()) = Да Тогда
				Если ДокументОснование.Контрагент<>Контрагент Тогда
					фСоответствует=0;
				КонецЕсли;
				Если Договор.Выбран()=1 Тогда
					Если ДокументОснование.Договор<>Договор Тогда
						фСоответствует=0;
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли глЕстьРеквизитМнЧ("Контрагент",ДокументОснование.Вид()) = Да Тогда
				// Есть ли такая строка ???
				фСоответствует = 0;
				ДокументОснование.ВыбратьСтроки();
				Пока ДокументОснование.ПолучитьСтроку()=1 Цикл
					Если (ДокументОснование.Контрагент = Контрагент) и (ДокументОснование.Договор = Договор) Тогда
						фСоответствует = 1;
						прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат фСоответствует;
КонецФункции

// ===============================
Процедура УстДоступность()
	
	Если ВидОперации = Перечисление.ВидыОплаты.Корректировка Тогда
		Форма.ДокументОснование.Доступность(0);
		Форма.Договор.Доступность(0);
		Форма.Контрагент.Доступность(0);
	Иначе
		Если (РежимОплаты = Перечисление.РежимыОплаты.АвтоСлужебный) 
			или (РежимОплаты = Перечисление.РежимыОплаты.АвтоПриоритетный) Тогда
			Форма.ДокументОснование.Доступность(0);
		Иначе    
			Форма.ДокументОснование.Доступность(1);
		КонецЕсли;
		
		Если (РежимОплаты = Перечисление.РежимыОплаты.АвтоСлужебный) Тогда
			Форма.Договор.Доступность(0);
		Иначе
			Форма.Договор.Доступность(1);
		КонецЕсли;
	КонецЕсли; 	
	
	Если Договор.Выбран()=1 Тогда
	    Если Договор.СпособФормированияНалоговыхДокументов=2 Тогда
	        Форма.РежимОплаты.Доступность(0);
		Иначе 
			Форма.РежимОплаты.Доступность(1);
	    КонецЕсли;
	КонецЕсли;
КонецПроцедуры


// ===============================
Процедура ИзмРежимОплаты()

	Если (РежимОплаты = Перечисление.РежимыОплаты.АвтоСлужебный) 
		или (РежимОплаты = Перечисление.РежимыОплаты.АвтоПриоритетный) Тогда
		ДокументОснование = 0;			
	КонецЕсли;

	Если (РежимОплаты = Перечисление.РежимыОплаты.АвтоСлужебный) Тогда
		Договор = 0;
	КонецЕсли;
	
	Если ВидОперации = Перечисление.ВидыОплаты.Корректировка Тогда
		Контрагент = 0;
		ДокументОснование = 0;			
		Договор = 0;
	КонецЕсли; 	

	УстДоступность();
КонецПроцедуры

// ===============================
Процедура ИзмВидДвижения()
	Если ВидДвижения.Выбран()=0 Тогда
		ВидДвижения=Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление;
	КонецЕсли;
	Если ВидОперации.Выбран()=0 Тогда
		ВидОперации=Перечисление.ВидыОплаты.Оплата;
	КонецЕсли;
	ИзмРежимОплаты();
    Форма.СтавкаНДС.Доступность(ВыбиратьСтавкуНДС());
	Если ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление Тогда
		Форма.Приход.Доступность(1);
		Форма.Расход.Доступность(0);
		Приход=?(Расход=0,Приход,Расход);
		Расход=0;                 
		ВидыДляВыбора="РасходнаяНакладная,ВводОстатковКредита,ПродажаРеализатора";
		Если ВидОперации = Перечисление.ВидыОплаты.Оплата Тогда
		    ВидыДляВыбора= "Счет,"+ ВидыДляВыбора;
		КонецЕсли;
	Иначе
		Форма.Приход.Доступность(0);
		Форма.Расход.Доступность(1);
		Расход=?(Приход=0,Расход,Приход);
		Приход=0;
		ВидыДляВыбора="ПриходнаяНакладная,ВводОстатковКредита,";
		Если ВидОперации = Перечисление.ВидыОплаты.Оплата Тогда
		    ВидыДляВыбора= "СчетВходящий,ГТД,"+ ВидыДляВыбора;
		КонецЕсли;
	КонецЕсли;
	
	Если ВидОперации = Перечисление.ВидыОплаты.Возврат Тогда
		ВидыДляВыбора= ВидыДляВыбора + ",ДвиженияДенежныхСредств";
	КонецЕсли;	
	
	ДокументОснование.ВидыДляВыбора(ВидыДляВыбора);
КонецПроцедуры

// ===============================
Функция ПолучитьСуммуНедоплаты(ЗнакОплаты,Док)
	
	Если ТипУчета=Упр Тогда
		ВалУч = Док.Контрагент.ВалютаВзаиморасчетов;
	Иначе
		ВалУч = Гривня;
	КонецЕсли;
	
	Возврат глПересчет(глДолгКонтрагента(Контекст, ЗнакОплаты, ТипУчета, Фирма, Док.Контрагент, Док.Договор ,Док),ВалУч,ДатаДок,Валюта,ДатаДок);
	
КонецФункции

// ===============================
Функция ИспользованнаяСуммаВТекущем(Док)
	Перем СуммаВколонке, ДляСравнения;
	
	СуммаВколонке = 0;
	
	// документ может быть уже использован в этой банковской выписке
	// отнимем от суммы недоплаты сумму по документу.
	// Это действие производим только для непроведенного документа,
	// потому что недоплата по документу уже расчитана с учетом
	// суммы по этому документу в спецификации.


	// запомним номер текущей строки
	ТекущийНомерСтроки = НомерСтроки;

	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если НомерСтроки <> ТекущийНомерСтроки Тогда
			Если (ДокументОснование = Док.ТекущийДокумент()) Тогда
			    СуммаВколонке = СуммаВколонке + Расход + Приход;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
		
	ПолучитьСтрокуПоНомеру(ТекущийНомерСтроки);

	Возврат СуммаВколонке;
	
КонецФункции
                                  
// ===============================
Процедура ИзмДокументОснование(ВыбранныйДокумент, РучнойВвод = 0)
	Перем ВидДок;
	Перем Док;

	Если ПустоеЗначение(ВыбранныйДокумент) = 1 Тогда
	    Возврат;
	КонецЕсли;

	Если ПроверкаСоответствия()=0 Тогда
	    Предупреждение("Документ не соответствует контрагенту и договору.");
		ДокументОснование=0;
	КонецЕсли;

	Док = ВыбранныйДокумент;
	
	ВидДок = Док.Вид();
	
	Если РучнойВвод = 0 Тогда
		НоваяСтрока();
	КонецЕсли;
	
	Если ВидДок = "ПлатежноеПоручение" Тогда
		ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Списание;
		ВидОперации = Перечисление.ВидыОплаты.Оплата;
        Контрагент = Док.Контрагент;
		ДокументОснование = Док.ДокументОснование;
		Если ПустоеЗначение(Расход) = 1 Тогда
			Расход = глПересчет(Док.СуммаСНДС, Док.Валюта, 
			                    Док.ДатаДок, Валюта, ДатаДок) - 
								ИспользованнаяСуммаВТекущем(Док);
		КонецЕсли;
		
	ИначеЕсли (ВидДок="РасходнаяНакладная") или (ВидДок="ПродажаРеализатора") Тогда
		// РасходнаяНакладная и РасходнаяРозничная
		ВидДвижения=Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление;
		
		ДокументОснование = Док;

		Если Док.ВидОперации = 0 Тогда
			ВидОперации=Перечисление.ВидыОплаты.Оплата;
			Приход = ПолучитьСуммуНедоплаты(-1,Док) - ИспользованнаяСуммаВТекущем(Док);
		Иначе
			ВидОперации=Перечисление.ВидыОплаты.Возврат;
			Приход = ПолучитьСуммуНедоплаты(+1,Док) - ИспользованнаяСуммаВТекущем(Док);
		КонецЕсли;
	ИначеЕсли ВидДок = "Счет" Тогда
		// Счет
		ВидДвижения=Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление;
		ВидОперации=Перечисление.ВидыОплаты.Оплата;
		ДокументОснование = Док;
		Приход = глПересчет(Док.Итог("СуммаСНДС"), Док.Валюта, Док.Дата_Курса, Валюта, ДатаДок)-
		         ИспользованнаяСуммаВТекущем(Док);
				 
	ИначеЕсли (ВидДок = "СчетВходящий") ИЛИ (ВидДок = "ГТД") Тогда
		// Счет входящий
		ВидДвижения=Перечисление.ВидыДвиженийПоРасчетномуСчету.Списание;
		ВидОперации=Перечисление.ВидыОплаты.Оплата;
		ДокументОснование = Док;
		Расход = глПересчет(Док.Итог("СуммаСНДС"), Док.Валюта, Док.Дата_Курса, Валюта, ДатаДок)-
		         ИспользованнаяСуммаВТекущем(Док);         
				 
	ИначеЕсли ВидДок="ПриходнаяНакладная" Тогда
		ВидДвижения=Перечисление.ВидыДвиженийПоРасчетномуСчету.Списание;
		Если Док.ВидОперации = 0 Тогда
			ВидОперации=Перечисление.ВидыОплаты.Оплата;
			ВремРасход = ПолучитьСуммуНедоплаты(+1,Док) - ИспользованнаяСуммаВТекущем(Док);
		Иначе
			ВидОперации=Перечисление.ВидыОплаты.Возврат;
			ВремРасход = ПолучитьСуммуНедоплаты(-1,Док) - ИспользованнаяСуммаВТекущем(Док);
		КонецЕсли;
		Если ПустоеЗначение(Расход) = 1 Тогда
			Расход = ВремРасход;
		КонецЕсли;
		
		ДокументОснование = Док;
	ИначеЕсли ВидДок="ДвиженияДенежныхСредств" Тогда
        ДокументОснование=Док;
	ИначеЕсли ВидДок="ВводОстатковКредита" Тогда
        ДокументОснование=Док;
	Иначе
		// неправильный вид документа
		Предупреждение("Документ "+Док.ПредставлениеВида()+РазделительСТрок+
		               "нельзя добавлять в банковскую выписку");
		 Возврат;
	КонецЕсли;
	
	Если ВидДок <> "ДвиженияДенежныхСредств" Тогда
		Контрагент	= Док.Контрагент;
		Договор		= Док.Договор;
	Иначе
		// нужно найти строку по которой возврат
		Док.ВыбратьСтроки();
		Пока Док.ПолучитьСтроку()=1 Цикл
			Если (Док.Контрагент = Контрагент) и (Док.ВидДвижения<>ВидДвижения) 
				и (Док.ВидОперации <> ВидОперации) Тогда
				Приход = Док.Расход;
				Расход = Док.Приход;
				Договор	= Док.Договор;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ВидДвижения=Перечисление.ВидыДвиженийПоРасчетномуСчету.Списание Тогда
		ДокументОснование.ВидыДляВыбора("СчетВходящий,ПриходнаяНакладная,ДвиженияДенежныхСредств");
	ИначеЕсли ВидДвижения=Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление Тогда
		ДокументОснование.ВидыДляВыбора("Счет,РасходнаяНакладная,ДвиженияДенежныхСредств");
	КонецЕсли;
	
	// установим режим оплаты по умолчанию
	РежимОплаты = Перечисление.РежимыОплаты.КонкретныйДоговор;
КонецПроцедуры			


// ===============================
// функции и процедуры, вызываемые из формул элементов диалога

// ===============================
Процедура ИзмДата()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
КонецПроцедуры

// ===============================
Процедура ВыборФирмы()
	// по кнопке редактирования параметров фирмы в докумнете
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ИнформацияОфирме", КонтекстДокумента);
	
КонецПроцедуры	
// ===============================
Процедура ИзмКонтрагент()
	
	Если ПустоеЗначение(Контрагент) = 1 Тогда
		// удалили Контрагента
	    Договор = 0;
		ВалютаВзаиморасчетов = Гривня;
		КурсВзаиморасчетов = 1;
		Дата_курсаВзаиморасчетов = ДатаДок;
	КонецЕсли;
	
	Если Договор.Выбран()=1 Тогда
	    Если Договор.Контрагент <> Контрагент Тогда
	        Договор = 0;
		КонецЕсли;
	Иначе
		// очистим договор
		Договор = ПолучитьПустоеЗначение("Документ.Договор");
		Если Константа.ПодставлятьОсновнойДоговор = Да Тогда
			// подставим договор по умолчанию                                 
			Если ПустоеЗначение(Контрагент.ОсновнойДоговорТорг) = 0 Тогда
				Если Фирма = Контрагент.ОсновнойДоговорТорг.Фирма Тогда
					Договор = Контрагент.ОсновнойДоговорТорг;
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;
	     
	Если (глДоговорКонсигнации(Договор) = Нет) и (глДополнениеДоговораКонсигнации(Договор) = Нет) Тогда
		Если ДокументОснование.Выбран()=1 Тогда
			Если глЕстьРеквизитШапки("Контрагент",ДокументОснование.Вид()) = Да Тогда
				Если ДокументОснование.Контрагент <> Контрагент Тогда
					ДокументОснование = 0;
				КонецЕсли;
			ИначеЕсли глЕстьРеквизитМнЧ("Контрагент",ДокументОснование.Вид()) = Да Тогда
				фЕстьКонтрагент=0;
				ДокументОснование.ВыбратьСтроки();
				Пока ДокументОснование.ПолучитьСтроку()=1 Цикл
					Если ДокументОснование.Контрагент <> Контрагент Тогда
						фЕстьКонтрагент=0;
					КонецЕсли;
				КонецЦикла;
				Если фЕстьКонтрагент=0 Тогда
					ДокументОснование = 0;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если контрагент.Выбран() = 1 Тогда
		ВалютаВзаиморасчетов = Контрагент.ВалютаВзаиморасчетов;
		Дата_курсаВзаиморасчетов = ДатаДок;
		КурсВзаиморасчетов = глКурсДляВалюты(ВалютаВзаиморасчетов,Дата_курсаВзаиморасчетов);
	КонецЕсли;
	
	
КонецПроцедуры

// ===============================
 Процедура ПоступлениеПоДокументам()
 	Перем ВидДок;
 	
	ВидДок = "";
	Если Меню.ВыбратьЗначение(ВидДок,,,,1) = 1 Тогда
		Если ВидДок ="По контрагентам" Тогда
			ОткрытьПодбор("Справочник.Контрагенты");
		Иначе
			ОткрытьПодбор("Документ."+ВидДок,,,1,ДокументОснование);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //ПоступлениеПоДокументам

// ===============================
Процедура ЗаполнитьПоПлатежкам()
	Перем Способ, ДатаС, ДатаПо;
	СпособыЗаполнения = СоздатьОбъект("СписокЗначений");
	СпособыЗаполнения.ДобавитьЗначение(1,"За дату документа");
	СпособыЗаполнения.ДобавитьЗначение(2,"За произвольный период");
    СпособыЗаполнения.ВыбратьЗначение(Способ,"Выберите способ заполнения",2,0,1);
	Если Способ = 1 Тогда
		ДатаС = ДатаДок;
		ДатаПо = ДатаДок;
	ИначеЕсли Способ = 2 Тогда
		Если ВвестиПериод(ДатаС,ДатаПо) = 0 Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	Если КоличествоСтрок()>0 Тогда
		Рез = Вопрос("Удалить строки?","Да+Нет+Отмена");
	    Если Рез = "Отмена" Тогда
	    	Возврат;
	    ИначеЕсли Рез = "Да" Тогда
	    	УдалитьСтроки();
	    КонецЕсли;
	КонецЕсли;
	Док = СоздатьОбъект("Документ.ПлатежноеПоручение");
	Док.ВыбратьДокументы(ДатаС,ДатаПо);
	Пока Док.ПолучитьДокумент()=1 Цикл
		Если Док.РСчет <> РСчет Тогда
		    Продолжить;
		КонецЕсли;
		НоваяСтрока();
		Контрагент = Док.Контрагент;
		Договор = Док.Договор;
		ВидДвижения = Перечисление.ВидыДвиженийПоРасчетномуСчету.Списание;
		ВидОперации = Перечисление.ВидыОплаты.Оплата;
		Расход = Док.СуммаСНДС; 
		СтавкаНДС = Док.СтавкаНДС;   		
		ДокументОснование = Док.ДокументОснование ;		
		РежимОплаты = Перечисление.РежимыОплаты.КонкретныйДоговор;		
	КонецЦикла;
КонецПроцедуры 

// ===============================
Процедура Подбор()
	Перем Выбор;
	МенюПодборы=СоздатьОбъект("СписокЗначений");
	МенюПодборы.ДобавитьЗначение("по контрагентам");
	
	Если МенюПодборы.ВыбратьЗначение(Выбор,,,,1)=1 Тогда 
		//Если Выбор="по платёжным поручениям." Тогда
		//	ОткрытьПодбор("Журнал.ПлатежныеПоручения","");    
		//КонецЕсли;
		Если Выбор="по контрагентам" Тогда
			ОткрытьПодбор("Справочник.Контрагенты");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры                                                            

// ===============================
Процедура УстРСчет()     
	Если РСчет.Выбран() = 1 Тогда
		Если РСчет.БезНал = 1  Тогда
			Возврат;
		КонецЕсли;		
	КонецЕсли;		
	
	СпрРС = СоздатьОбъект("Справочник.НашиДенежныеСчета");
	СпрРС.ИспользоватьВладельца(Фирма);
	
	СпрРС.ВыбратьЭлементы();
	Пока СпрРС.ПолучитьЭлемент() = 1 цикл
		Если СпрРС.БезНал = 1 тогда
			РСчет = СпрРС.ТекущийЭлемент(); 
			Прервать;
		КонецЕсли;	
	КонецЦикла;	          	                                                  
	
КонецПроцедуры

// ===============================
// Предопределенные процедуры

// ===============================
Процедура ВводНового(Скопирован)  //Предопределенная процедура

	глЗаполнитьШапку(Контекст);
	Если Скопирован=1 Тогда	//копирование документа
		Возврат;
	КонецЕсли;

	ДатаДок = РабочаяДата();
	УстРСчет();
	Валюта = РСчет.Валюта;
	ВидОперации=Перечисление.ВидыОплаты.Оплата;
КонецПроцедуры

// ===============================
Процедура ВводНаОсновании(ДокОснование) //Предопределенная процедура
	Предупреждение("Банковскую выписку не вводят на основании других документов!");
	СтатусВозврата(0);
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()  //Предопределенная процедура
	Если (названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер")  ИЛИ (названиенабораправ()="МенеджерТоварищ") Тогда
		ЕСли (проведен()=1) ИЛИ (ПометкаУдаления()=1) тогда		
			форма.толькопросмотр(1);			
		КонецЕсли;		
	КонецЕсли;
	НачальнаяДатаДокумента = ДатаДок;
	глПроверкаРазрешенияРедактирования(Контекст);
	
	глУстановкаРеквизитаТип(Контекст);
	
	Если Форма.ТолькоПросмотр()=1 Тогда
	    Форма.кнОК.Доступность(0);
		Форма.кнПровести.Доступность(0);
		Форма.кнДействия.Доступность(0);
		
	    Форма.кнПоДокум.Доступность(0);
	    Форма.КнПодбор.Доступность(0);
	Иначе
	    Форма.КнопкаПоУмолчанию("кнОК");
	КонецЕсли;
	
	Форма.ВидДвижения.ВыполнятьФормулуТолькоПриИзменении(1);

	СтараяДата = ДатаДок;
КонецПроцедуры

// ===============================
Процедура ОбработкаПодбора(Выбор)  //Предопределенная процедура
	Перем Сум, ВыбрКонтрагент;
	
	Если ТипЗначенияСтр(Выбор) = "Справочник" Тогда
		// подбор контрагентов
		ВыбрКонтрагент = Выбор;
		Сум=1;
		Если ВвестиЧисло(Сум,"Введите сумму",15,2) = 0 Тогда
			Возврат;
		КонецЕсли;
		Если Сум<>0 Тогда
			НоваяСтрока();
			Контрагент = ВыбрКонтрагент;
			// очистим договор
			Договор = ПолучитьПустоеЗначение("Документ.Договор");
			Если Константа.ПодставлятьОсновнойДоговор = Да Тогда
				// подставим договор по умолчанию                                 
				Если ПустоеЗначение(Контрагент.ОсновнойДоговорТорг) = 0 Тогда
					Если Фирма = Контрагент.ОсновнойДоговорТорг.Фирма Тогда
						Договор = Контрагент.ОсновнойДоговорТорг;
					КонецЕсли;	
				КонецЕсли;	
			КонецЕсли;
			Если Сум>0 Тогда
				ВидДвижения=Перечисление.ВидыДвиженийПоРасчетномуСчету.Поступление;
				ВидОперации=Перечисление.ВидыОплаты.Оплата;
				Приход=Сум;
				//СтавкаНДС=Константа.ОсновнаяСтавкаНДС;
			Иначе
				ВидДвижения=Перечисление.ВидыДвиженийПоРасчетномуСчету.Списание;
				ВидОперации=Перечисление.ВидыОплаты.Оплата;
				Расход=-Сум;
				//СтавкаНДС="";
			КонецЕсли;
			РежимОплаты = Перечисление.РежимыОплаты.КонкретныйДоговор;
			АктивизироватьСтроку();
		КонецЕсли;
	ИначеЕсли ТипЗначенияСтр(Выбор) = "Документ" Тогда
		ИзмДокументОснование(Выбор,0);
	КонецЕсли;
КонецПроцедуры              

// ===============================
Процедура ИзмДоговор()
	
	Если Договор.Выбран()=0 Тогда
	    Возврат;
	КонецЕсли;
	
	// Если выписываются итоговые налоговые накладные
	Если Договор.СпособФормированияНалоговыхДокументов=2 Тогда
	    РежимОплаты=Перечисление.РежимыОплаты.КонкретныйДоговор;
	КонецЕсли;
	
	УстДоступность();
	
	Если ПроверкаСоответствия()=0 Тогда
	    Предупреждение("Договор не соответствует контрагенту и документу основания.");
		Договор=0;
	КонецЕсли;
	
КонецПроцедуры


// ===============================
 Процедура ПриНачалеВыбораЗначения(Элемент,Флаг) // Предопределенная

 	Если Элемент = "ВидОперации" Тогда
		//Зпоминаем текущий вид оплаты
		СтарыйВидОперации = ВидОперации;
	ИначеЕсли Элемент = "ВидДвижения" Тогда
		//Зпоминаем текущий вид оплаты
		СтарыйВидДвижения = ВидДвижения;
	ИначеЕсли Элемент = "Договор" Тогда
		// Выбор договора 
		Флаг = 0;
		Фрм=СоздатьОбъект("СписокЗначений");
		Фрм.ДобавитьЗначение(Контрагент,"Контрагент");
		
		ОткрытьФормуМодально("Журнал.Договора.ФормаВыбора",Фрм,);
		Договор=Фрм.Получить("Договор");
		
		Если Договор.Выбран()=1 Тогда
			Контрагент=Договор.Контрагент;    
		КонецЕсли;
	ИначеЕсли (Элемент = "Фирма") или (Элемент = "РСчет") Тогда
		Флаг = 0;
		ВыборФирмы();
	КонецЕсли;
КонецПроцедуры //ПриНачалеВыбораЗначения

// ===============================
Процедура ОбработкаВыбораЗначения(ВыбЗнач,ИдентЭлемДиалога,ФлагСтандОбр)
	Если (ИдентЭлемДиалога = "ДокументОснование") Тогда
		ФлагСтандОбр = 0;
		ИзмДокументОснование(ВыбЗнач, 1);
	ИначеЕсли ИдентЭлемДиалога = "ВидДвижения" Тогда
		ФлагСтандОбр = 0;
		ИзмВидДвижения();
	ИначеЕсли ИдентЭлемДиалога = "Контрагент" Тогда
		Если (ПустоеЗначение(Договор) = 1) Тогда
			Договор = ВыбЗнач.ОсновнойДоговорТорг;
		КонецЕсли;
		Если (ПустоеЗначение(Договор) = 0) Тогда
			Если (Договор.Контрагент <> ВыбЗнач) Тогда
				Договор = ВыбЗнач.ОсновнойДоговорТорг;
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры
	
// ===============================
Процедура ПриРедактированииНовойСтроки() //Предопределенная процедура
	ИзмВидДвижения();
	РежимОплаты = Перечисление.РежимыОплаты.КонкретныйДоговор;
КонецПроцедуры

//// ===============================
Процедура ПриНачалеРедактированияСтроки()
	ИзмВидДвижения();
	// Форма.Контрагент.Доступность(ПустоеЗначение(ДокументОснование));
КонецПроцедуры             

// ===============================
Процедура ПриЗаписи()
	Если глМожноЗаписатьДокумент(Контекст)=0 Тогда
		СтатусВозврата(0);                        
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	
	//пользователи используют документ внося только одну строку.
	текВидДвижения = ""; видДвиженияДок = "";
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если текВидДвижения = "" Тогда
			текВидДвижения = ВидДвижения;
		ИначеЕсли текВидДвижения <> ВидДвижения Тогда //разные виды движения в документе
			текВидДвижения = 0;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	видДвиженияДок = текВидДвижения;
КонецПроцедуры

// ===============================
//Инициализирум список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ОткрытьВЖурнале,
	|Подчиненные,
	|ИзмКомментария");

Меню = СоздатьОбъект("СписокЗначений");
Меню.ДобавитьЗначение("Счет", "По счетам");
Меню.ДобавитьЗначение("СчетВходящий", "По счетам входящим");
Меню.ДобавитьЗначение("РасходнаяНакладная", "По расходным накладным");
Меню.ДобавитьЗначение("ПриходнаяНакладная", "По приходным накладным");
Меню.ДобавитьЗначение("По контрагентам", "По контрагентам");
