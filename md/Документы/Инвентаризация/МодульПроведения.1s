Перем спФирмы;
Перем ЭтоГрупповаяОбработка;
Перем тбПартии;

Функция ПолучитьСкладскоеМестоПоКоличеству(выбТовар,кво)
	выбМесто = ""; тзМест = 0;
	спсМест = дополненияТорговля.получитьСписокСкладскихМест(Товар,Склад,Единица,Сорт,ТекущийДокумент(),тзМест);
	Возврат тзМест.Итог("ОстатокТовара");
КонецФункции // ПолучитьСкладскоеМестоПоКоличеству

//======================================================================
Процедура РассчитатьШапку()
	спОтбор = СоздатьОбъект("СписокЗначений");
	тбПартии = 0;
	ВремРег = СоздатьОбъект("Регистры");
	
	Если ПустоеЗначение(Склад) = 0 Тогда
		спОтбор.ДобавитьЗначение(Склад,"Склад");
	КонецЕсли;
	глРассчитатьОстаткиПартийПост(Контекст, ВремРег, спОтбор); 
	глСформироватьТаблицуПартийПоставщика(Контекст, ВремРег,0,спОтбор,тбПартии); //тбПартии отсортирована по товар, партияПоставщика
КонецПроцедуры // РассчитатьШапку

Функция ПроверкаСтроки()
	глВсеВыбрано = 1;
	глВыбранЛи(Товар,"Товар",НомерСтроки);
	глВыбранЛи(Единица,"Единица",НомерСтроки);	
	глВыбранЛи(Сорт,"Сорт",НомерСтроки);	
	Если ЭтоГрупповаяОбработка = 0 Тогда
		Если ПартияПост.Выбран() = 0 Тогда
			//дополненияТорговля = СоздатьОбъект("дополненияТорговля");
			Если дополненияТорговля.ПолучитьПараметрГруппыСправочника(Товар,"разрешеныПартииПост") = 1 Тогда
				стр = 0;
				Если тбПартии.НайтиЗначение(Товар,стр,"Товар") = 1 Тогда
					Сообщить("В строке "+НомерСтроки+" у товара, имеющего партии поставщика не указана партия поставщика.","!!!");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если (ПолучитьСкладскоеМестоПоКоличеству(Товар,Количество * Коэффициент) <> 0) или (ДополненияТорговля.ПолучитьПараметрГруппыСправочника(Товар,"флСкладскоеМесто",ДатаДок) = 1) Тогда
			Если (ПустоеЗначение(складскоеМесто) = 1) Тогда
				Сообщить("В строке "+НомерСтроки+" не указано складское место.","!!!");
				глВсеВыбрано = 0;
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;
	Возврат глВсеВыбрано;
КонецФункции

// ===============================                          
// Выполняет проведение документа по Регистр.ОстаткиТоваров
//начСорт - передаем из контекста сорт товара. Если это кондиционній товар, то передаем пустую строку или ничего
//конСорт - используется док. "списание" при переводе товара в брак сортовой
Функция ИзменитьОстатки(спФирмы, Склад)
	спсПарам = СоздатьОбъект("СписокЗначений");
	ФлагПеремещения = 2;

	Для Инд = 1 по спФирмы.РазмерСписка() Цикл
		текФирма=спФирмы.ПолучитьЗначение(Инд);
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл    
			
			Если Товар.ВидТовара = Перечисление.ВидыТоваров.Услуга Тогда
				// услуги по остаткам не проводим
			    Продолжить;
			КонецЕсли;
			
			ОстатокТовара = (ИнвКоличество - Количество) * Единица.Коэффициент;
			Если ОстатокТовара = 0 Тогда
				Продолжить;
			КонецЕсли;
		
			Регистр.ОстаткиТоваров.ПривязыватьСтроку(НомерСтроки);
			
			Регистр.ОстаткиТоваров.Фирма = текФирма;
			Регистр.ОстаткиТоваров.Товар = Товар;
			Регистр.ОстаткиТоваров.Склад = Склад;
			Регистр.ОстаткиТоваров.ФлагУчета = ФлагПеремещения;
			Регистр.ОстаткиТоваров.Сорт = Сорт;
			Регистр.ОстаткиТоваров.Место = складскоеМесто;
			Регистр.ОстаткиТоваров.ОстатокТовара = ОстатокТовара;
			Регистр.ОстаткиТоваров.ДвижениеПриходВыполнить();
		КонецЦикла;
	КонецЦикла;
	возврат 1;
КонецФункции

// ===============================
Процедура ДвиженияОстатки()
	ИзменитьОстатки(спФирмы, Склад);
КонецПроцедуры
                       
// ===============================
Процедура ДвиженияПартии()
	
	Для Инд=1 по спФирмы.РазмерСписка() Цикл
		текФирма = спФирмы.ПолучитьЗначение(Инд);
		
		Если ПустоеЗначение(текФирма)=1 Тогда
			МетодРасчетаСебестоимости = Константа.МетодРасчетаСебестоимостиУправленческогоУчета;
		Иначе
			текФирма.ИспользоватьДату(ДатаДок);
			МетодРасчетаСебестоимости = текФирма.МетодРасчетаСебестоимостиФинансовогоУчета;
		КонецЕсли;                  
		
		Регистр.ПартииТоваров.Фирма = текФирма;
		Регистр.ПартииТоваров.Статус = Купленный;
		
		Если МетодРасчетаСебестоимости = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
			Регистр.ПартииТоваров.Контрагент = 0;
			Регистр.ПартииТоваров.Поставщик = 0;
			Регистр.ПартииТоваров.Поставка = 0;
			Регистр.ПартииТоваров.ПрихДокумент = 0;
		Иначе
			Регистр.ПартииТоваров.Контрагент = 0;
			Регистр.ПартииТоваров.Поставщик = 0;
			Регистр.ПартииТоваров.Поставка = ТекущийДокумент();
			Регистр.ПартииТоваров.ПрихДокумент = ТекущийДокумент();
		КонецЕсли;
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл
			//+ralex, 21-12-20 18:56
			Если (ИнвКоличество - Количество = 0) Тогда
				Продолжить;
			КонецЕсли;
			//+/ralex, 21-12-20 18:56
			Если ПустоеЗначение(текФирма)=1 Тогда
				ВУ = Товар.ВалютаУчета;
			Иначе	
				ВУ = Гривня;
			КонецЕсли;
			    
			//*ralex, 21-12-20 19:24
			//Регистр.ПартииТоваров.ПривязыватьСтроку(НомерСтроки);
			//Регистр.ПартииТоваров.Товар = Товар;
			//Регистр.ПартииТоваров.ОстатокТовара = (ИнвКоличество - Количество) * Единица.Коэффициент;
			//Регистр.ПартииТоваров.Стоимость = глПересчет(Стоимость,Валюта,Курс,ВУ,Дата_Курса);
			//Регистр.ПартииТоваров.ПродСтоимость = 0;
			//Регистр.ПартииТоваров.НДС = глПересчет(Стоимость - Стоимость,Валюта,Курс,ВУ,Дата_Курса);
			//Регистр.ПартииТоваров.Оборот =0;
			//Регистр.ПартииТоваров.НДСРасхода = 0;
			// -------- заменено на:
			Регистр.ПартииТоваров.ПривязыватьСтроку(НомерСтроки);
			Регистр.ПартииТоваров.Товар = Товар;
			Регистр.ПартииТоваров.ОстатокТовара = (ИнвКоличество - Количество) * Единица.Коэффициент;
			Попытка
				СтоимостьИнв = Стоимость/(Количество*Единица.Коэффициент) * (ИнвКоличество - Количество) * Единица.Коэффициент;
			Исключение //когда по учету кво = 0
				СтоимостьИнв = СтоимостьРеально;
			КонецПопытки;
			
			Регистр.ПартииТоваров.Стоимость = глПересчет(СтоимостьИнв,Валюта,Курс,ВУ,Дата_Курса);
			Регистр.ПартииТоваров.ПродСтоимость = 0;
			Регистр.ПартииТоваров.НДС = 0;
			Регистр.ПартииТоваров.Оборот =0;
			Регистр.ПартииТоваров.НДСРасхода = 0;
			//*/ralex, 21-12-20 19:24
			
			Регистр.ПартииТоваров.КодОперации = ОприходованиеИзлишков;
			Регистр.ПартииТоваров.ДвижениеПриходВыполнить();
			
		КонецЦикла // строки документа
		
	КонецЦикла; // фирмы
КонецПроцедуры

//======================================================================
Процедура ДвиженияВзаиморасчеты()
	Если КонтрагентПересорт.Выбран() = 0 Тогда
		Возврат;
	КонецЕсли;
	//Регистр.ВзаиморасчетыПоставщиков.ПривязыватьСтроку(НомерСтроки);
	СуммаРазницы = Итог("СтоимостьРеально") - итог("стоимость");
	Флаг_НУ = 0;               
	
	//Регистр.ВзаиморасчетыПоставщиков.Фирма = Фирма;
	Регистр.ВзаиморасчетыПоставщиков.Контрагент = КонтрагентПересорт;
	//Регистр.ВзаиморасчетыПоставщиков.Договор = Договор;
	Регистр.ВзаиморасчетыПоставщиков.СтавкаНДС = Константа.ОсновнаяСтавкаНДС;
	Регистр.ВзаиморасчетыПоставщиков.КредДокумент = ТекущийДокумент();
	Регистр.ВзаиморасчетыПоставщиков.Долг = СуммаРазницы;
	Регистр.ВзаиморасчетыПоставщиков.КодОперации = АвансоваяОтгрузка;
	Регистр.ВзаиморасчетыПоставщиков.Флаг_НУ = Флаг_НУ;
	Регистр.ВзаиморасчетыПоставщиков.СуммаСНДС_НУ = СуммаРазницы;
	Регистр.ВзаиморасчетыПоставщиков.ДвижениеРасходВыполнить();
КонецПроцедуры // ДвиженияВзаиморасчеты

Функция ДвиженияПартииПоставщикаВводНачОстатков() 
	текФирма = ПолучитьПустоеЗначение("Справочник.Фирмы");
	
	спОтбор = СоздатьОбъект("СписокЗначений");
	
	Если ПустоеЗначение(Склад) = 0 Тогда
		спОтбор.ДобавитьЗначение(Склад,"Склад");
	КонецЕсли;
	
	тбПартии = 0;
	ВремРег = СоздатьОбъект("Регистры");
	глРассчитатьОстаткиПартийПост(Контекст, ВремРег, спОтбор); 
	глСформироватьТаблицуПартийПоставщика(Контекст, ВремРег,0,спОтбор,тбПартии);
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ПартияПост.Выбран() = 0 Тогда
			Продолжить;
		КонецЕсли;
		НС = 0;
		//Если тбПартии.НайтиЗначение(ПартияПост,НС,"ПартияПост")=1 Тогда
		//	Если (тбПартии.партияПост = ПартияПост) и (тбПартии.ОстатокТовара <> 0) Тогда //в тзПартийпост есть остаток
		//		Сообщить("стр. " + НомерСтроки + "В режиме ввода начальных остатков по партиям поставщика нельзя использовать партии по которым имеется остаток.");
		//		Возврат 0;
		//	КонецЕсли;
		//КонецЕсли;

		ОстатокТовара = ИнвКоличество * Единица.Коэффициент;
		текПоставщик = ?(ПустоеЗначение(Контрагент) = 1,Товар.Поставщик,Контрагент);
		
		глПровестиПартиюПост(Контекст,1,0,Товар,ПартияПост,текПоставщик,текПоставщик,ТекущийДокумент(),ОстатокТовара,,Склад);
	КонецЦикла;	
	Возврат 1;	
КонецФункции

Функция ДвиженияПартииПоставщика() 
	Если флНачВводПартийПост = 1 Тогда
		Возврат ДвиженияПартииПоставщикаВводНачОстатков();
	КонецЕсли;
	
	текФирма = ПолучитьПустоеЗначение("Справочник.Фирмы");
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ПартияПост.Выбран() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если ИнвКоличество >= Количество Тогда //приход товара
			// Приходуем не проверяя:
			ОстатокТовара = (ИнвКоличество - Количество) * Единица.Коэффициент;
			глПровестиПартиюПост(Контекст,1,0,Товар,ПартияПост,Контрагент,Контрагент,ТекущийДокумент(),ОстатокТовара,,Склад);
		ИначеЕсли ИнвКоличество < Количество Тогда //списание товара
			//спОтбор = СоздатьОбъект("СписокЗначений");
			//тбПартии = 0;
			//ВремРег = СоздатьОбъект("Регистры");
			//глРассчитатьОстаткиПартийПост(Контекст, ВремРег, спОтбор); 
			//глСформироватьТаблицуПартийПоставщика(Контекст, ВремРег,0,спОтбор,тбПартии);
			
			ОсталосьСписать =  (Количество - ИнвКоличество) * Единица.Коэффициент;
			НС=0;
			
			Если тбПартии.НайтиЗначение(ПартияПост,НС,"ПартияПост")=1 Тогда //тбПартии отсортирована по товар, партияПоставщика
				для сч = НС По тбПартии.КоличествоСтрок() Цикл
					тбПартии.ПолучитьСтрокуПоНомеру(сч);
					
					Если (тбПартии.Товар <> Товар) или (ОсталосьСписать  = 0) Тогда
						Прервать;
					КонецЕсли;
					квоСписать = Мин(ОсталосьСписать,тбПартии.ОстатокТовара);
					глПровестиПартиюПост(Контекст,0,0,Товар,ПартияПост,Контрагент,тбПартии.Поставщик, тбПартии.ПрихДокумент, квоСписать,,Склад);
					ОсталосьСписать = ОсталосьСписать - квоСписать;
					тбПартии.ОстатокТовара = тбПартии.остатокТовара - квоСписать;
				КонецЦикла;
			Иначе
				Сообщить("Для товара " + Товар.Код  + " " + Товар + " нет остатка по партии поставщика " + ПартияПост);
				Возврат 0;
			КонецЕсли;
			
			Если (ОсталосьСписать > 0) Тогда
				Сообщить("Для товара " + Товар.Код  + " " + Товар + " по партии поставщика " + ПартияПост + " недостаточно товара. Не хватает " 
				+ ОсталосьСписать);
				Возврат 0;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	Возврат 1;	
КонецФункции
//*/------------------------

//-------------------------------------
Процедура ОбработкаПроведения()
	ЭтоГрупповаяОбработка = Макс(ГрупповаяОбработка(),глГрупповоеПроведение);

	Если ДатаДок>РабочаяДата() Тогда
		глНеПроводить(Контекст,"Нельзя проводить документ будущей датой!");
		Возврат;
	КонецЕсли;
	
	Если глПроверкаДублейСтрок(Контекст)=1 Тогда
		глНеПроводить(Контекст,"В документе строки с одинаковым товаром, но разной ценой!");
		Возврат;
	КонецЕсли;
	Если ЭтоГрупповаяОбработка = 0 Тогда
		АвторПровел= глПользователь;
	КонецЕсли;

	РассчитатьШапку();
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ПроверкаСтроки() = 0 Тогда
			глНеПроводить(Контекст); 
			Возврат;
		КонецЕсли;
	КонецЦикла;		                                 
	
	спФирмы = глПолучитьФирмы(Контекст);
	
	Если спФирмы.РазмерСписка()>0 Тогда
		ДвиженияОстатки();
		ДвиженияПартии();
		
		Если ДвиженияПартииПоставщика()  = 0 Тогда
			глНеПроводить(Контекст); 
			Возврат;
		КонецЕсли;
		
		ДвиженияВзаиморасчеты();
	КонецЕсли;
КонецПроцедуры


