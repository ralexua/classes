Перем Срок;
Перем СписокДействий;
Перем СтараяДата;

Перем НачальнаяДатаДокумента;
//*****************************************************************************
// "служебные" функции и процедуры 

//*****************************************************************************
Функция ЗаголовокФормы() 
	Перем Заголовок, Название;
	Заголовок = "Снятие резерва";
	Название  = "Снятие резерва №";        

	Заголовок = Заголовок + глЗаголовок(Контекст);
	
	Форма.Заголовок(Заголовок);     
	Возврат Название;
КонецФункции //ЗаголовокФормы

//*****************************************************************************
// функции и процедуры, вызываемые из формул элементов диалога

//******************************************************************************
Процедура ИзмДата()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
КонецПроцедуры

//*****************************************************************************
Процедура ВыборФирмы()
	// по кнопке редактирования параметров фирмы в докумнете
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ИнформацияОфирме", КонтекстДокумента);
КонецПроцедуры	

//******************************************************************************
Процедура Заполнить()
	Перем Резервы, ВклФильтр;
	Перем Итоги;
	
	УдалитьСтроки();
	
	Итоги = СоздатьОбъект("ТаблицаЗначений");

	ВклФильтр = 0;
	Резервы = СоздатьОбъект("Регистр.РезервыТоваров");
	Если ПустоеЗначение(ВыбТовар) = 0 Тогда
		Резервы.УстановитьФильтр(ВыбТовар,);
		ВклФильтр = 1;
	КонецЕсли;
	Резервы.ВыгрузитьИтоги(Итоги, ВклФильтр);
	Итоги.Свернуть("2","3");
	
	Найдено=0;
	Для Счетчик=1 По Итоги.КоличествоСТрок() Цикл
		Док = Итоги.ПолучитьЗначение(Счетчик,1);
		Если глБанковскаяДата(Док.ДатаДок,Док.СрокРезервирования)<ДатаДок Тогда
			//*ralex, 11-07-22 21:22
			//Если Фирма = Док.Фирма тогда
			//	НоваяСтрока();
			//	ПоСчету=Док;
			//	Найдено=1;
			//КонецЕсли;	
			// -------- заменено на:
				НоваяСтрока();
				ПоСчету=Док;
				Найдено=1;
			//*/------------------------
		КонецЕсли;
	КонецЦикла;
	Если Найдено=0 Тогда
		Предупреждение ("Не найдено просроченных Счетов с зарезервированными товарами!");
	КонецЕсли;

КонецПроцедуры	

//******************************************************************************
Процедура ВводНового(Скопирован)

	глЗаполнитьШапку(Контекст);
	Если Скопирован=1 Тогда	//копирование документа
		Возврат;
	КонецЕсли;

	ДатаДок=РабочаяДата();
	Основание="Истек срок резервирования товара.";
	
	Заполнить();
КонецПроцедуры

//******************************************************************************
Процедура ВводНаОсновании(ДокОснование)
	Если глПроверкаОснования(Контекст, ДокОснование) = Нет Тогда
		Предупреждение("Снятие резерва нельзя вводить на основании выбранного документа!");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	Автор = глПользователь;
	ДатаДок=РабочаяДата();
	глЗаполнитьШапкуНаОсн(Контекст,ДокОснование);
	ДатаДок=РабочаяДата();
	НоваяСтрока();
	ПоСчету=ДокОснование;
КонецПроцедуры

//******************************************************************************
Процедура ПриОткрытии()       
	НачальнаяДатаДокумента = ДатаДок;
	глПроверкаРазрешенияРедактирования(Контекст);
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кнОК.Доступность(0);
		Форма.кнПровести.Доступность(0);
		Форма.кнДействия.Доступность(0);
		
		Форма.кнЗаполнить.Доступность(0);
	Иначе
		Форма.КнопкаПоУмолчанию("кнОК");
	КонецЕсли;
	
	СтараяДата = ДатаДок;
КонецПроцедуры

//======================================================================
Функция ПодготовитьСписокРезервПоСчету()
		тз = СоздатьОбъект("ТаблицаЗначений");
		Регистры=СоздатьОбъект("Регистры");
		Рег=Регистры.РезервыТоваров;
		
		Рег.УстановитьЗначениеФильтра("ПоСчету",ПоСчету,1);
		Рег.ВременныйРасчет(1);
		Регистры.РассчитатьРегистрыНа(ТекущийДокумент());
		Рег.ВыгрузитьИтоги(тз,0,1);
	спс = СоздатьОбъект("СписокЗначений");
	спс.ДобавитьЗначение(поСчету,"-- ОТКРЫТЬ ДОКУМЕНТ");
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		спс.ДобавитьЗначение(тз.Товар,""+ тз.Товар.Код + "  " + тз.Товар + " = " + тз.РезервТовара + " " + тз.Товар.БазоваяЕдиница);
	КонецЦикла;
	Возврат спс;
КонецФункции // ПодготовитьСписокРезервПоСчету

//*****************************************************************************
Процедура ПриНачалеВыбораЗначения(Рекв,Флаг)
	Флаг=0;
	Если Рекв="Фирма" Тогда
		ВыборФирмы();
	ИначеЕсли Рекв = "ПоСчету" Тогда
		спс = ПодготовитьСписокРезервПоСчету();
		выбЗн = 0;
		Если спс.ВыбратьЗначение(выбЗн,,,,1) <> 1 Тогда
			Возврат;
		КонецЕсли;
		Если ТипЗначения(выбЗн) = 12 Тогда
			ОткрытьФормуМодально(выбЗн);
		КонецЕсли;
	Иначе
		Флаг=1;
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
Процедура ПриЗаписи()
	Если глМожноЗаписатьДокумент(Контекст)=0 Тогда
		СтатусВозврата(0);                        
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
КонецПроцедуры

//Инициализирум список действий по кнопке "Действия"    
СписокДействий = глПолучитьСписокДействий("
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ОткрытьВЖурнале,
	|ИзмКомментария");