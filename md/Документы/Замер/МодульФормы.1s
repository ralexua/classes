//*****************************************************************************
// Описание переменных 
Перем ДатаОплаты;
Перем СписокДействий;
Перем КатДвери,катРазмер,катЦвет,катТовара;
Перем контРодитель;
Перем текФрейм;
Перем допТорг;
Перем ОтправленоНаЕмаил Экспорт; //на какой емаил отправили письмо
перем ПутьКФайлуФотоТовара,текущийТовар;
перем работаСКартинками;

//======================================================================
Функция УстановитьНадписьРаспечатанОтгружен()
	Возврат дополненияТорговля.УстановитьНадписьРаспечатанОтгружен(Контекст);
КонецФункции

//======================================================================
Функция УстановитьНадписьАвтор_Провел()
	тхт = "";
	Если ПустоеЗначение(Автор) = 0 Тогда
		тхт = тхт + "Автор: " + Автор;
	КонецЕсли;
	Если ПустоеЗначение(АвторПровел) = 0 Тогда
		тхт = тхт + ";   Провел: " + АвторПровел;
	КонецЕсли;
	Возврат тхт;
КонецФункции // гл

//*****************************************************************************
// "служебные" функции и процедуры 
//======================================================================
Функция устДоступность()
	фл = ?(НазваниеНабораПрав() = "Администратор",1,0);
	форма.тхтКомментарийАдм.Видимость(фл);
	форма.КомментарийАдм.Видимость(фл);
	//Если (фл = 0) и (распечатан = 1) Тогда
	//	Форма.кнПечать.Доступность(0);
	//КонецЕсли;
КонецФункции // устДоступность

//*****************************************************************************
Функция ЗаголовокФормы() 
	Перем Заголовок, Название;
	Заголовок = "Замір";
	Название ="Замір №";
	
	Заголовок = Заголовок + глЗаголовок(Контекст);
	
	Форма.Заголовок(Заголовок);     
	Возврат Название;
КонецФункции //ЗаголовокФормы

//======================================================================
//-ralex, 27-03-23 00:20
//Процедура ПередатьДокументНаОтправку()
//	_email = СоздатьОбъект("_email");
//	ЗапрашиватьЕмаил = 1;
//	Если НазваниеНабораПрав() <> "Администратор" Тогда
//		ЗапрашиватьЕмаил = 0;
//	КонецЕсли;
//	емаилКл = СокрЛП(ДокументОснование.Контрагент.АдресПолучателя);
//	емаилИсп = СокрЛП(Исполнитель.email);
//	емаил = емаилКл + ?(ПустаяСтрока(емаилИсп) = 1,"",",") + емаилИсп; 
//	Расш = _email.создатьСписокПараметров(Контекст,емаил,ЗапрашиватьЕмаил,"pdf");
//	Расш.ДобавитьЗначение(СокрЛП(КомментарийПоставщику),"ТекстПисьма");
//	ТаблДок = текФрейм.ПанельИнструментов.Документ;
//	_email.ОтправкаПисьма(Расш,ТаблДок);
//КонецПроцедуры // ПередатьДокументНаОтправку
//-/------------------------

//+ralex, 27-03-23 00:20
Процедура ПередатьДокументНаОтправку()
	ОтправленоНаЕмаил = "";
	ЗапрашиватьЕмаил = 1;
	Если НазваниеНабораПрав() <> "Администратор" Тогда
		ЗапрашиватьЕмаил = 0;
	КонецЕсли;
	_email = СоздатьОбъект("_email");
	Расш = _email.создатьСписокПараметров(Контекст,Контрагент.АдресПолучателя,ЗапрашиватьЕмаил,"pdf");
	//Расш.ДобавитьЗначение(СокрЛП(КомментарийПоставщику),"ТекстПисьма");
	ТаблДок = текФрейм.ПанельИнструментов.Документ;
	_email.ОтправкаПисьма(Расш,ТаблДок);
	Если ПустаяСтрока(ОтправленоНаЕмаил) = 0 Тогда
		//готовим запись в спр. состояний документа
		спсДанные = дополненияТорговля.ПодготовитьДанныеОбОтправкеЕмаил(ОтправленоНаЕмаил,глПользователь);
		дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"инфоОбОтправкеЕмаил",спсДанные);
		флОтправлен = 1;
		ЗаписьЖурналаРегистрации("Письмо отправлено: " + ОтправленоНаЕмаил ,,,,4);
	Иначе
		Сообщить("Письмо не отправлено.");
		ЗаписьЖурналаРегистрации("Письмо не отправлено." ,,,,4);
	КонецЕсли;
КонецПроцедуры // ПередатьДокументНаОтправку
//+/------------------------

//======================================================================
Процедура ПередатьДокументНаОтправку_Телеграм()
	ТаблДок = текФрейм.ПанельИнструментов.Документ;
	спсПарам = СоздатьОбъект("СписокЗначений");
	спсПарам.ДобавитьЗначение("документ","видИсточника");
	спсПарам.ДобавитьЗначение("pdf","форматФайла");
	спсПарам.ДобавитьЗначение(ТаблДок,"исхТаблица");
	спсПарам.ДобавитьЗначение(глВернутьКонтекст(Контекст),"контекст");
	спсПарам.ДобавитьЗначение(СокрЛП(глПользователь.Сотрудник.id_telegram),"id");
	телеграм = СоздатьОбъект("telegramApi");
	
	телеграм.ОтправитьДокументВБот(спсПарам);
КонецПроцедуры // ПередатьДокументНаОтправку


//----работа  с фреймом -------

//======================================================================
//Процедура ОбработкаЯчейкиТаблицы (Значение, ФлагСтандОбр, Таблица, Адрес)
//	Сообщить ("ОбработкаЯчейкиТаблицы: Значение = " + Значение);
//КонецПроцедуры

//Процедура ПриВыбореЯчейки(Документ, НомерСтроки, номерКолонки)
//	Если НазваниеНабораПрав() <> "Администратор" Тогда
//		Возврат;
//	КонецЕсли;
//	//Сообщить("Выбрана ячейка " + номерСтроки + ":" + НомерКолонки);
//	Обл = Документ.область(НомерСтроки,номерКолонки);
//	//Сообщить(обл.цветФона);
//	Если Обл.ЦветФона <> ЦветВыкл Тогда
//		Обл.цветФона = ЦветВыкл;
//	Иначе
//		Обл.ЦветФона = ЦветВкл;
//	КонецЕсли;
//	текФрейм.обновить();
//КонецПроцедуры

Процедура ЗакрытьФрейм ()
	Если ТипЗначенияСтр (текФрейм) <> "ТабличныйДокумент.Фрейм" Тогда
		//Сообщить ("Фрейм не был открыт");
		Возврат;
	КонецЕсли;
	текФрейм.Закрыть ();
КонецПроцедуры

//======================================================================
Функция СоздатьМеню()
	меню = СоздатьОбъект("Йоксель.Меню");
	меню.Добавить("емаил","емаил","емаил1");
	меню.Добавить("контрагент","выбрать клиента","контрагент1");
	Возврат меню;
КонецФункции // СоздатьМеню

//======================================================================
Процедура ДобавитьКнопку(идКн,заголовокКн,значениеКн,доступностьКн = 1,этоФлажок = 0,ВыбКнопкаЗначениеФлажка = 0,ВыбКнопкаСМеню = 0)
	Если ТипЗначенияСтр (текФрейм) <> "ТабличныйДокумент.Фрейм" Тогда
		Сообщить ("Фрейм не был открыт");
		Возврат;
	КонецЕсли;
	
	Панель = текФрейм.ПанельИнструментов;
	Кнопка = Панель.ДобавитьКнопку (идКн);
	Кнопка.Заголовок = заголовокКн;
	Кнопка.Значение = значениеКн;
	Кнопка.Доступность = доступностьКн;
	Кнопка.ЭтоФлажок = этоФлажок;
	Кнопка.ЗначениеФлажка = ВыбКнопкаЗначениеФлажка; //1/0
	Если ВыбКнопкаСМеню = 1 Тогда
		Кнопка.Меню = СоздатьМеню ();
	Иначе
		Кнопка.Меню = 0;
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ПоКомандеПользователя (Документ, Команда, Значение)
	//Сообщить ("Поступила команда: " + Команда + ", Ассоциированное значение: " + Значение);
	//Если Значение = "обновить" Тогда
	//	ЗакрытьФрейм();
	//	ОбработкаЯчейкиТаблицы(Расшифровка, 0, Т);
	//КонецЕсли;
	
	//Если Значение = "сохрИзм" Тогда
	//	СохранитьИзмененияВТоварах();
	//КонецЕсли;
	
	Если Значение = "sendEmail" Тогда
		спсПарам = СоздатьОбъект("СписокЗначений");
		спсПарам.Установить("Формат",1); //excel
		спсПарам.Установить("ИДКонтекста",Метаданные.ПолныйИдентификатор());
		спсПарам.Установить("Тема",Метаданные.Идентификатор);
		ПередатьДокументНаОтправку();
		//ИначеЕсли Значение = "контрагент1"  Тогда
		//	текКонтрагент = выбКонтрагент;
		//	Если ВвестиЗначение(текКонтрагент,"Справочник.Контрагенты") <> 1 Тогда
		//		Возврат;
		//	КонецЕсли;
		//	Если ПустаяСтрока(текКонтрагент.АдресПолучателя) = 1 Тогда
		//		Предупреждение("У клиента не указан email");
		//		Возврат;
		//	КонецЕсли;
		//	спсПарам = СоздатьОбъект("СписокЗначений");
		//	спсПарам.Установить("Формат",1); //excel
		//	спсПарам.Установить("ИДКонтекста","Отчет.РабочийПрайс");
		//	спсПарам.Установить("Тема","Прайс");
		//	спсПарам.установить("емаил",СокрЛП(текКонтрагент.АдресПолучателя));
		//	ОтправитьЕмаил(спсПарам);
	ИначеЕсли Значение = "sendtelegram" Тогда
		ПередатьДокументНаОтправку_Телеграм();
	КонецЕсли;
	//Если Значение = "счРасш" Тогда
	//	ТаблДок = текФрейм.ПанельИнструментов.Документ;
	//	Обл = ТаблДок.область(15,1);
	//	Если Обл.содержитРасшифровку = 1 Тогда
	//		Сообщить(Обл.Расшифровка() + " :: " + Обл.Расшифровка().код);
	//	Иначе
	//		Сообщить(Обл + " не содержит расшифровки");
	//	КонецЕсли;
	//КонецЕсли;
	
КонецПроцедуры

//======================================================================
Процедура ВывестиВоФрейм(ТаблМХЛ,еМаил = 0)
	Если (НазваниеНабораПрав() <> "Администратор") и (распечатан = 1) Тогда
		Возврат;
	КонецЕсли;
	ТаблДок = СоздатьОбъект ("ТабличныйДокумент");
	ТаблДок.ЗагрузитьИзТаблицы (ТаблМХЛ);
	//параметры печати
	ТаблДок.ПараметрыПечати.Ориентация=2;
	//конец параметры печати
	текФрейм = ТаблДок.Показать ("" + ТекущийДокумент());
	текФрейм.ТолькоПросмотр(0);
	Панель = текФрейм.ПанельИнструментов;
	ЭлемУправления = текФрейм.получитьЭлементУправления(1);
	Панель.ПодписатьсяНаСобытие ("КомандаПользователя", "ПоКомандеПользователя");
	//ЭлемУправления.ПодписатьсяНаСобытие ("ВыборЯчейки", "ПриВыбореЯчейки");
	//ЭлемУправления.ПодписатьсяНаСобытие ("ВызовКонтекстногоМеню", "ВызовКонтекстногоМеню");
	//текФрейм.ФиксироватьСтрокиСверху(фиксСтрок);
	//Панель.ПодписатьсяНаСобытие ("ОбработкаЯчейкиТаблицы", "ОбработкаЯчейкиТаблицы");
	ДобавитьКнопку("email","email","sendEmail",,,,0);
	//ДобавитьКнопку("обновить","Обновить","обновить");
	//Если НазваниеНабораПрав() = "Администратор" Тогда
	//	ДобавитьКнопку("сохрИзм","Записать изм.","сохрИзм");
	//КонецЕсли;
	//ДобавитьКнопку("СчитатьРасшифровку","Расшифровка","счРасш");
	Если ПустоеЗначение(глПользователь.Сотрудник) = 0 Тогда
		Если ПустаяСтрока(глПользователь.Сотрудник.id_telegram) = 0 Тогда
			ДобавитьКнопку("telegram","telegram","sendtelegram",,,,0);
		КонецЕсли;
	КонецЕсли;	
	
	Панель.Видимость = 1;
	Если НазваниеНабораПрав() <> "Администратор" Тогда
		распечатан = 1;
		Провести();
	КонецЕсли;
	//Если еМаил = 1 Тогда
	//	ПередатьДокументНаОтправку();
	//	ЗакрытьФрейм();
	//КонецЕсли;
	//ТаблДок.ВставитьКолонки(ТаблДок.ШиринаТаблицы() + 1, 2);

КонецПроцедуры // ВывестиВоФрейм

//******************************************************************************
Процедура ВводНового(Скопирован) //Предопределенная процедура
	//Предупреждение("Данный вид документов вводится только на основании других документов.");
	//СтатусВозврата(0);
	//Возврат;
КонецПроцедуры

//Функция ПолучитьСвойствоТовара(Товар,КодПараметра,ОбъектСвойство = 0)
//	спрКатегории = СоздатьОбъект("Справочник.КатегорииТоваров");
//	спрКатегории.ИспользоватьВладельца(Товар);
//	спрКатегории.ВыбратьЭлементы();
//	Пока спрКатегории.ПолучитьЭлемент() = 1 Цикл
//		Если спрКатегории.ПометкаУдаления() = 1 Тогда
//			Продолжить;
//		КонецЕсли;
//		Если спрКатегории.Категория.Родитель.ЭтоГруппа() = 0 Тогда
//			Продолжить;
//		КонецЕсли;
//		Если СокрЛП(спрКатегории.Категория.Родитель.КодПараметра) <> КодПараметра Тогда
//			Продолжить;
//		КонецЕсли;
//		ОбъектСвойство = спрКатегории.ТекущийЭлемент().Категория;
//		Возврат ОбъектСвойство;
//	КонецЦикла;
//	Возврат "";
//КонецФункции // ПолучитьСвойствоТовара

//======================================================================
Процедура ЗаменитьНомерДок()
	//новПреф = Врег(Лев(глПользователь,2));
	новПреф = "ВР-";
	Если ТипУчета=Упр Тогда
		преф = Константа.ПрефиксНомеровДокументовУпрУчета;
	Иначе
		преф = Фирма.ПрефиксНомеровДокументов;
	КонецЕсли;
	стрНомер = НомерДок;
	поз = Найти(стрНомер,преф);
	Если поз = 0 Тогда
		новНомер = новПреф + Прав(стрНомер,СтрДлина(стрНомер)- СтрДлина(новПреф));
	Иначе
		длинаПреф = СтрДлина(преф);
		стрНомер = Прав(стрНомер,СтрДлина(стрНомер)- СтрДлина(преф));
		новНомер = новПреф + стрНомер;
	КонецЕсли;
	НомерДок = новНомер;
КонецПроцедуры // ЗаменитьНомерДок

//Процедура ВводНаОсновании(ДокОснование) //Предопределенная процедура
//	ВидДок = ДокОснование.Вид();
//	Если НЕ((ВидДок = "РасходнаяНакладная") или (ВидДок = "Счет")) Тогда
//		Предупреждение("Заказ на врезку нельзя вводить на основании данного вида документов!");
//		СтатусВозврата(0);
//		Возврат;
//	КонецЕсли;
//	
//	глЗаполнитьШапкуНаОсн(Контекст,ДокОснование);
//	УстановитьНовыйНомер();
//	//ЗаменитьНомерДок();
//	флЕстьУслуга = 0;
//	ДокОснование.ВыбратьСтроки();
//	Пока ДокОснование.ПолучитьСтроку() = 1 Цикл
//		Если ДокОснование.Товар.ВидТовара = Перечисление.ВидыТоваров.Услуга Тогда
//			флЕстьУслуга = 1;
//		КонецЕсли;
//		флДверь = допТорг.ПолучитьПараметрГруппыСправочника(ДокОснование.Товар,"флЭтоГруппаДвери",ДатаДок);
//		Если флДверь <> 1 Тогда
//			Продолжить;
//		КонецЕсли;
//		НоваяСтрока();
//		Товар = ДокОснование.Товар;
//		Единица = ДокОснование.Единица;
//		Количество = ДокОснование.Количество;
//		Коэффициент = ДокОснование.Коэффициент;
//		СуммаСНДС = Формат(ДокОснование.суммаСНДС,"Ч012.2");
//		ЦенаСНДС = Формат(ДокОснование.суммаСНДС/?(Количество = 0,1,Количество),"Ч012.2");
//		измТМЦ();
//	КонецЦикла;
//	Если КоличествоСтрок() = 0 Тогда
//		Предупреждение("В документе нет дверей. Заказ на врезку не сформирован.");
//		СтатусВозврата(0);
//		Возврат;
//	КонецЕсли;
//	Если флЕстьУслуга = 0 Тогда
//		Предупреждение("В документе нет услуги врезки. Заказ на врезку не сформирован.");
//		СтатусВозврата(0);
//		Возврат;
//	КонецЕсли;
//КонецПроцедуры
//
//*****************************************************************************
Процедура ПриОткрытии() //Предопределенная процедура
	НачальнаяДатаДокумента = ДатаДок;
	глПроверкаРазрешенияРедактирования(Контекст);
	Если НазваниеНабораПрав() <> "Администратор" Тогда
		Форма.ТолькоПросмотр(Проведен());
		Форма.распечатан.Видимость(0);
	КонецЕсли;
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кнОК.Доступность(0);
		Форма.кнДействия.Доступность(0);
	Иначе
		Форма.КнопкаПоУмолчанию("кнОК");
	КонецЕсли;
КонецПроцедуры //При открытии

//*****************************************************************************
Процедура ПриНачалеВыбораЗначения(Рекв,Флаг)
	Флаг=1;
	Если Рекв = "цветДвери" Тогда
		текКат = катЦвет;
		ОткрытьПодбор("Справочник.Категории",,текКат);
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ИзмТМЦ()
	Если Товар.Выбран() = 1 Тогда
		цветДвери = дополненияТорговля.ПолучитьСвойствоТовара(Товар,"IP_PROP26");
	КонецЕсли;
КонецПроцедуры // ИзмТМЦ

//*****************************************************************************
Процедура ОбработкаПодбора(Выб) //Предопределенная процедура
	Если Выб.Вид() = "Номенклатура" Тогда
		глПриОбработкеПодбора(Выб,Контекст);
		измТМЦ();
	Иначе 
		цветДвери = выб;
	КонецЕсли;
КонецПроцедуры //Обработка подбора

//*****************************************************************************
Процедура ПриЗаписи() //Предопределенная процедура
	Если глМожноЗаписатьДокумент(Контекст)=0 Тогда
		СтатусВозврата(0);                        
		//ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		//	СтатусВозврата(0);
	КонецЕсли;
	Если ШтрКод = 0 Тогда
		ШтрКод = СформироватьШтрихКодДокумента(Контекст,ТекущийДокумент());
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ПриЗакрытии()
	Если (Выбран() = 1) и (ТипЗначения(Форма.Параметр) = 100) Тогда
		Форма.Параметр.ЗаказДвери = ТекущийДокумент();
		//Форма.Параметр.форма.Обновить(0);
	КонецЕсли;
КонецПроцедуры // ПриЗакрытии

//======================================================================
Процедура ОтправитьТаблицуЕмаил(еТабл)
	КаталогВложений = КаталогИБ() + СокрЛП(Фирма.КаталогИсхВложений);
	Если ПустаяСтрока(КаталогВложений) = 1 Тогда
		Предупреждение("Не указан каталог вложений для исходящих писем для фирмы " + Фирма + ". Письмо не отправлено." );
		Возврат;
	Иначе
		Если Прав(КаталогВложений,1) <> "\" Тогда
			КаталогВложений = КаталогВложений + "\";
		КонецЕсли;
	КонецЕсли;
	Вложение = КаталогВложений + Шаблон("[ТекущийДокумент().Вид()]_[ТекущийДокумент().номерДок]");
	еТабл.Записать(Вложение,1); //в формате XLS
	Если ПустаяСтрока(Фирма.ПутьКЕРТпочты) = 1 Тогда
		Предупреждение("В справочнике ""Фирмы"" не указан путь к внешней обработке работы с почтой. Отправка почты невозможна.");
		Возврат;
	КонецЕсли;
	спсПар = СоздатьОбъект("СписокЗначений");
	спсПар.ДобавитьЗначение(Контекст,"конт");
	спсПар.ДобавитьЗначение(Вложение + ".xls","Вложение");
	//+ralex, 20-06-20 17:00
	флОтправлен = 1;
	//Записать();
	Если Провести() = 0 Тогда
		Предупреждение("Документ не проведен. Заказ не отправлен.",15);
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	Форма.Обновить();
	//+/ralex, 20-06-20 17:00
	ОткрытьФорму("Отчет",спсПар,КаталогИБ() + СокрЛП(Фирма.ПутьКЕРТпочты));
КонецПроцедуры // ОтправитьЕмаил()

//======================================================================
Функция Проверка()
	Если НазваниеНабораПрав() = "Администратор" Тогда
		Возврат 1;
	КонецЕсли;
	Если ДокументОснование.Вид() = "РасходнаяНакладная" Тогда
		Если ДокументОснование.Распечатан <> 0 Тогда
			Возврат 0;
		Иначе
			Возврат 1;
		КонецЕсли;
	ИначеЕсли ДокументОснование.Вид() = "Счет" Тогда
		док = СоздатьОбъект("Документ");
		Док.ВыбратьПодчиненныеДокументы(,,ДокументОснование);
		Пока Док.ПолучитьДокумент() = 1 Цикл
			Если док.Вид() = "РасходнаяНакладная" Тогда
				Если док.Распечатан <> 0 Тогда
					Возврат 0;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Возврат 1;
КонецФункции // Проверка

Процедура ВывестиФотоТовара(ОбъектКартинка)
	работаСКартинками.ПоказатьКартинкуНаФорме_GFlax(объектКартинка,ПутьКФайлуФотоТовара,,,,текущийТовар);
КонецПроцедуры

Процедура Подбор()
	глПодбор(Контекст,"номенклатура","ДляПодбора")
КонецПроцедуры

//*ralex, 14-02-21 00:02
//Процедура Печать(еМаил = 0)
//	Таб = СоздатьОбъект("Таблица");    
//	Таб.ИсходнаяТаблица("Таблица1");
//	Если Провести() = 0 Тогда
//		СтатусВозврата(0);
//		Возврат;
//	КонецЕсли;
//	Форма.Обновить();
//	глУстПропись(Гривня);
//	Фирма.ИспользоватьДату(ДатаДок,1);
//	Если (ПустаяСтрока(Фирма.АдресОтправителя) = 0) и (ПустаяСтрока(Контрагент.АдресПолучателя) = 0) Тогда
//		Таб.ВывестиСекцию("Кнопки");	
//	КонецЕсли;
//	
//	Таб.ВывестиСекцию("Шапка");
//	Ном = 1;
//	ВыбратьСтроки();
//	Пока ПолучитьСтроку()=1 Цикл                
//		Таб.ВывестиСекцию("Строка");
//		Ном = Ном+1;
//	КонецЦикла;
//	//нижняя рамка в последней строке
//	Обл = Таб.Область(Таб.ВысотаТаблицы(),1,Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы());
//	Обл.РамкаСнизу(3);
//	
//	Таб.ВывестиСекцию("Дно"); 
//	Если (ПустаяСтрока(Фирма.АдресОтправителя) = 0) и (ПустаяСтрока(Контрагент.АдресПолучателя) = 0) Тогда
//		Таб.ОбластьПечати(2,1,Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы());
//	КонецЕсли;
//	
//	Если (названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер")  ИЛИ (названиенабораправ()="МенеджерТоварищ") Тогда
//		Таб.Защита(1);
//		Таб.ОбластьПечати(3,1,3,2);
//	КонецЕсли;
//	
//	Таб.Опции(0,0,,);
//	Таб.ТолькоПросмотр(1);
//	Если еМаил = 1 Тогда
//		ОтправитьТаблицуЕмаил(Таб);
//	Иначе
//		Таб.Показать("ПЕЧАТЬ: Заказ поставщику " + Контрагент,"");
//	КонецЕсли;
//КонецПроцедуры                                    
// -------- заменено на:



//Процедура Печать(еМаил = 0)
//	//Если проверка() = 0 Тогда
//	//	Предупреждение("Накладная распечатана. печать заказа заблокирована.");
//	//	Возврат;
//	//КонецЕсли;
//	//Если ПустоеЗначение(Исполнитель) = 1 Тогда
//	//	Предупреждение("Не указан исполнитель.");
//	//	Возврат;
//	//КонецЕсли;
//	
//	Если Проведен() = 0 Тогда
//		Если Вопрос("Перед печатью документ должен быть проведен. Провести?",4) <> 6 Тогда
//			Возврат;
//		КонецЕсли;
//		Если Провести() <> 1 Тогда
//			Возврат;
//		КонецЕсли;
//	КонецЕсли;
//	
//	Если ШтрКод = 0 Тогда
//		ШтрКод = СформироватьШтрихКодДокумента(Контекст,ТекущийДокумент());
//		Записать();
//	КонецЕсли;
//	ПечШтрихКод=Строка(ШтрКод);
//
//	Таб = СоздатьОбъект("Таблица");
//	
//	ИмяФайлаПечатнойФормы = КаталогИБ()+"ExtForms\PrnForms\VrezkaDveri.mxl";		
//	Если ФС.СуществуетФайл(ИмяФайлаПечатнойФормы) = 1 Тогда
//		Таб.ИсходнаяТаблица(ИмяФайлаПечатнойФормы);
//	Иначе
//		Таб.ИсходнаяТаблица("Бланк1");
//	КонецЕсли;
//	
//	Заказчик = ДокументОснование.контрагент.полнНаименование;
//	ЗаказчикТел = СокрЛП(ДокументОснование.контрагент.Телефоны);
//	ДатаЗаказа = ДатаДок;
//	
//	Таб.ВывестиСекцию("Шапка");
//	Таб.ВывестиСекцию("ШапкаТаб");
//	
//	КатДвери = гл_ПолучитьЗначениеДопКонстанты("катДвери");
//	катРазмер = гл_ПолучитьЗначениеДопКонстанты("катРазмерТовара");
//	катЦвет = гл_ПолучитьЗначениеДопКонстанты("катЦветТовара");
//	катТовара = СоздатьОбъект("Справочник.КатегорииТоваров");
//	СуммаИтого = 0; флДверь = 0;
//	
//	ВыбратьСтроки();
//	Пока  ПолучитьСтроку() = 1 Цикл
//		Таб.ВывестиСекцию("Стр");
//	КонецЦикла;
//
//	
//	симвДА = 254; симвНЕТ = 111;
//	
//	Таб.ВывестиСекцию("Дно");
//	
//	Таб.НоваяСтраница();
//	счФото = 0; счФотоВСтроке = 0;
//	ВыбратьСтроки();
//	Пока  ПолучитьСтроку() = 1 Цикл
//		ПутьКФайлуФотоТовара = СокрЛП(Товар.ФайлИзображения);
//		текущийТовар = Товар;
//		//модель, цвет, размер
//		КодТовара = Товар.Код;
//		текМодель = ПолучитьСвойствоТовара(Товар,"IP_модель");
//		текЦвет = ПолучитьСвойствоТовара(Товар,"IP_PROP26");
//		текРазмер = ПолучитьСвойствоТовара(Товар,"IP_PROP32");
//		
//		текМодель = ?(ПустоеЗначение(текМодель) = 1,"",СокрЛ(текМодель.Наименование));
//		текЦвет = ?(ПустоеЗначение(текЦвет) = 1,"",СокрЛ(текЦвет.Наименование));
//		текРазмер = ?(ПустоеЗначение(текРазмер) = 1,"",СокрЛ(текРазмер.Наименование));
//		
//		КодТовара = КодТовара + РазделительСтрок + текМодель + РазделительСтрок + текЦвет + РазделительСтрок + текРазмер; 
//		
//		Если ПустаяСтрока(ПутьКФайлуФотоТовара) = 0 Тогда
//			счФото = счФото + 1; 
//			счФотоВСтроке = ?(счФотоВСтроке%4 = 0,1,счФотоВСтроке + 1);
//			Если счФото%8 = 0 Тогда
//				Таб.НоваяСтраница();
//			КонецЕсли;
//			Если (счФотоВСтроке = 1) Тогда
//				Таб.ВывестиСекцию("стрФото|кол1");
//			Иначе
//				Таб.ПрисоединитьСекцию("стрФото|кол" + счФотоВСтроке);
//			КонецЕсли;
//		КонецЕсли;
//	КонецЦикла;
//	
//	Таб.ПараметрыСтраницы(2,,,5,5,5,5,0,0,1);
//	//Таб.Опции(0,0,0,0);
//	ВывестиВоФрейм(Таб);
//	//Таб.Показать();
//	//+ralex, 27-03-23 00:15
//	текРаспечатан = дополненияТорговля.ПолучитьСостояниеДокумента(Контекст,"распечатан"); 
//	дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"распечатан",текРаспечатан + 1);
//	//+/------------------------
//КонецПроцедуры
////*/ralex, 14-02-21 00:02

Функция РасшифровкаОбновить(Зн)
	Расш = СоздатьОбъект("СписокЗначений");
	Расш.Установить("Exel",1);
	Возврат Расш;
КонецФункции // РасшифровкаОбновить("Exel")

//======================================================================
Процедура ОбработкаЯчейкиТаблицы(Расшифровка, СтандартнаяОбработка, Таблица) 
	Если ПустоеЗначение(Расшифровка.Получить("Exel")) = 0 Тогда
		ОтправитьТаблицуЕмаил(Таблица);
		флОтправлен = 1;
		//Записать();
		Провести();
		форма.Обновить();
	КонецЕсли;
КонецПроцедуры

//*****************************************************************************
//Инициализирум список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
|СтруктураПодчиненности,
|ОткрытьВЖурнале,
|");

допТорг = СоздатьОбъект("дополненияТорговля");

КатДвери = гл_ПолучитьЗначениеДопКонстанты("катДвери");
катРазмер = гл_ПолучитьЗначениеДопКонстанты("катРазмерТовара");
катЦвет = гл_ПолучитьЗначениеДопКонстанты("катЦветТовара");
катТовара = СоздатьОбъект("Справочник.КатегорииТоваров");

//работаСКартинками = СоздатьОбъект("РаботаСКартинками");