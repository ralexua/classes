//*****************************************************************************
// Описание переменных 
Перем СписокДействий;
Перем спрКонтрПрава;
Перем стТовар; 
перем текФрейм;
перем спсАтрибутов;
Перем ОтправленоНаЕмаил Экспорт; //на какой емаил отправили письмо
перем стКоличество,стараяСумма,тзСтрок;
Перем ПутьКФайлуФотоТовара1,ПутьКФайлуФотоТовара2,работаСКартинками;

Процедура ВывестиQRCodeСтройбум(ОбъектКартинка)
	Сервис.НарисоватьШтрихкод(ОбъектКартинка,58,"https://stroibum.com.ua",0);
КонецПроцедуры

//======================================================================
Процедура ПередатьДокументНаОтправку()
	ОтправленоНаЕмаил = "";
	_email = СоздатьОбъект("_email");
	Расш = _email.создатьСписокПараметров(Контекст,Контрагент.АдресПолучателя,1,"pdf");
	ТаблДок = текФрейм.ПанельИнструментов.Документ;
	_email.ОтправкаПисьма(Расш,ТаблДок);
	Если ПустаяСтрока(ОтправленоНаЕмаил) = 0 Тогда
		//готовим запись в спр. состояний документа
		спсДанные = дополненияТорговля.ПодготовитьДанныеОбОтправкеЕмаил(ОтправленоНаЕмаил,глПользователь);
		дополненияТорговля.УстановитьСостояниеДокумента(Контекст,"инфоОбОтправкеЕмаил",спсДанные);
		флОтправлен = 1;
		ЗаписьЖурналаРегистрации("Письмо отправлено: " + ОтправленоНаЕмаил ,,,,4);
	Иначе
		Сообщить("Письмо не отправлено.");
		ЗаписьЖурналаРегистрации("Письмо не отправлено." ,,,,4);
	КонецЕсли;
КонецПроцедуры // ПередатьДокументНаОтправку

//======================================================================
Процедура ПередатьДокументНаОтправку_Телеграм()
	ТаблДок = текФрейм.ПанельИнструментов.Документ;
	спсПарам = СоздатьОбъект("СписокЗначений");
	спсПарам.ДобавитьЗначение("документ","видИсточника");
	спсПарам.ДобавитьЗначение("pdf","форматФайла");
	спсПарам.ДобавитьЗначение(ТаблДок,"исхТаблица");
	спсПарам.ДобавитьЗначение(глВернутьКонтекст(Контекст),"контекст");
	спсПарам.ДобавитьЗначение(СокрЛП(глПользователь.Сотрудник.id_telegram),"id");
	телеграм = СоздатьОбъект("telegramApi");
	
	телеграм.ОтправитьДокументВБот(спсПарам);
КонецПроцедуры // ПередатьДокументНаОтправку

//----работа  с фреймом -------

//======================================================================
//Процедура ОбработкаЯчейкиТаблицы (Значение, ФлагСтандОбр, Таблица, Адрес)
//	Сообщить ("ОбработкаЯчейкиТаблицы: Значение = " + Значение);
//КонецПроцедуры

//Процедура ПриВыбореЯчейки(Документ, НомерСтроки, номерКолонки)
//	Если НазваниеНабораПрав() <> "Администратор" Тогда
//		Возврат;
//	КонецЕсли;
//	//Сообщить("Выбрана ячейка " + номерСтроки + ":" + НомерКолонки);
//	Обл = Документ.область(НомерСтроки,номерКолонки);
//	//Сообщить(обл.цветФона);
//	Если Обл.ЦветФона <> ЦветВыкл Тогда
//		Обл.цветФона = ЦветВыкл;
//	Иначе
//		Обл.ЦветФона = ЦветВкл;
//	КонецЕсли;
//	текФрейм.обновить();
//КонецПроцедуры

Процедура ЗакрытьФрейм ()
	Если ТипЗначенияСтр (текФрейм) <> "ТабличныйДокумент.Фрейм" Тогда
		//Сообщить ("Фрейм не был открыт");
		Возврат;
	КонецЕсли;
	текФрейм.Закрыть ();
КонецПроцедуры

//======================================================================
Функция СоздатьМеню()
	меню = СоздатьОбъект("Йоксель.Меню");
	меню.Добавить("емаил","емаил","емаил1");
	меню.Добавить("telegram","telegram","telegram");
	меню.Добавить("контрагент","выбрать клиента","контрагент1");
	Возврат меню;
КонецФункции // СоздатьМеню

Процедура ДобавитьКнопку(идКн,заголовокКн,значениеКн,доступностьКн = 1,этоФлажок = 0,ВыбКнопкаЗначениеФлажка = 0,ВыбКнопкаСМеню = 0)
	Если ТипЗначенияСтр (текФрейм) <> "ТабличныйДокумент.Фрейм" Тогда
		Сообщить ("Фрейм не был открыт");
		Возврат;
	КонецЕсли;
	
	Панель = текФрейм.ПанельИнструментов;
	Кнопка = Панель.ДобавитьКнопку (идКн);
	Кнопка.Заголовок = заголовокКн;
	Кнопка.Значение = значениеКн;
	Кнопка.Доступность = доступностьКн;
	Кнопка.ЭтоФлажок = этоФлажок;
	Кнопка.ЗначениеФлажка = ВыбКнопкаЗначениеФлажка; //1/0
	Если ВыбКнопкаСМеню = 1 Тогда
		Кнопка.Меню = СоздатьМеню ();
	Иначе
		Кнопка.Меню = 0;
	КонецЕсли;
КонецПроцедуры

Процедура ПоКомандеПользователя (Документ, Команда, Значение)
	//Сообщить ("Поступила команда: " + Команда + ", Ассоциированное значение: " + Значение);
	//Если Значение = "обновить" Тогда
	//	ЗакрытьФрейм();
	//	ОбработкаЯчейкиТаблицы(Расшифровка, 0, Т);
	//КонецЕсли;
	
	//Если Значение = "сохрИзм" Тогда
	//	СохранитьИзмененияВТоварах();
	//КонецЕсли;
	
	Если Значение = "sendEmail" Тогда
		//-ralex, 17-02-23 15:53
		//спсПарам = СоздатьОбъект("СписокЗначений");
		//спсПарам.Установить("Формат",1); //excel
		//спсПарам.Установить("ИДКонтекста",Метаданные.ПолныйИдентификатор());
		//спсПарам.Установить("Тема",Метаданные.Идентификатор);
		//-/------------------------
		ПередатьДокументНаОтправку();
	ИначеЕсли Значение = "sendtelegram" Тогда
		ПередатьДокументНаОтправку_Телеграм();
	КонецЕсли;
	//Если Значение = "счРасш" Тогда
	//	ТаблДок = текФрейм.ПанельИнструментов.Документ;
	//	Обл = ТаблДок.область(15,1);
	//	Если Обл.содержитРасшифровку = 1 Тогда
	//		Сообщить(Обл.Расшифровка() + " :: " + Обл.Расшифровка().код);
	//	Иначе
	//		Сообщить(Обл + " не содержит расшифровки");
	//	КонецЕсли;
	//КонецЕсли;

КонецПроцедуры

//======================================================================
Процедура ВставитьКолонки(передКолонкой,квоКолонок)
	//ТабЭлемент.Документ.ВставитьКолонки (ВыбКолонка, ВыбКоличествоКолонок);
	//ТабЭлемент.Обновить ();
	текФрейм.ПанельИнструментов.Документ.ВставитьКолонки(передКолонкой,квоКолонок);
КонецПроцедуры // ВставитьКолонки

//======================================================================
Процедура ВызовКонтекстногоМеню()
КонецПроцедуры // гл

Процедура ВывестиВоФрейм(ТаблМХЛ,еМаил = 0)
	ТаблДок = СоздатьОбъект ("ТабличныйДокумент");
	ТаблДок.ЗагрузитьИзТаблицы (ТаблМХЛ);
	
	текФрейм = ТаблДок.Показать ("" + ТекущийДокумент());
	текФрейм.ТолькоПросмотр(1);
	Панель = текФрейм.ПанельИнструментов;
	ЭлемУправления = текФрейм.получитьЭлементУправления(1);
	Панель.ПодписатьсяНаСобытие ("КомандаПользователя", "ПоКомандеПользователя");
	//ЭлемУправления.ПодписатьсяНаСобытие ("ВыборЯчейки", "ПриВыбореЯчейки");
	//ЭлемУправления.ПодписатьсяНаСобытие ("ВызовКонтекстногоМеню", "ВызовКонтекстногоМеню");
	//текФрейм.ФиксироватьСтрокиСверху(фиксСтрок);
	//Панель.ПодписатьсяНаСобытие ("ОбработкаЯчейкиТаблицы", "ОбработкаЯчейкиТаблицы");
	ДобавитьКнопку("email","email","sendEmail",,,,0);
	//ДобавитьКнопку("обновить","Обновить","обновить");
	//Если НазваниеНабораПрав() = "Администратор" Тогда
	//	ДобавитьКнопку("сохрИзм","Записать изм.","сохрИзм");
	//КонецЕсли;
	//ДобавитьКнопку("СчитатьРасшифровку","Расшифровка","счРасш");
	Панель.Видимость = 1;
	//-ralex, 15-03-23 12:47
	//Если еМаил = 1 Тогда
	//	ПередатьДокументНаОтправку();
	//	ЗакрытьФрейм();
	//КонецЕсли;
	//-/------------------------
	Если ПустоеЗначение(глПользователь.Сотрудник) = 0 Тогда
		Если ПустаяСтрока(глПользователь.Сотрудник.id_telegram) = 0 Тогда
			ДобавитьКнопку("telegram","telegram","sendtelegram",,,,0);
		КонецЕсли;
	КонецЕсли;	
	//ТаблДок.ВставитьКолонки(ТаблДок.ШиринаТаблицы() + 1, 2);
КонецПроцедуры // ВывестиВоФрейм
//---конец работы с фреймом -------

//*****************************************************************************
Функция ЗаголовокФормы() 
	Перем Заголовок, Название;
	Заголовок = "Коммерческое предложение";
	Название ="Коммерческое предложение №";
	
	Заголовок = Заголовок + глЗаголовок(Контекст);
	
	Форма.Заголовок(Заголовок);     
	Возврат Название;
КонецФункции //ЗаголовокФормы

//******************************************************************************
Процедура ОбновитьНадписи()
	Форма.ТекстОснования.Заголовок(СокрП(Основание) + " на сумму " + ДокументОснование.Итог("СуммаСНДС") + " " + ДокументОснование.Валюта.Кратко);
КонецПроцедуры
  
//======================================================================
Функция ПроверитьСумму()
	Если Окр(Итог("СуммаСНДС"),0) <> Окр(ДокументОснование.Итог("СуммаСНДС"),0) Тогда
		Предупреждение("Сумма документа не совпадает с суммой документа - основания!");
		Возврат 0;
	КонецЕсли;
	Возврат 1;
КонецФункции // Проверитьсумму

//******************************************************************************
Процедура ИзмДатаДок()
	//глПриИзмененииДатыДокумента(Контекст, СтараяДата);
	ОбновитьНадписи();
КонецПроцедуры

Функция Итого()
	// Показ итоговых сумм по документу
	Перем Результат, итСуммаСНДС;
	итСумма = Итог("СуммаСНДС");
	Результат = "ВСЕГО: " + итСумма;
	Возврат Результат;
КонецФункции
 
//*****************************************************************************
// функции и процедуры, вызываемые из формул элементов диалога
                              
Функция УстДоступность()
	Если названиенабораправ()<>"Администратор" Тогда
		Если дополненияТорговля.ПолучитьСостояниеДокумента(Контекст,"распечатан") = 1 Тогда
			форма.толькопросмотр(1);
		КонецЕсли;
		Форма.КомментарийАдм.Доступность(0);
		Форма.кнОснование.Доступность(0);
	КонецЕсли;
Конецфункции //УстДоступность()

//======================================================================
//======================================================================
Функция ПроверкаЗаполнения()
	Ошибка = 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		Если ПустаяСтрока(имяКомплекта) = 1 Тогда
			Сообщить("В строке " + НомерСтроки + " не заполнен номер комплекта.");
			Ошибка = 1;
		КонецЕсли;
		Если ПустоеЗначение(ВидКомплектующего) = 1 Тогда
			Сообщить("В строке " + НомерСтроки + " не выбран вид комплектующего.");
			Ошибка = 1;
		КонецЕсли;
	КонецЦикла;
	Возврат Ошибка;
КонецФункции // ПроверкаЗаполнения

//======================================================================
Функция ПолучитьИмя(С)
	поз = Найти(С," ");
	Если поз = 0 Тогда
		Возврат "";
	КонецЕсли;
	Имя = Сред(С,поз+1);
	
	поз = Найти(Имя," ");
	Если поз = 0 Тогда
		Возврат Имя;
	КонецЕсли;
	
	Имя = Сред(Имя,1,поз-1);
	Возврат Имя;
КонецФункции // ПолучитьИмя(стр)

Процедура УдалитьИзСписка(спс,представление)
	Если спс.РазмерСписка() <> 0 Тогда
		для счПоз = 1 По спс.РазмерСписка() Цикл
			зн = "";
			спс.ПолучитьЗначение(счПоз,зн);
			Если зн = представление Тогда
				спс.УдалитьЗначение(счПоз+1,1);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

	//======================================================================
//*ralex, 12-10-23 16:14
//Процедура ПечатьДвери()
//	Если ПроверитьСумму() = 0 Тогда
//		Возврат;
//	КонецЕсли;
//	Записать();
//	Ошибка = ПроверкаЗаполнения();
//	Если Ошибка <> 0 Тогда
//		Сообщить("Исправьте ошибки заполнения документа  и попробуйте еще раз.");
//		Возврат;
//	КонецЕсли;
//	
//	телКонтрагента = СокрЛП(Контрагент.Телефон1) + ?(ПустаяСтрока(Контрагент.АдресПолучателя) = 0,"emali: " + Контрагент.АдресПолучателя,"");
//	имяСотр = ПолучитьИмя(глФИО(Автор.Сотрудник));
//	//нужно 2-е слово
//	
//	тзРез = СоздатьОбъект("ТаблицаЗначений");
//	тзРез.НоваяКолонка("тКомплект","Строка");
//	тзРез.НоваяКолонка("Товар","Справочник.Номенклатура");
//	тзРез.НоваяКолонка("Кво","Число",12,2);
//	тзРез.НоваяКолонка("Размер","Строка");
//	тзРез.НоваяКолонка("Проем","Строка");
//	тзРез.НоваяКолонка("Покрытие","Строка");
//	тзРез.НоваяКолонка("Полотно","Число",12,2);
//	тзРез.НоваяКолонка("Полотно_С","Число",12,2);
//	тзРез.НоваяКолонка("Коробка","Число",12,2);
//	тзРез.НоваяКолонка("Коробка_С","Число",12,2);
//	тзРез.НоваяКолонка("Наличник1","Число",12,2);
//	тзРез.НоваяКолонка("Наличник1_С","Число",12,2);
//	тзРез.НоваяКолонка("Наличник2","Число",12,2);
//	тзРез.НоваяКолонка("Наличник2_С","Число",12,2);
//	тзРез.НоваяКолонка("Расширитель","Число",12,2);
//	тзРез.НоваяКолонка("Расширитель_С","Число",12,2);
//	
//	тзУслуги = СоздатьОбъект("ТаблицаЗначений");
//	тзУслуги.НоваяКолонка("Услуга");
//	тзУслуги.НоваяКолонка("Сумма","Число",12,2);
//	
//	спсФурнитура = СоздатьОбъект("СписокЗначений");
//	спсПрочее = СоздатьОбъект("СписокЗначений");
//	
//	тз = СоздатьОбъект("ТаблицаЗначений");
//	ВыгрузитьТабличнуюЧасть(тз);
//	тз.Сортировать("имяКомплекта");
//	тз.НоваяКолонка("сортПолотно","Число",1,0); //для сортировки для картинок чтобы полотно было первым в комплекте
//	стКомплект = ""; ИтогоСуммаСоСкидкойТовары = 0;
//	стрСуммирования = "Кво,";
//	//стрСуммирования = "Кво,Полотно,Полотно_С,Коробка,Коробка_С,Наличник1,Наличник1_С,Наличник2,Наличник2_С,Расширитель,Расширитель_С";
//	тз.ВыбратьСтроки();
//	Пока тз.ПолучитьСтроку() = 1 Цикл
//		тКомплект = тз.имяКомплекта;
//		 
//		Если стКомплект <> тКомплект Тогда
//			тзРез.НоваяСтрока();
//			тзРез.тКомплект = тКомплект;
//			стКомплект = тКомплект;
//		КонецЕсли;
//		видКомл = тз.ВидКомплектующего;
//		Если видКомл = Перечисление.ВидыКомплектующих.Полотно Тогда
//			тзРез.Полотно = тз.СуммаБезСкидки;
//			тзРез.Полотно_С = тз.СуммаСНДС;
//			тзРез.Товар = тз.Товар;
//			тзРез.Размер = тз.Размер;	
//			тзРез.Покрытие = тз.Покрытие;
//			тзРез.Проем = "";
//			тзРез.Кво = тз.Количество;
//			тз.сортПолотно = 1;
//			ИтогоСуммаСоСкидкойТовары = ИтогоСуммаСоСкидкойТовары + тз.СуммаСНДС;
//		ИначеЕсли видКомл = Перечисление.ВидыКомплектующих.Короб Тогда
//			тзРез.Коробка = тз.СуммаБезСкидки;
//			тзРез.Коробка_С = тз.СуммаСНДС;
//			ИтогоСуммаСоСкидкойТовары = ИтогоСуммаСоСкидкойТовары + тз.СуммаСНДС;
//		ИначеЕсли видКомл = Перечисление.ВидыКомплектующих.Наличник1 Тогда
//			тзРез.Наличник1 = тз.СуммаБезСкидки;
//			тзРез.Наличник1_С = тз.СуммаСНДС;
//			ИтогоСуммаСоСкидкойТовары = ИтогоСуммаСоСкидкойТовары + тз.СуммаСНДС;
//		ИначеЕсли видКомл = Перечисление.ВидыКомплектующих.Наличник2 Тогда
//			тзРез.Наличник2 = тз.СуммаБезСкидки;
//			тзРез.Наличник2_С = тз.СуммаСНДС;
//			ИтогоСуммаСоСкидкойТовары = ИтогоСуммаСоСкидкойТовары + тз.СуммаСНДС;
//		ИначеЕсли видКомл = Перечисление.ВидыКомплектующих.Расширитель Тогда
//			тзРез.Расширитель = тз.СуммаБезСкидки;
//			тзРез.Расширитель_С = тз.СуммаСНДС;
//			ИтогоСуммаСоСкидкойТовары = ИтогоСуммаСоСкидкойТовары + тз.СуммаСНДС;
//		ИначеЕсли видКомл = Перечисление.ВидыКомплектующих.Фурнитура Тогда
//			поз = спсФурнитура.НайтиЗначение(тз.Товар);
//			Если поз <> 0 Тогда
//				номерКолонки  = 0;
//				спсФурнитура.ПолучитьЗначение(поз,номерКолонки);
//				номерКолонки = Число(номерКолонки);
//			Иначе
//				идКолонки = "к"+тзРез.КоличествоКолонок()+1;
//				идКолонки_С = "к_С"+тзРез.КоличествоКолонок()+1;
//				тзРез.НоваяКолонка(идКолонки,"Число",12,2);
//				номерКолонки = тзРез.КоличествоКолонок();
//				спсФурнитура.ДобавитьЗначение(тз.Товар,номерКолонки);
//				//стрСуммирования = стрСуммирования + ","+идКолонки;
//				
//				тзРез.НоваяКолонка(идКолонки_С,"Число",12,2);
//				номерКолонки_С = тзРез.КоличествоКолонок();
//				//стрСуммирования = стрСуммирования + ","+идКолонки;
//			КонецЕсли;
//			тзРез.УстановитьЗначение(тзРез.КоличествоСтрок(),номерКолонки,тз.СуммаБезСкидки);
//			тзРез.УстановитьЗначение(тзРез.КоличествоСтрок(),номерКолонки_С,тз.СуммаСНДС);
//			ИтогоСуммаСоСкидкойТовары = ИтогоСуммаСоСкидкойТовары + тз.СуммаСНДС;
//		
//		ИначеЕсли видКомл = Перечисление.ВидыКомплектующих.Прочее Тогда
//			поз = спсПрочее.НайтиЗначение(тз.Товар);
//			Если поз <> 0 Тогда
//				номерКолонки  = 0;
//				спсПрочее.ПолучитьЗначение(поз,номерКолонки);
//				номерКолонки = Число(номерКолонки);
//			Иначе
//				идКолонки = "к"+тзРез.КоличествоКолонок()+1;
//				идКолонки_С = "к_С"+тзРез.КоличествоКолонок()+1;
//				тзРез.НоваяКолонка(идКолонки,"Число",12,2);
//				номерКолонки = тзРез.КоличествоКолонок();
//				спсПрочее.ДобавитьЗначение(тз.Товар,номерКолонки);
//				//стрСуммирования = стрСуммирования + ","+идКолонки;
//				
//				тзРез.НоваяКолонка(идКолонки_С,"Число",12,2);
//				номерКолонки_С = тзРез.КоличествоКолонок();
//				//стрСуммирования = стрСуммирования + ","+идКолонки;
//			КонецЕсли;
//			тзРез.УстановитьЗначение(тзРез.КоличествоСтрок(),номерКолонки,тз.СуммаБезСкидки);
//			тзРез.УстановитьЗначение(тзРез.КоличествоСтрок(),номерКолонки_С,тз.СуммаСНДС);
//			ИтогоСуммаСоСкидкойТовары = ИтогоСуммаСоСкидкойТовары + тз.СуммаСНДС;
//	
//		ИначеЕсли видКомл = Перечисление.ВидыКомплектующих.Услуга Тогда
//			тзУслуги.НоваяСтрока();
//			тзУслуги.Услуга = тз.Товар;
//			тзУслуги.Сумма = тз.СуммаСНДС;
//		КонецЕсли;
//	КонецЦикла;
//	
//	//проверим есть ли товары со скидкой
//	сч = 7;
//	Пока сч <= тзРез.КоличествоКолонок() Цикл
//		Если тзРез.Итог(сч) = тзРез.Итог(сч + 1) Тогда
//			тзРез.УдалитьКолонку(сч+1);
//			УдалитьИзСписка(спсФурнитура,сч);
//			УдалитьИзСписка(спсПрочее,сч);
//			сч = сч + 1;
//			Продолжить;
//		КонецЕсли;
//		сч = сч + 2;
//	КонецЦикла;
//	
//	Для сч = 7 по тзРез.КоличествоКолонок() Цикл
//		идКолонки = тзРез.ПолучитьПараметрыКолонки(сч);
//		стрСуммирования = стрСуммирования + идКолонки + ",";
//	КонецЦикла;
//	стрСуммирования = Лев(стрСуммирования,СтрДлина(стрСуммирования)-1); //поледнюю запятую убрали.
//		
//	тзРез.Свернуть("тКомплект,Товар,Размер,Проем,Покрытие",стрСуммирования);
//	тзУслуги.Свернуть("Услуга","Сумма");
//	
//	Таб = СоздатьОбъект("Таблица");
//	
//	ИмяФайлаПечатнойФормы = КаталогИБ()+"ExtForms\PrnForms\kommers.mxl";		
//	Если ФС.СуществуетФайл(ИмяФайлаПечатнойФормы) = 1 Тогда
//		ПечФорма = ИмяФайлаПечатнойФормы;
//	Иначе
//		ПечФорма = "ТаблицаУ";
//		//Язык = глЯзык(ПечФорма); 	
//	КонецЕсли;
//	
//	Таб.ИсходнаяТаблица(ПечФорма);
//	//таб.ВывестиСекцию("Кнопки");
//	таб.ВывестиСекцию("Шапка|Общий");
//	таб.ПрисоединитьСекцию("Шапка|дляДвери");
//	таб.ВывестиСекцию("ШапкаТаб|Общий");
//	таб.ПрисоединитьСекцию("ШапкаТаб|дляДвери");
//		
//	счСекцийДляФото = 0;
//	
//	имяФурнитура = "";
//	началоПараметровВтзРез = 7;
//	НачалоПараметров = 23;
//	счКолонокПараметров = НачалоПараметров;
//	Если тзРез.Итог("Полотно") <> 0 Тогда
//		имяПарам = "Вартість полотна, грн.";
//		Таб.ПрисоединитьСекцию("ШапкаТаб|Компл");
//		счКолонокПараметров = счКолонокПараметров + 1;
//		Область = Таб.Область(Таб.ВысотаТаблицы() - 1,счКолонокПараметров,Таб.ВысотаТаблицы(),счКолонокПараметров);
//		//Область.Объединить();
//		Область.ВертикальноеПоложение(3);
//		счСекцийДляФото = счСекцийДляФото + 1;
//	КонецЕсли;	
//	
//	Попытка
//		Если тзРез.Итог("Полотно_С") <> 0 Тогда
//			имяПарам = "Вартість полотна зі знижкою, грн.";
//			Таб.ПрисоединитьСекцию("ШапкаТаб|Компл");
//			счКолонокПараметров = счКолонокПараметров + 1;
//			Область = Таб.Область(Таб.ВысотаТаблицы() - 1,счКолонокПараметров,Таб.ВысотаТаблицы(),счКолонокПараметров);
//			//Область.Объединить();
//			Область.ВертикальноеПоложение(3);
//			счСекцийДляФото = счСекцийДляФото + 1;
//		КонецЕсли;
//	Исключение
//	КонецПопытки;
//	
//	Если тзРез.Итог("Коробка") <> 0 Тогда
//		имяПарам = "Вартість короба, грн.";
//		Таб.ПрисоединитьСекцию("ШапкаТаб|Компл");
//		Область = Таб.Область(Таб.ВысотаТаблицы() - 1,счКолонокПараметров,Таб.ВысотаТаблицы(),счКолонокПараметров);
//		//Область.Объединить();
//		счКолонокПараметров = счКолонокПараметров + 1;
//		Область.ВертикальноеПоложение(3);
//		счСекцийДляФото = счСекцийДляФото + 1;
//	КонецЕсли;	
//	
//	Попытка
//		Если тзРез.Итог("Коробка_С") <> 0 Тогда
//			имяПарам = "Вартість короба зі знижкою, грн.";
//			Таб.ПрисоединитьСекцию("ШапкаТаб|Компл");
//			Область = Таб.Область(Таб.ВысотаТаблицы() - 1,счКолонокПараметров,Таб.ВысотаТаблицы(),счКолонокПараметров);
//			//Область.Объединить();
//			счКолонокПараметров = счКолонокПараметров + 1;
//			Область.ВертикальноеПоложение(3);
//			счСекцийДляФото = счСекцийДляФото + 1;
//		КонецЕсли;
//	Исключение
//	КонецПопытки;
//	
//	Если тзРез.Итог("Наличник1") <> 0 Тогда
//		имяПарам = "Вартість лиштви 1 сторона, грн.";
//		Таб.ПрисоединитьСекцию("ШапкаТаб|Компл");
//		счКолонокПараметров = счКолонокПараметров + 1;
//		Область = Таб.Область(Таб.ВысотаТаблицы() - 1,счКолонокПараметров,Таб.ВысотаТаблицы(),счКолонокПараметров);
//		Область = Таб.Область(Таб.ВысотаТаблицы(),счКолонокПараметров);
//		Область.ВертикальноеПоложение(3);
//		счСекцийДляФото = счСекцийДляФото + 1;
//	КонецЕсли;	
//	
//	Попытка
//		Если тзРез.Итог("Наличник1_С") <> 0 Тогда
//			имяПарам = "Вартість лиштви 1 сторона зі знижкою, грн.";
//			Таб.ПрисоединитьСекцию("ШапкаТаб|Компл");
//			счКолонокПараметров = счКолонокПараметров + 1;
//			Область = Таб.Область(Таб.ВысотаТаблицы() - 1,счКолонокПараметров,Таб.ВысотаТаблицы(),счКолонокПараметров);
//			Область = Таб.Область(Таб.ВысотаТаблицы(),счКолонокПараметров);
//			Область.ВертикальноеПоложение(3);
//			счСекцийДляФото = счСекцийДляФото + 1;
//		КонецЕсли;
//	Исключение
//	КонецПопытки;	
//	
//	Если тзРез.Итог("Наличник2") <> 0 Тогда
//		имяПарам = "Вартість лиштви 2 сторона, грн.";
//		Таб.ПрисоединитьСекцию("ШапкаТаб|Компл");
//		счКолонокПараметров = счКолонокПараметров + 1;
//		Область = Таб.Область(Таб.ВысотаТаблицы() - 1,счКолонокПараметров,Таб.ВысотаТаблицы(),счКолонокПараметров);
//		Область.ВертикальноеПоложение(3);
//		счСекцийДляФото = счСекцийДляФото + 1;
//	КонецЕсли;	
//	Попытка
//		Если тзРез.Итог("Наличник2_С") <> 0 Тогда
//			имяПарам = "Вартість лиштви 2 сторона зі знижкою, грн.";
//			Таб.ПрисоединитьСекцию("ШапкаТаб|Компл");
//			счКолонокПараметров = счКолонокПараметров + 1;
//			Область = Таб.Область(Таб.ВысотаТаблицы() - 1,счКолонокПараметров,Таб.ВысотаТаблицы(),счКолонокПараметров);
//			Область.ВертикальноеПоложение(3);
//			счСекцийДляФото = счСекцийДляФото + 1;
//		КонецЕсли;
//	Исключение
//	КонецПопытки;
//	
//	
//	Если тзРез.Итог("Расширитель") <> 0 Тогда
//		имяПарам = "Вартість розширювача, грн.";
//		Таб.ПрисоединитьСекцию("ШапкаТаб|Компл");
//		счКолонокПараметров = счКолонокПараметров + 1;
//		Область = Таб.Область(Таб.ВысотаТаблицы() - 1,счКолонокПараметров,Таб.ВысотаТаблицы(),счКолонокПараметров);
//		Область.ВертикальноеПоложение(3);
//		счСекцийДляФото = счСекцийДляФото + 1;
//	КонецЕсли;	
//	
//	Попытка
//		Если тзРез.Итог("Расширитель_С") <> 0 Тогда
//			имяПарам = "Вартість розширювача зі знижкою, грн.";
//			Таб.ПрисоединитьСекцию("ШапкаТаб|Компл");
//			счКолонокПараметров = счКолонокПараметров + 1;
//			Область = Таб.Область(Таб.ВысотаТаблицы() - 1,счКолонокПараметров,Таб.ВысотаТаблицы(),счКолонокПараметров);
//			Область.ВертикальноеПоложение(3);
//			счСекцийДляФото = счСекцийДляФото + 1;
//		КонецЕсли;
//	Исключение
//	КонецПопытки;	
//	началоФурнитура = Таб.ШиринаТаблицы() +1;
//	Если спсФурнитура.РазмерСписка() <> 0 Тогда
//		Для сч = 1 По спсФурнитура.РазмерСписка() Цикл
//			имяПарам = "";
//			имяФурнитура = спсФурнитура.ПолучитьЗначение(сч,);
//			Таб.ПрисоединитьСекцию("ШапкаТаб|Компл");
//			счКолонокПараметров = счКолонокПараметров + 1;
//			счСекцийДляФото = счСекцийДляФото + 1;
//					
//			имяФурнитура = спсФурнитура.ПолучитьЗначение(сч,) + " зі знижкою.";
//			Таб.ПрисоединитьСекцию("ШапкаТаб|Компл");
//			счКолонокПараметров = счКолонокПараметров + 1;
//			счСекцийДляФото = счСекцийДляФото + 1;
//		КонецЦикла;
//		
//		Область = Таб.Область(Таб.ВысотаТаблицы() - 1,началоФурнитура,Таб.ВысотаТаблицы() - 1,счКолонокПараметров);
//		Область.Объединить();
//		Область.Текст = "Фурнитура";
//		Область.РазмерШрифта(9);
//		Область.ГоризонтальноеПоложение(3);
//		Область.ВертикальноеПоложение(3);
//		Область.РамкаОбвести(3,3,3,3);
//	КонецЕсли;
//	
//	началоПрочее = Таб.ШиринаТаблицы() +1;
//	Если спсПрочее.РазмерСписка() <> 0 Тогда
//		Для сч = 1 По спсПрочее.РазмерСписка() Цикл
//			имяПарам = "";
//			имяФурнитура = спсПрочее.ПолучитьЗначение(сч,);
//			Таб.ПрисоединитьСекцию("ШапкаТаб|Компл");
//			счКолонокПараметров = счКолонокПараметров + 1;
//			
//			имяФурнитура = спсПрочее.ПолучитьЗначение(сч,) + " зі знижкою.";
//			Таб.ПрисоединитьСекцию("ШапкаТаб|Компл");
//			счКолонокПараметров = счКолонокПараметров + 1;
//		КонецЦикла;
//		
//		Область = Таб.Область(Таб.ВысотаТаблицы() - 1,началоПрочее,Таб.ВысотаТаблицы() - 1,счКолонокПараметров);
//		Область.Объединить();
//		Область.Текст = "Прочее";
//		Область.РазмерШрифта(9);
//		Область.ГоризонтальноеПоложение(3);
//		Область.ВертикальноеПоложение(3);
//		Область.РамкаОбвести(3,3,3,3);
//	КонецЕсли;
//	//колонка стоимость комплекта
//	имяПарам = "Вартість комплекту";
//	имяФурнитура = "";
//	Таб.ПрисоединитьСекцию("ШапкаТаб|Компл");
//	счКолонокПараметров = счКолонокПараметров + 1;
//	Область = Таб.Область(Таб.ВысотаТаблицы() - 1,счКолонокПараметров,Таб.ВысотаТаблицы(),счКолонокПараметров);
//	Область.РазмерШрифта(9);
//	Область.ГоризонтальноеПоложение(3);
//	Область.ВертикальноеПоложение(3);
//	Область.Контроль(4);
//	Область.РамкаОбвести(3,3,3,3);
//	
//	имяПарам = "Вартість комплекту зі знижкою";
//	имяФурнитура = "";
//	Таб.ПрисоединитьСекцию("ШапкаТаб|Компл");
//	счКолонокПараметров = счКолонокПараметров + 1;
//	Область = Таб.Область(Таб.ВысотаТаблицы() - 1,счКолонокПараметров,Таб.ВысотаТаблицы(),счКолонокПараметров);
//	Область.РазмерШрифта(9);
//	Область.ГоризонтальноеПоложение(3);
//	Область.ВертикальноеПоложение(3);
//	Область.Контроль(4);
//	Область.РамкаОбвести(3,3,3,3);
//	//конец колонка стоимость комплекта
//	
//	//выводим строки
//	суммаКомплекта = 0; суммаВсехКомплектов = 0;	
//	тзРез.ВыбратьСтроки();
//	Пока тзРез.ПолучитьСтроку() = 1 Цикл
//		суммаКомплекта = 0; суммаКомплекта_С = 0;
//		тКомплект = тзРез.тКомплект;
//		тТовар = тзРез.Товар;
//		тРазмер	= тзРез.Размер;	
//		тКво	= тзРез.Кво;	
//		тПроем = "";
//		тПокрытие = тзРез.Покрытие;
//		Таб.ВывестиСекцию("стр|общий");
//		Таб.ПрисоединитьСекцию("стр|дляДвери");
//		Для сч = началоПараметровВтзРез По тзРез.КоличествоКолонок() Цикл
//			Если тзРез.Итог(сч) = 0 Тогда
//				Продолжить;
//			КонецЕсли;
//			текСумма = тзРез.ПолучитьЗначение(тзРез.НомерСтроки,сч);
//			идКолонки = тзРез.ПолучитьПараметрыКолонки(сч);
//			Если Найти(идКолонки,"_С") = 0 Тогда
//				суммаКомплекта = суммаКомплекта + текСумма;
//				суммаВсехКомплектов = суммаВсехКомплектов + текСумма;
//			Иначе
//				суммаКомплекта_С = суммаКомплекта_С + текСумма;
//			КонецЕсли;
//			тПарам = "" + Формат(текСумма,"Ч012.2");
//			Таб.ПрисоединитьСекцию("стр|Компл");
//		КонецЦикла;
//		тПарам = "" + Формат(суммаКомплекта,"Ч012.2");
//		Таб.ПрисоединитьСекцию("стр|Компл");
//		тПарам = "" + Формат(суммаКомплекта_С,"Ч012.2");
//		Таб.ПрисоединитьСекцию("стр|Компл");
//	КонецЦикла;
//	
//	Если Окр(суммаВсехКомплектов + тзУслуги.Итог("Сумма"),2) <> Окр(Итог("СуммаБезСкидки"),2) Тогда
//		ТекстСообщения = "Проверьте распределение комплектации между комплектами. Каждый комплект - одна дверь.";
//		Предупреждение(ТекстСообщения);
//		Сообщить(ТекстСообщения);
//		//Возврат;
//	КонецЕсли;
//	
//	//выводим общий итог по товарам.
//	Таб.ВывестиСекцию("пустаяСтрока");
//	//*ralex, 07-09-23 14:34
//	//Область = Таб.Область(Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы()-5,Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы()-1);
//	// -------- заменено на:
//	Область = Таб.Область(Таб.ВысотаТаблицы(),счКолонокПараметров-5,Таб.ВысотаТаблицы(),счКолонокПараметров-1);
//	//*/------------------------
//	Область.Объединить();
//	Область.Текст = "Всього грн.";
//	Область.Полужирный(1);
//	Область.РазмерШрифта(10);
//	Область.ГоризонтальноеПоложение(2);
//	Область.ВертикальноеПоложение(3);
//	Область.РамкаОбвести(3,3,3,3);
//	
//	//*ralex, 07-09-23 14:34
//	//Область = Таб.Область(Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы(),Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы());
//	// -------- заменено на:
//	Область = Таб.Область(Таб.ВысотаТаблицы(),счКолонокПараметров,Таб.ВысотаТаблицы(),счКолонокПараметров);
//	//*/------------------------
//	Область.Объединить();
//	Область.Текст = "" + Формат(суммаВсехКомплектов,"Ч012.2");
//	Область.Полужирный(1);
//	Область.РазмерШрифта(10);
//	Область.ГоризонтальноеПоложение(3);
//	Область.ВертикальноеПоложение(3);
//	Область.РамкаОбвести(3,3,3,3);
//	//конец выводим общий итог по товарам.
//	
//	//выводим общую сумму со скидкой по товарам.
//	Таб.ВывестиСекцию("пустаяСтрока");
//	//*ralex, 07-09-23 14:34
//	//Область = Таб.Область(Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы()-5,Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы()-1);
//	// -------- заменено на:
//	Область = Таб.Область(Таб.ВысотаТаблицы(),счКолонокПараметров-5,Таб.ВысотаТаблицы(),счКолонокПараметров-1);
//	//*/------------------------
//	Область.Объединить();
//	Область.Текст = "Всього для " + Контрагент + " грн.";
//	Область.Полужирный(1);
//	Область.РазмерШрифта(10);
//	Область.ГоризонтальноеПоложение(2);
//	Область.ВертикальноеПоложение(3);
//	Область.РамкаОбвести(3,3,3,3);
//	
//	//*ralex, 07-09-23 14:35
//	//Область = Таб.Область(Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы(),Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы());
//	// -------- заменено на:
//	Область = Таб.Область(Таб.ВысотаТаблицы(),счКолонокПараметров);
//	//*/------------------------
//	Область.Объединить();
//	Область.Текст = "" + Формат(ИтогоСуммаСоСкидкойТовары,"Ч012.2");
//	Область.Полужирный(1);
//	Область.РазмерШрифта(11);
//	Область.ГоризонтальноеПоложение(3);
//	Область.ВертикальноеПоложение(3);
//	Область.РамкаОбвести(3,3,3,3);
//	//выводим услуги
//	Таб.ВывестиСекцию("пустаяСтрока");
//	тзУслуги.ВыбратьСтроки();
//	Пока тзУслуги.ПолучитьСтроку() = 1 Цикл
//		Таб.ВывестиСекцию("пустаяСтрокаУслуги");
//		//*ralex, 07-09-23 14:35
//		//Область = Таб.Область(Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы()-5,Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы()-1);
//		// -------- заменено на:
//		Область = Таб.Область(Таб.ВысотаТаблицы(),счКолонокПараметров-5,Таб.ВысотаТаблицы(),счКолонокПараметров-1);
//		//*/------------------------
//		Область.Объединить();
//		Область.Текст = ""+ тзУслуги.Услуга + " (грн.)";
//		Область.контроль(4);
//		Область.РазмерШрифта(11);
//		Область.ГоризонтальноеПоложение(2);
//		Область.ВертикальноеПоложение(3);
//		Область.РамкаОбвести(3,3,3,3);
//		
//		//*ralex, 07-09-23 14:35
//		//Область = Таб.Область(Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы(),Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы());
//		// -------- заменено на:
//		Область = Таб.Область(Таб.ВысотаТаблицы(),счКолонокПараметров);
//		//*/------------------------
//		Область.Текст = "" + Формат(тзУслуги.Сумма,"Ч012.2");
//		Область.РазмерШрифта(11);
//		Область.ГоризонтальноеПоложение(3);
//		Область.ВертикальноеПоложение(3);
//		Область.РамкаОбвести(3,3,3,3);
//	КонецЦикла;
//	
//	Если тзУслуги.КоличествоСтрок() <> 0 Тогда
//		Таб.ВывестиСекцию("пустаяСтрокаУслуги");
//		//*ralex, 07-09-23 14:36
//		//Область = Таб.Область(Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы()-5,Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы()-1);
//		// -------- заменено на:
//		Область = Таб.Область(Таб.ВысотаТаблицы(),счКолонокПараметров-5,Таб.ВысотаТаблицы(),счКолонокПараметров-1);
//		//*/------------------------
//		Область.Объединить();
//		Область.Текст = "Всього послуги (грн.):";
//		Область.Полужирный(1);
//		Область.РазмерШрифта(11);
//		Область.ГоризонтальноеПоложение(2);
//		Область.ВертикальноеПоложение(3);
//		Область.РамкаОбвести(3,3,3,3);
//		
//		//*ralex, 07-09-23 14:36
//		//Область = Таб.Область(Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы(),Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы());
//		// -------- заменено на:
//		Область = Таб.Область(Таб.ВысотаТаблицы(),счКолонокПараметров);
//		//*/------------------------
//		Область.Текст = "" + Формат(тзУслуги.Итог("Сумма"),"Ч012.2");
//		Область.Полужирный(1);
//		Область.РазмерШрифта(11);
//		Область.ГоризонтальноеПоложение(3);
//		Область.ВертикальноеПоложение(3);
//		Область.РамкаОбвести(3,3,3,3);
//	КонецЕсли;
//	
//	////выводим картинки
//	тз.НоваяКолонка("Файл","Строка");
//	тз.ВыбратьСтроки();
//	Пока тз.ПолучитьСтроку() = 1 Цикл
//		тз.Файл = работаСКартинками.ПолучитьФайлИзображения(СокрЛП(тз.Товар.ФайлИзображения),1); //должен вернуться локальный путь
//	КонецЦикла;
//	тз.Свернуть("имяКомплекта,Товар,Файл,сортПолотно","СуммаСНДС");
//	тз.НоваяКолонка("Ширина","Число",12,0);
//	тз.НоваяКолонка("Высота","Число",12,0);
//	тз.НоваяКолонка("Коэф","Число",12,2);
//	тз.Сортировать("имяКомплекта,сортПолотно-,Товар");
//	
//	ИмяФайлаПечатнойФормы = КаталогИБ()+"ExtForms\PrnForms\kommers_image.mxl";		
//	Если ФС.СуществуетФайл(ИмяФайлаПечатнойФормы) = 1 Тогда
//		ПечФорма = ИмяФайлаПечатнойФормы;
//	Иначе
//		ПечФорма = "Таблица_imageУ";
//		//Язык = глЯзык(ПечФорма); 	
//	КонецЕсли;
//	
//	Таб.ИсходнаяТаблица(ПечФорма);
//	//ПутьКФайлуФотоТовара1 = "";
//	//ПутьКФайлуФотоТовара2 = "";
//	стКомплект="";
//	тз.ВыбратьСтроки();
//	Пока тз.ПолучитьСтроку() = 1 Цикл
//		Файл = тз.Файл;
//		Если Файл = "0" Тогда
//			Продолжить;
//		КонецЕсли;
//		Если стКомплект <> тз.имяКомплекта Тогда
//			квоДопФотоВСтроке = Цел(счСекцийДляФото/3); //4 колонки на фото
//			тхтКомплект = тз.имяКомплекта;
//			таб.ВывестиСекцию("шапкаКомплект");
//			стКомплект = тз.имяКомплекта;
//			ПутьКФайлуФотоТовара1 = "";
//			ПутьКФайлуФотоТовара2 = "";
//		КонецЕсли;
//		
//		тхтТовар = "[" + тз.Товар.Код + "] " + тз.Товар.Наименование;
//		структураПарам = работаСКартинками.ПолучитьПараметрыИзображения(Файл);
//		коэф = структураПарам.коэф; //высота/ширина
//		Если ПутьКФайлуФотоТовара1 = "" Тогда
//			ПутьКФайлуФотоТовара1 = Файл;
//			//пока 4 варианта коэф = 0.5, 1, 1.5, 2
//			Если коэф <= 0.5 Тогда
//				Таб.ВывестиСекцию("Картинка_05|карт1");
//			ИначеЕсли коэф <= 1 Тогда
//				Таб.ВывестиСекцию("Картинка_1|карт1");
//			ИначеЕсли коэф <= 1.5 Тогда
//				Таб.ВывестиСекцию("Картинка_15|карт1");
//			Иначе
//				Таб.ВывестиСекцию("Картинка_2|карт1");
//			КонецЕсли;
//		ИначеЕсли ПутьКФайлуФотоТовара2 = "" Тогда
//			ПутьКФайлуФотоТовара2 = Файл;
//			Если коэф <= 0.5 Тогда
//				Таб.ПрисоединитьСекцию("Картинка_05|карт2");
//			ИначеЕсли коэф <= 1 Тогда
//				Таб.ПрисоединитьСекцию("Картинка_1|карт2");
//			ИначеЕсли коэф <= 1.5 Тогда
//				Таб.ПрисоединитьСекцию("Картинка_15|карт2");
//			Иначе
//				Таб.ПрисоединитьСекцию("Картинка_2|карт2");
//			КонецЕсли;
//		Иначе
//			Если квоДопФотоВСтроке <> 0 Тогда
//				ПутьКФайлуФотоТовара = Файл;
//				Если коэф <= 0.5 Тогда
//					Таб.ПрисоединитьСекцию("Картинка_05|фото1");
//				ИначеЕсли коэф <= 1 Тогда
//					Таб.ПрисоединитьСекцию("Картинка_1|фото1");
//				ИначеЕсли коэф <= 1.5 Тогда
//					Таб.ПрисоединитьСекцию("Картинка_15|фото1");
//				Иначе
//					Таб.ПрисоединитьСекцию("Картинка_2|фото1");
//				КонецЕсли;
//				квоДопФотоВСтроке = квоДопФотоВСтроке - 1;
//			Иначе
//				ПутьКФайлуФотоТовара1 = "";
//				ПутьКФайлуФотоТовара2 = "";
//			КонецЕсли;
//		КонецЕсли;
//	КонецЦикла;
//	Таб.ПараметрыСтраницы(2,,,,,,,,,1); //ландшафт, по ширине страницы
//	ВывестиВоФрейм(Таб);
//	//Таб.Показать("Комм. предложение");
//КонецПроцедуры // Печать
// -------- заменено на:

//======================================================================
Процедура ПроверитьКолонку(ИмяКолонки,структураКол,тзРез,стрСуммирования)
	Перем номКолонки;
	ИмяКолонки_С = ИмяКолонки+"_С";
	стрСуммирования = стрСуммирования + ","+ИмяКолонки;
	Если структураКол.Свойство(ИмяКолонки_С,номКолонки) = 0 Тогда
		номКолонки = структураКол.Получить(структураКол.ЕстьСвойство(ИмяКолонки));
		тзРез.ВставитьКолонку(ИмяКолонки_С,номКолонки + 1);
		структураКол.Вставить(ИмяКолонки_С,номКолонки + 1);
		стрСуммирования = стрСуммирования + ","+ИмяКолонки_С;
	КонецЕсли;
КонецПроцедуры //

//======================================================================
Процедура 	ПрисоединитьСекциюШапкиТаблицы(Таб,имяПарам,счКолонокПараметров,счСекцийДляФото,имяФурнитура = "",колонкаСкидки = 0)
	Таб.ПрисоединитьСекцию("ШапкаТаб|Компл");
	счКолонокПараметров = счКолонокПараметров + 1;
	Область = Таб.Область(Таб.ВысотаТаблицы() - 1,счКолонокПараметров,Таб.ВысотаТаблицы(),счКолонокПараметров);
	Область.ВертикальноеПоложение(3);
	счСекцийДляФото = счСекцийДляФото + 1;
	
	Если колонкаСкидки = 1 Тогда
		Область = Таб.Область(Таб.ВысотаТаблицы()-1,счКолонокПараметров,Таб.ВысотаТаблицы(),счКолонокПараметров);
		Область.ЦветФона(цветАкция);
	КонецЕсли;
КонецПроцедуры // ПрисоединитьСекциюШапкиТаблицы(Таб,имяПарам,счКолонокПараметров,счСекцийДляФото)

Процедура ПечатьДвери()
	Если ПроверитьСумму() = 0 Тогда
		Возврат;
	КонецЕсли;
	Записать();
	Ошибка = ПроверкаЗаполнения();
	Если Ошибка <> 0 Тогда
		Сообщить("Исправьте ошибки заполнения документа  и попробуйте еще раз.");
		Возврат;
	КонецЕсли;
	
	телКонтрагента = СокрЛП(Контрагент.Телефон1) + ?(ПустаяСтрока(Контрагент.АдресПолучателя) = 0,"emali: " + Контрагент.АдресПолучателя,"");
	имяСотр = ПолучитьИмя(глФИО(Автор.Сотрудник));
	//нужно 2-е слово
	
	структураКол = СоздатьОбъект("Структура");
	тзРез = СоздатьОбъект("ТаблицаЗначений");

	тзРез.НоваяКолонка("тКомплект","Строка");
	тзРез.НоваяКолонка("Товар","Справочник.Номенклатура");
	тзРез.НоваяКолонка("Кво","Число",12,2);
	тзРез.НоваяКолонка("Размер","Строка");
	тзРез.НоваяКолонка("Проем","Строка");
	тзРез.НоваяКолонка("Покрытие","Строка");
	
	тзРез.НоваяКолонка("Полотно","Число",12,2);
	структураКол.Вставить("Полотно",тзРез.КоличествоКолонок());
	тзРез.НоваяКолонка("Коробка","Число",12,2);
	структураКол.Вставить("Коробка",тзРез.КоличествоКолонок());
	тзРез.НоваяКолонка("Наличник1","Число",12,2);
	структураКол.Вставить("Наличник1",тзРез.КоличествоКолонок());
	тзРез.НоваяКолонка("Наличник2","Число",12,2);
	структураКол.Вставить("Наличник2",тзРез.КоличествоКолонок());
	тзРез.НоваяКолонка("Расширитель","Число",12,2);
	структураКол.Вставить("Расширитель",тзРез.КоличествоКолонок());
	
	тзУслуги = СоздатьОбъект("ТаблицаЗначений");
	тзУслуги.НоваяКолонка("Услуга");
	тзУслуги.НоваяКолонка("Сумма","Число",12,2);
	
	спсФурнитура = СоздатьОбъект("СписокЗначений");
	спсПрочее = СоздатьОбъект("СписокЗначений");
	
	тз = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(тз);
	тз.Сортировать("имяКомплекта");
	тз.НоваяКолонка("сортПолотно","Число",1,0); //для сортировки для картинок чтобы полотно было первым в комплекте
	стКомплект = ""; ИтогоСуммаСоСкидкойТовары = 0;
	
	стрСуммирования = "Кво,Полотно,Коробка,Наличник1,Наличник2,Расширитель";
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		тКомплект = тз.имяКомплекта;
		 
		Если стКомплект <> тКомплект Тогда
			тзРез.НоваяСтрока();
			тзРез.тКомплект = тКомплект;
			стКомплект = тКомплект;
		КонецЕсли;
		видКомл = тз.ВидКомплектующего;
		Если видКомл = Перечисление.ВидыКомплектующих.Полотно Тогда
			тзРез.Товар = тз.Товар;
			тзРез.Размер = тз.Размер;	
			тзРез.Покрытие = тз.Покрытие;
			тзРез.Проем = "";
			тзРез.Кво = тз.Количество;
			тз.сортПолотно = 1;
			тзРез.Полотно = тз.СуммаБезСкидки;
			ИтогоСуммаСоСкидкойТовары = ИтогоСуммаСоСкидкойТовары + тз.СуммаСНДС;
			Если тз.СуммаБезСкидки <> тз.СуммаСНДС Тогда
				проверитьКолонку("Полотно",структураКол,тзРез,стрСуммирования);
			 	тзРез.Полотно_С = тз.СуммаСНДС;
			КонецЕсли;
		ИначеЕсли видКомл = Перечисление.ВидыКомплектующих.Короб Тогда
			тзРез.Коробка = тз.СуммаБезСкидки;
			ИтогоСуммаСоСкидкойТовары = ИтогоСуммаСоСкидкойТовары + тз.СуммаСНДС;
			Если тз.СуммаБезСкидки <> тз.СуммаСНДС Тогда
				проверитьКолонку("Коробка",структураКол,тзРез,стрСуммирования);
				тзРез.Коробка_С = тз.СуммаСНДС;
			КонецЕсли;
		ИначеЕсли видКомл = Перечисление.ВидыКомплектующих.Наличник1 Тогда
			тзРез.Наличник1 = тз.СуммаБезСкидки;
			ИтогоСуммаСоСкидкойТовары = ИтогоСуммаСоСкидкойТовары + тз.СуммаСНДС;
			Если тз.СуммаБезСкидки <> тз.СуммаСНДС Тогда
				проверитьКолонку("Наличник1",структураКол,тзРез,стрСуммирования);
				тзРез.Наличник1_С = тз.СуммаСНДС;
			КонецЕсли;
			
		ИначеЕсли видКомл = Перечисление.ВидыКомплектующих.Наличник2 Тогда
			тзРез.Наличник2 = тз.СуммаБезСкидки;
			ИтогоСуммаСоСкидкойТовары = ИтогоСуммаСоСкидкойТовары + тз.СуммаСНДС;
			Если тз.СуммаБезСкидки <> тз.СуммаСНДС Тогда
				проверитьКолонку("Наличник2",структураКол,тзРез,стрСуммирования);
				тзРез.Наличник2_С = тз.СуммаСНДС;
			КонецЕсли;

		ИначеЕсли видКомл = Перечисление.ВидыКомплектующих.Расширитель Тогда
			тзРез.Расширитель = тз.СуммаБезСкидки;
			ИтогоСуммаСоСкидкойТовары = ИтогоСуммаСоСкидкойТовары + тз.СуммаСНДС;
			Если тз.СуммаБезСкидки <> тз.СуммаСНДС Тогда
				проверитьКолонку("Расширитель",структураКол,тзРез,стрСуммирования);
				тзРез.Расширитель_С = тз.СуммаСНДС;
			КонецЕсли;

		ИначеЕсли видКомл = Перечисление.ВидыКомплектующих.Фурнитура Тогда
			поз = спсФурнитура.НайтиЗначение(тз.Товар);
			Если поз <> 0 Тогда
				идКолонки  = "";
				спсФурнитура.ПолучитьЗначение(поз,идКолонки);
			Иначе
				идКолонки = "ф"+тз.Товар.Код;
				тзРез.НоваяКолонка(идКолонки,"Число",12,2);
				спсФурнитура.ДобавитьЗначение(тз.Товар,идКолонки);
			КонецЕсли;	
			тзРез.УстановитьЗначение(тзРез.КоличествоСтрок(),идКолонки,тз.СуммаБезСкидки);
			ИтогоСуммаСоСкидкойТовары = ИтогоСуммаСоСкидкойТовары + тз.СуммаСНДС;
			стрСуммирования = стрСуммирования + "," + идКолонки; 

			Если тз.СуммаБезСкидки <> тз.СуммаСНДС Тогда
				проверитьКолонку(идКолонки,структураКол,тзРез,стрСуммирования);
				тзРез.УстановитьЗначение(тзРез.КоличествоСтрок(),идКолонки+"_С",тз.СуммаСНДС);
				спсФурнитура.ДобавитьЗначение(тз.Товар,идКолонки);
			КонецЕсли;
		
		ИначеЕсли видКомл = Перечисление.ВидыКомплектующих.Прочее Тогда
			поз = спсПрочее.НайтиЗначение(тз.Товар);
			Если поз <> 0 Тогда
				идКолонки = "";
				спсПрочее.ПолучитьЗначение(поз,идКолонки);
			Иначе
				идКолонки = "п"+тз.Товар.Код;
				тзРез.НоваяКолонка(идКолонки,"Число",12,2);
				спсПрочее.ДобавитьЗначение(тз.Товар,идКолонки);
			КонецЕсли;
			тзРез.УстановитьЗначение(тзРез.КоличествоСтрок(),идКолонки,тз.СуммаБезСкидки);
			ИтогоСуммаСоСкидкойТовары = ИтогоСуммаСоСкидкойТовары + тз.СуммаСНДС;
			стрСуммирования = стрСуммирования + "," + идКолонки; 
			Если тз.СуммаБезСкидки <> тз.СуммаСНДС Тогда
				проверитьКолонку(идКолонки,структураКол,тзРез,стрСуммирования);
				тзРез.УстановитьЗначение(тзРез.КоличествоСтрок(),идКолонки+"_С",тз.СуммаСНДС);
				спсПрочее.ДобавитьЗначение(тз.Товар,идКолонки);
			КонецЕсли;

		ИначеЕсли видКомл = Перечисление.ВидыКомплектующих.Услуга Тогда
			тзУслуги.НоваяСтрока();
			тзУслуги.Услуга = тз.Товар;
			тзУслуги.Сумма = тз.СуммаСНДС;
		КонецЕсли;
	КонецЦикла;
		
	тзРез.Свернуть("тКомплект,Товар,Размер,Проем,Покрытие",стрСуммирования);
	тзУслуги.Свернуть("Услуга","Сумма");
	
	Таб = СоздатьОбъект("Таблица");
	
	ИмяФайлаПечатнойФормы = КаталогИБ()+"ExtForms\PrnForms\kommers.mxl";		
	Если ФС.СуществуетФайл(ИмяФайлаПечатнойФормы) = 1 Тогда
		ПечФорма = ИмяФайлаПечатнойФормы;
	Иначе
		ПечФорма = "ТаблицаУ";
		//Язык = глЯзык(ПечФорма); 	
	КонецЕсли;
	
	Таб.ИсходнаяТаблица(ПечФорма);
	//таб.ВывестиСекцию("Кнопки");
	таб.ВывестиСекцию("Шапка|Общий");
	таб.ПрисоединитьСекцию("Шапка|дляДвери");
	таб.ВывестиСекцию("ШапкаТаб|Общий");
	таб.ПрисоединитьСекцию("ШапкаТаб|дляДвери");
		
	счСекцийДляФото = 0;
	
	имяФурнитура = "";
	началоПараметровВтзРез = 7;
	НачалоПараметров = 23;
	счКолонокПараметров = НачалоПараметров;
	Если тзРез.Итог("Полотно") <> 0 Тогда
		имяПарам = "Вартість полотна, грн.";
		ПрисоединитьСекциюШапкиТаблицы(Таб,имяПарам,счКолонокПараметров,счСекцийДляФото);
	КонецЕсли;	
	
	Попытка
		Если тзРез.Итог("Полотно_С") <> 0 Тогда
			имяПарам = "Вартість полотна зі знижкою, грн.";
			ПрисоединитьСекциюШапкиТаблицы(Таб,имяПарам,счКолонокПараметров,счСекцийДляФото,,1);
		КонецЕсли;
	Исключение
	КонецПопытки;
	
	Если тзРез.Итог("Коробка") <> 0 Тогда
		имяПарам = "Вартість короба, грн.";
		ПрисоединитьСекциюШапкиТаблицы(Таб,имяПарам,счКолонокПараметров,счСекцийДляФото);
	КонецЕсли;	
	
	Попытка
		Если тзРез.Итог("Коробка_С") <> 0 Тогда
			имяПарам = "Вартість короба зі знижкою, грн.";
			ПрисоединитьСекциюШапкиТаблицы(Таб,имяПарам,счКолонокПараметров,счСекцийДляФото,,1);
		КонецЕсли;
	Исключение
	КонецПопытки;
	
	Если тзРез.Итог("Наличник1") <> 0 Тогда
		имяПарам = "Вартість лиштви 1 сторона, грн.";
		ПрисоединитьСекциюШапкиТаблицы(Таб,имяПарам,счКолонокПараметров,счСекцийДляФото);
	КонецЕсли;	
	
	Попытка
		Если тзРез.Итог("Наличник1_С") <> 0 Тогда
			имяПарам = "Вартість лиштви 1 сторона зі знижкою, грн.";
			ПрисоединитьСекциюШапкиТаблицы(Таб,имяПарам,счКолонокПараметров,счСекцийДляФото,,1);
		КонецЕсли;
	Исключение
	КонецПопытки;	
	
	Если тзРез.Итог("Наличник2") <> 0 Тогда
		имяПарам = "Вартість лиштви 2 сторона, грн.";
		ПрисоединитьСекциюШапкиТаблицы(Таб,имяПарам,счКолонокПараметров,счСекцийДляФото);
	КонецЕсли;	
	Попытка
		Если тзРез.Итог("Наличник2_С") <> 0 Тогда
			имяПарам = "Вартість лиштви 2 сторона зі знижкою, грн.";
			ПрисоединитьСекциюШапкиТаблицы(Таб,имяПарам,счКолонокПараметров,счСекцийДляФото,,1);
		КонецЕсли;
	Исключение
	КонецПопытки;
	
	Если тзРез.Итог("Расширитель") <> 0 Тогда
		имяПарам = "Вартість розширювача, грн.";
		ПрисоединитьСекциюШапкиТаблицы(Таб,имяПарам,счКолонокПараметров,счСекцийДляФото);
	КонецЕсли;	
	
	Попытка
		Если тзРез.Итог("Расширитель_С") <> 0 Тогда
			имяПарам = "Вартість розширювача зі знижкою, грн.";
			ПрисоединитьСекциюШапкиТаблицы(Таб,имяПарам,счКолонокПараметров,счСекцийДляФото,,1);
		КонецЕсли;
	Исключение
	КонецПопытки;	
	
	началоФурнитура = Таб.ШиринаТаблицы() +1;
	Если спсФурнитура.РазмерСписка() <> 0 Тогда
		Для сч = 1 По спсФурнитура.РазмерСписка() Цикл
			имяПарам = ""; соСкидкой = 0;
			имяФурнитура = спсФурнитура.ПолучитьЗначение(сч,имяПарам);
			Если Найти(имяФурнитура,"_С") <> 0 Тогда
				имяФурнитура = имяФурнитура + " зі знижкою.";
				имяПарам = 0; соСкидкой = 1;
			КонецЕсли;
			Таб.ПрисоединитьСекцию("ШапкаТаб|Компл");
			счКолонокПараметров = счКолонокПараметров + 1;
			счСекцийДляФото = счСекцийДляФото + 1;
			Если соСкидкой = 1 Тогда
				Область = Таб.Область(Таб.ВысотаТаблицы(),счКолонокПараметров,Таб.ВысотаТаблицы(),счКолонокПараметров);
				Область.ЦветФона(цветАкция);
			КонецЕсли;
		КонецЦикла;
		
		Область = Таб.Область(Таб.ВысотаТаблицы() - 1,началоФурнитура,Таб.ВысотаТаблицы() - 1,счКолонокПараметров);
		Область.Объединить();
		Область.Текст = "Фурнитура";
		Область.РазмерШрифта(9);
		Область.ГоризонтальноеПоложение(3);
		Область.ВертикальноеПоложение(3);
		Область.РамкаОбвести(3,3,3,3);
	КонецЕсли;
	
	началоПрочее = Таб.ШиринаТаблицы() +1;
	Если спсПрочее.РазмерСписка() <> 0 Тогда
		Для сч = 1 По спсПрочее.РазмерСписка() Цикл
			имяПарам = ""; соскидкой = 0;
			имяФурнитура = спсПрочее.ПолучитьЗначение(сч,имяПарам);
			Если Найти(имяФурнитура,"_С") <> 0 Тогда
				имяФурнитура = имяФурнитура + " зі знижкою.";
				имяПарам = 0; соскидкой = 1;
			КонецЕсли;
			Таб.ПрисоединитьСекцию("ШапкаТаб|Компл");
			счКолонокПараметров = счКолонокПараметров + 1;
			счСекцийДляФото = счСекцийДляФото + 1;
			
			Если соСкидкой = 1 Тогда
				Область = Таб.Область(Таб.ВысотаТаблицы(),счКолонокПараметров,Таб.ВысотаТаблицы(),счКолонокПараметров);
				Область.ЦветФона(цветАкция);
			КонецЕсли;

		КонецЦикла;
		
		Область = Таб.Область(Таб.ВысотаТаблицы() - 1,началоПрочее,Таб.ВысотаТаблицы() - 1,счКолонокПараметров);
		Область.Объединить();
		Область.Текст = "Прочее";
		Область.РазмерШрифта(9);
		Область.ГоризонтальноеПоложение(3);
		Область.ВертикальноеПоложение(3);
		Область.РамкаОбвести(3,3,3,3);
	КонецЕсли;
	
	//колонка стоимость комплекта
	имяПарам = "Вартість комплекту";
	имяФурнитура = "";
	Таб.ПрисоединитьСекцию("ШапкаТаб|Компл");
	счКолонокПараметров = счКолонокПараметров + 1;
	Область = Таб.Область(Таб.ВысотаТаблицы() - 1,счКолонокПараметров,Таб.ВысотаТаблицы(),счКолонокПараметров);
	Область.РазмерШрифта(9);
	Область.ГоризонтальноеПоложение(3);
	Область.ВертикальноеПоложение(3);
	Область.Контроль(4);
	Область.РамкаОбвести(3,3,3,3);
	
	Если Найти(стрСуммирования,"_С") <> 0 Тогда //есть скидка
		имяПарам = "Вартість комплекту зі знижкою";
		имяФурнитура = "";
		Таб.ПрисоединитьСекцию("ШапкаТаб|Компл");
		счКолонокПараметров = счКолонокПараметров + 1;
		Область = Таб.Область(Таб.ВысотаТаблицы() - 1,счКолонокПараметров,Таб.ВысотаТаблицы(),счКолонокПараметров);
		Область.РазмерШрифта(9);
		Область.ГоризонтальноеПоложение(3);
		Область.ВертикальноеПоложение(3);
		Область.Контроль(4);
		Область.РамкаОбвести(3,3,3,3);
	КонецЕсли;
	//конец колонка стоимость комплекта
	
	//выводим строки
	суммаВсехКомплектов = 0; суммаВсехКомплектов_С = 0;
	тзРез.ВыбратьСтроки();
	Пока тзРез.ПолучитьСтроку() = 1 Цикл
		суммаКомплекта = 0; суммаКомплекта_С = 0;
		тКомплект = тзРез.тКомплект;
		тТовар = тзРез.Товар;
		тРазмер	= тзРез.Размер;	
		тКво	= тзРез.Кво;	
		тПроем = "";
		тПокрытие = тзРез.Покрытие;
		Таб.ВывестиСекцию("стр|общий");
		Таб.ПрисоединитьСекцию("стр|дляДвери");

//тзРез.ВыбратьСтроку();
		предИдКолонки = ""; предСумма = 0;
		Для сч = началоПараметровВтзРез По тзРез.КоличествоКолонок() Цикл
			Если тзРез.Итог(сч) = 0 Тогда
				Продолжить;
			КонецЕсли;
			текСумма = тзРез.ПолучитьЗначение(тзРез.НомерСтроки,сч);
			идКолонки = тзРез.ПолучитьПараметрыКолонки(сч);
		
			Если предИдКолонки = "" Тогда
				предИдКолонки = идКолонки;
			КонецЕсли;
		  
			Если Найти(идКолонки,"_С") = 0 Тогда
				суммаКомплекта = суммаКомплекта + текСумма;
				суммаВсехКомплектов = суммаВсехКомплектов + текСумма;
				суммаКомплекта_С = суммаКомплекта_С + текСумма;
				суммаВсехКомплектов_С = суммаВсехКомплектов_С + текСумма;
			Иначе
				Если Найти(идКолонки,предИдКолонки) <> 0 Тогда //предыдущая колонка была для того же товара но сумма была без скидки
					суммаКомплекта_С = суммаКомплекта_С  - предСумма+ текСумма;
					суммаВсехКомплектов_С = суммаВсехКомплектов_С - предСумма + текСумма;
				КонецЕсли;
			КонецЕсли;
			
			предИдКолонки = идКолонки;
			предСумма = текСумма;
			тПарам = "" + Формат(текСумма,"Ч012.2");
			Таб.ПрисоединитьСекцию("стр|Компл");
		КонецЦикла;
		тПарам = "" + Формат(суммаКомплекта,"Ч012.2");
		Таб.ПрисоединитьСекцию("стр|Компл");
		Если суммаВсехКомплектов <> суммаВсехКомплектов_С Тогда
			тПарам = "" + Формат(суммаКомплекта_С,"Ч012.2");
			Таб.ПрисоединитьСекцию("стр|Компл");
		КонецЕсли;
	КонецЦикла;
	
	Если Окр(суммаВсехКомплектов + тзУслуги.Итог("Сумма"),2) <> Окр(Итог("СуммаБезСкидки"),2) Тогда
		ТекстСообщения = "Проверьте распределение комплектации между комплектами. Каждый комплект - одна дверь.";
		Предупреждение(ТекстСообщения);
		Сообщить(ТекстСообщения);
		//Возврат;
	КонецЕсли;
	
	//выводим общий итог по товарам.
	Таб.ВывестиСекцию("пустаяСтрока");
	//*ralex, 07-09-23 14:34
	//Область = Таб.Область(Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы()-5,Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы()-1);
	// -------- заменено на:
	Область = Таб.Область(Таб.ВысотаТаблицы(),счКолонокПараметров-5,Таб.ВысотаТаблицы(),счКолонокПараметров-1);
	//*/------------------------
	Область.Объединить();
	Область.Текст = "Всього (грн.)";
	Область.Полужирный(1);
	Область.РазмерШрифта(10);
	Область.ГоризонтальноеПоложение(2);
	Область.ВертикальноеПоложение(3);
	Область.РамкаОбвести(3,3,3,3);
	
	//*ralex, 07-09-23 14:34
	//Область = Таб.Область(Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы(),Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы());
	// -------- заменено на:
	Область = Таб.Область(Таб.ВысотаТаблицы(),счКолонокПараметров,Таб.ВысотаТаблицы(),счКолонокПараметров);
	//*/------------------------
	Область.Объединить();
	Область.Текст = "" + Формат(суммаВсехКомплектов,"Ч012.2");
	Область.Полужирный(1);
	Область.РазмерШрифта(10);
	Область.ГоризонтальноеПоложение(3);
	Область.ВертикальноеПоложение(3);
	Область.РамкаОбвести(3,3,3,3);
	//конец выводим общий итог по товарам.
	
	//выводим общую сумму со скидкой по товарам.
	Таб.ВывестиСекцию("пустаяСтрока");
	Область = Таб.Область(Таб.ВысотаТаблицы(),счКолонокПараметров-5,Таб.ВысотаТаблицы(),счКолонокПараметров-1);
	//процент скидки

    процентСкидки = Окр(Итог("СуммаСкидки")/(Итог("СуммаБезСкидки")/100),0);
	Область.Объединить();
	Область.Текст = "Всього со скидкой " + процентСкидки + "% (грн.)";
	//Область.Текст = "Всього для " + Контрагент + " грн.";
	Область.Полужирный(1);
	Область.РазмерШрифта(10);
	Область.ГоризонтальноеПоложение(2);
	Область.ВертикальноеПоложение(3);
	Область.РамкаОбвести(3,3,3,3);
	
	//*ralex, 07-09-23 14:35
	//Область = Таб.Область(Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы(),Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы());
	// -------- заменено на:
	Область = Таб.Область(Таб.ВысотаТаблицы(),счКолонокПараметров);
	//*/------------------------
	Область.Объединить();
	Область.Текст = "" + Формат(ИтогоСуммаСоСкидкойТовары,"Ч012.2");
	Область.Полужирный(1);
	Область.РазмерШрифта(11);
	Область.ГоризонтальноеПоложение(3);
	Область.ВертикальноеПоложение(3);
	Область.РамкаОбвести(3,3,3,3);
	//выводим услуги
	Таб.ВывестиСекцию("пустаяСтрока");
	тзУслуги.ВыбратьСтроки();
	Пока тзУслуги.ПолучитьСтроку() = 1 Цикл
		Таб.ВывестиСекцию("пустаяСтрокаУслуги");
		//*ralex, 07-09-23 14:35
		//Область = Таб.Область(Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы()-5,Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы()-1);
		// -------- заменено на:
		Область = Таб.Область(Таб.ВысотаТаблицы(),счКолонокПараметров-5,Таб.ВысотаТаблицы(),счКолонокПараметров-1);
		//*/------------------------
		Область.Объединить();
		Область.Текст = ""+ тзУслуги.Услуга + " (грн.)";
		Область.контроль(4);
		Область.РазмерШрифта(11);
		Область.ГоризонтальноеПоложение(2);
		Область.ВертикальноеПоложение(3);
		Область.РамкаОбвести(3,3,3,3);
		
		//*ralex, 07-09-23 14:35
		//Область = Таб.Область(Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы(),Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы());
		// -------- заменено на:
		Область = Таб.Область(Таб.ВысотаТаблицы(),счКолонокПараметров);
		//*/------------------------
		Область.Текст = "" + Формат(тзУслуги.Сумма,"Ч012.2");
		Область.РазмерШрифта(11);
		Область.ГоризонтальноеПоложение(3);
		Область.ВертикальноеПоложение(3);
		Область.РамкаОбвести(3,3,3,3);
	КонецЦикла;
	
	Если тзУслуги.КоличествоСтрок() <> 0 Тогда
		Таб.ВывестиСекцию("пустаяСтрокаУслуги");
		//*ralex, 07-09-23 14:36
		//Область = Таб.Область(Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы()-5,Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы()-1);
		// -------- заменено на:
		Область = Таб.Область(Таб.ВысотаТаблицы(),счКолонокПараметров-5,Таб.ВысотаТаблицы(),счКолонокПараметров-1);
		//*/------------------------
		Область.Объединить();
		Область.Текст = "Всього послуги (грн.):";
		Область.Полужирный(1);
		Область.РазмерШрифта(11);
		Область.ГоризонтальноеПоложение(2);
		Область.ВертикальноеПоложение(3);
		Область.РамкаОбвести(3,3,3,3);
		
		//*ralex, 07-09-23 14:36
		//Область = Таб.Область(Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы(),Таб.ВысотаТаблицы(),Таб.ШиринаТаблицы());
		// -------- заменено на:
		Область = Таб.Область(Таб.ВысотаТаблицы(),счКолонокПараметров);
		//*/------------------------
		Область.Текст = "" + Формат(тзУслуги.Итог("Сумма"),"Ч012.2");
		Область.Полужирный(1);
		Область.РазмерШрифта(11);
		Область.ГоризонтальноеПоложение(3);
		Область.ВертикальноеПоложение(3);
		Область.РамкаОбвести(3,3,3,3);
	КонецЕсли;
	
	////выводим картинки
	тз.НоваяКолонка("Файл","Строка");
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		тз.Файл = работаСКартинками.ПолучитьФайлИзображения(СокрЛП(тз.Товар.ФайлИзображения),1); //должен вернуться локальный путь
	КонецЦикла;
	тз.Свернуть("имяКомплекта,Товар,Файл,сортПолотно","СуммаСНДС");
	тз.НоваяКолонка("Ширина","Число",12,0);
	тз.НоваяКолонка("Высота","Число",12,0);
	тз.НоваяКолонка("Коэф","Число",12,2);
	тз.Сортировать("имяКомплекта,сортПолотно-,Товар");
	
	ИмяФайлаПечатнойФормы = КаталогИБ()+"ExtForms\PrnForms\kommers_image.mxl";		
	Если ФС.СуществуетФайл(ИмяФайлаПечатнойФормы) = 1 Тогда
		ПечФорма = ИмяФайлаПечатнойФормы;
	Иначе
		ПечФорма = "Таблица_imageУ";
		//Язык = глЯзык(ПечФорма); 	
	КонецЕсли;
	
	Таб.ИсходнаяТаблица(ПечФорма);
	//ПутьКФайлуФотоТовара1 = "";
	//ПутьКФайлуФотоТовара2 = "";
	стКомплект="";
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		Файл = тз.Файл;
		Если Файл = "0" Тогда
			Продолжить;
		КонецЕсли;
		Если стКомплект <> тз.имяКомплекта Тогда
			квоДопФотоВСтроке = Цел(счСекцийДляФото/3); //4 колонки на фото
			тхтКомплект = тз.имяКомплекта;
			таб.ВывестиСекцию("шапкаКомплект");
			стКомплект = тз.имяКомплекта;
			ПутьКФайлуФотоТовара1 = "";
			ПутьКФайлуФотоТовара2 = "";
		КонецЕсли;
		
		тхтТовар = "[" + тз.Товар.Код + "] " + тз.Товар.Наименование;
		структураПарам = работаСКартинками.ПолучитьПараметрыИзображения(Файл);
		коэф = структураПарам.коэф; //высота/ширина
		Если ПутьКФайлуФотоТовара1 = "" Тогда
			ПутьКФайлуФотоТовара1 = Файл;
			//пока 4 варианта коэф = 0.5, 1, 1.5, 2
			Если коэф <= 0.5 Тогда
				Таб.ВывестиСекцию("Картинка_05|карт1");
			ИначеЕсли коэф <= 1 Тогда
				Таб.ВывестиСекцию("Картинка_1|карт1");
			ИначеЕсли коэф <= 1.5 Тогда
				Таб.ВывестиСекцию("Картинка_15|карт1");
			Иначе
				Таб.ВывестиСекцию("Картинка_2|карт1");
			КонецЕсли;
		ИначеЕсли ПутьКФайлуФотоТовара2 = "" Тогда
			ПутьКФайлуФотоТовара2 = Файл;
			Если коэф <= 0.5 Тогда
				Таб.ПрисоединитьСекцию("Картинка_05|карт2");
			ИначеЕсли коэф <= 1 Тогда
				Таб.ПрисоединитьСекцию("Картинка_1|карт2");
			ИначеЕсли коэф <= 1.5 Тогда
				Таб.ПрисоединитьСекцию("Картинка_15|карт2");
			Иначе
				Таб.ПрисоединитьСекцию("Картинка_2|карт2");
			КонецЕсли;
		Иначе
			Если квоДопФотоВСтроке <> 0 Тогда
				ПутьКФайлуФотоТовара = Файл;
				Если коэф <= 0.5 Тогда
					Таб.ПрисоединитьСекцию("Картинка_05|фото1");
				ИначеЕсли коэф <= 1 Тогда
					Таб.ПрисоединитьСекцию("Картинка_1|фото1");
				ИначеЕсли коэф <= 1.5 Тогда
					Таб.ПрисоединитьСекцию("Картинка_15|фото1");
				Иначе
					Таб.ПрисоединитьСекцию("Картинка_2|фото1");
				КонецЕсли;
				квоДопФотоВСтроке = квоДопФотоВСтроке - 1;
			Иначе
				ПутьКФайлуФотоТовара1 = "";
				ПутьКФайлуФотоТовара2 = "";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Таб.ПараметрыСтраницы(2,,,,,,,,,1); //ландшафт, по ширине страницы
	ВывестиВоФрейм(Таб);
	//Таб.Показать("Комм. предложение");
КонецПроцедуры // Печать
//*/------------------------

//======================================================================
Процедура ПечатьПрочее()
	Если ПроверитьСумму() = 0 Тогда
		Возврат;
	КонецЕсли;
	Записать();
	//Ошибка = ПроверкаЗаполнения();
	//Если Ошибка <> 0 Тогда
	//	Сообщить("Исправьте ошибки заполнения документа  и попробуйте еще раз.");
	//	Возврат;
	//КонецЕсли;
	
	телКонтрагента = СокрЛП(Контрагент.Телефон1) + ?(ПустаяСтрока(Контрагент.АдресПолучателя) = 0,"emali: " + Контрагент.АдресПолучателя,"");
	имяСотр = ПолучитьИмя(глФИО(Автор.Сотрудник));
	
	Таб = СоздатьОбъект("Таблица");
	
	ИмяФайлаПечатнойФормы = КаталогИБ()+"ExtForms\PrnForms\kommers_other.mxl";		
	Если ФС.СуществуетФайл(ИмяФайлаПечатнойФормы) = 1 Тогда
		ПечФорма = ИмяФайлаПечатнойФормы;
	Иначе
		ПечФорма = "Таблица_ПрочееУ";
		//Язык = глЯзык(ПечФорма); 	
	КонецЕсли;
	
	Таб.ИсходнаяТаблица(ПечФорма);
	//таб.ВывестиСекцию("Кнопки");
	таб.ВывестиСекцию("Шапка|Общий");
	таб.ВывестиСекцию("ШапкаТаб|Общий");
	
	тзУслуги = СоздатьОбъект("ТаблицаЗначений");
	тзУслуги.НоваяКолонка("Услуга");
	тзУслуги.НоваяКолонка("Сумма","Число",12,2);

	тз = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(тз);
	тз.Сортировать("имяКомплекта");
	стКомплект = "**"; ИтогоСуммаСоСкидкойТовары = 0; ИтогоСуммаБезСкидки = 0;
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		Если тз.Товар.ВидТовара = Перечисление.ВидыТоваров.Услуга Тогда
			тзУслуги.НоваяСтрока();
			тзУслуги.Услуга = тз.Товар;
			тзУслуги.Сумма = тз.СуммаСНДС;
			Продолжить;
		КонецЕсли;
		
		тКомплект = тз.имяКомплекта;
		Если стКомплект <> тКомплект Тогда
			Таб.ВывестиСекцию("ЗаголовокКомплект");
			стКомплект = тКомплект;
		КонецЕсли;
		тТовар = тз.Товар;
		тКво = "" + тз.Количество + " " + тз.Единица;
		тЦена =  Формат(тз.ЦенаБезНДС,"Ч012.2"); 
		тСумма = Формат(тз.СуммаБезСкидки,"Ч012.2");
		ИтогоСуммаБезСкидки = ИтогоСуммаБезСкидки + тз.СуммаБезСкидки;
		ИтогоСуммаСоСкидкойТовары = ИтогоСуммаСоСкидкойТовары + тз.СуммаСНДС;
		Таб.ВывестиСекцию("стр|Общий");
			
		едИзмМ2 = гл_ВернутьЕдиницуИзмеренияТовара(Константа.едИзмМетр2,тТовар,0);
		Если ПустоеЗначение(едИзмМ2) = 0 Тогда
			тЦена = Формат(Окр(тз.ЦенаБезНДС /тз.Единица.Коэффициент * едИзмМ2.коэффициент,2),"Ч012.2"); 
			тКво = ""+ Окр(тз.Количество* тз.Единица.Коэффициент / едИзмМ2.коэффициент,2) + " " + едИзмМ2;
			Таб.ВывестиСекцию("допЕд|Общий");
			обл = Таб.Область(таб.ВысотаТаблицы() - 1,2,таб.ВысотаТаблицы(),15);
			обл.Рамка(0,0,0,0);
			обл.РамкаОбвести(2,2,2,2);
			обл.ВертикальноеПоложение(3);
			обл.ГоризонтальноеПоложение(5);
			обл.Контроль(4);
			
			обл = Таб.Область(таб.ВысотаТаблицы() - 1,21,таб.ВысотаТаблицы(),23);
			обл.Рамка(0,0,0,0);
			обл.РамкаОбвести(2,2,2,2);
			обл.ВертикальноеПоложение(3);
			обл.ГоризонтальноеПоложение(5);
			обл.Контроль(4);
		КонецЕсли;
	КонецЦикла;
	
	//выводим общий итог по товарам.
	//Таб.ВывестиСекцию("пустаяСтрока|общий");
	
	тСумма = Формат(ИтогоСуммаБезСкидки,"Ч012.2");
	тСуммаКлиента =  Формат(ИтогоСуммаСоСкидкойТовары,"Ч012.2");
    процентСкидки = Окр(Итог("СуммаСкидки")/(Итог("СуммаБезСкидки")/100),0);
	Таб.ВывестиСекцию("итог_товары|общий");
	Если процентСкидки <> 0 Тогда
		Таб.ВывестиСекцию("итог_товарыСкидка|общий");
	КонецЕсли;

	//выводим услуги
	//Таб.ВывестиСекцию("пустаяСтрока");
	Если тзУслуги.КоличествоСтрок() <> 0 Тогда
		//Таб.ВывестиСекцию("пустаяСтрока|Общий");
		Таб.ВывестиСекцию("шапка_Услуги|Общий");
		тзУслуги.ВыбратьСтроки();
		Пока тзУслуги.ПолучитьСтроку() = 1 Цикл
			тУслуга = тзУслуги.Услуга;
			тСумма = Формат(тзУслуги.Сумма,"Ч012.2");
			Таб.ВывестиСекцию("стр_Услуги|Общий");
		КонецЦикла;
		тСумма = Формат(тзУслуги.Итог("Сумма"),"Ч012.2");
		Таб.ВывестиСекцию("итог_Услуги|Общий");
		тСуммаКлиента = Формат(ИтогоСуммаСоСкидкойТовары + тзУслуги.Итог("Сумма"),"Ч012.2");
		Таб.ВывестиСекцию("пустаяСтрока|Общий");
		Таб.ВывестиСекцию("ОбщийИтог|Общий");
	КонецЕсли;
	
	////выводим картинки
	тз.НоваяКолонка("Файл","Строка");
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		тз.Файл = работаСКартинками.ПолучитьФайлИзображения(СокрЛП(тз.Товар.ФайлИзображения),1); //должен вернуться локальный путь
	КонецЦикла;
	тз.Свернуть("имяКомплекта,Товар,Файл","СуммаСНДС");
	тз.НоваяКолонка("Ширина","Число",12,0);
	тз.НоваяКолонка("Высота","Число",12,0);
	тз.НоваяКолонка("Коэф","Число",12,2);
	тз.Сортировать("имяКомплекта,Товар");
	
	тКомплект="";
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		Файл = тз.Файл;
		Если Файл = "0" Тогда
			Продолжить;
		КонецЕсли;
		Если тКомплект <> тз.имяКомплекта Тогда
			//квоДопФотоВСтроке = Цел(счСекцийДляФото/3); //4 колонки на фото
			квоДопФотоВСтроке = 0;
			//тхтКомплект = тз.имяКомплекта;
			тКомплект = тз.имяКомплекта;
			таб.ВывестиСекцию("ЗаголовокКомплект|Общий");
			ПутьКФайлуФотоТовара1 = "";
			ПутьКФайлуФотоТовара2 = "";
		КонецЕсли;
		
		тхтТовар = "[" + тз.Товар.Код + "] " + тз.Товар.Наименование;
		структураПарам = работаСКартинками.ПолучитьПараметрыИзображения(Файл);
		коэф = структураПарам.коэф; //высота/ширина
		Если ПутьКФайлуФотоТовара1 = "" Тогда
			ПутьКФайлуФотоТовара1 = Файл;
			//пока 4 варианта коэф = 0.5, 1, 1.5, 2
			Если коэф <= 0.5 Тогда
				Таб.ВывестиСекцию("Картинка_05|карт1");
			ИначеЕсли коэф <= 1 Тогда
				Таб.ВывестиСекцию("Картинка_1|карт1");
			ИначеЕсли коэф <= 1.5 Тогда
				Таб.ВывестиСекцию("Картинка_15|карт1");
			Иначе
				Таб.ВывестиСекцию("Картинка_2|карт1");
			КонецЕсли;
		ИначеЕсли ПутьКФайлуФотоТовара2 = "" Тогда
			ПутьКФайлуФотоТовара2 = Файл;
			Если коэф <= 0.5 Тогда
				Таб.ПрисоединитьСекцию("Картинка_05|карт2");
			ИначеЕсли коэф <= 1 Тогда
				Таб.ПрисоединитьСекцию("Картинка_1|карт2");
			ИначеЕсли коэф <= 1.5 Тогда
				Таб.ПрисоединитьСекцию("Картинка_15|карт2");
			Иначе
				Таб.ПрисоединитьСекцию("Картинка_2|карт2");
			КонецЕсли;
		Иначе
			Если квоДопФотоВСтроке <> 0 Тогда
				ПутьКФайлуФотоТовара = Файл;
				Если коэф <= 0.5 Тогда
					Таб.ПрисоединитьСекцию("Картинка_05|фото1");
				ИначеЕсли коэф <= 1 Тогда
					Таб.ПрисоединитьСекцию("Картинка_1|фото1");
				ИначеЕсли коэф <= 1.5 Тогда
					Таб.ПрисоединитьСекцию("Картинка_15|фото1");
				Иначе
					Таб.ПрисоединитьСекцию("Картинка_2|фото1");
				КонецЕсли;
				квоДопФотоВСтроке = квоДопФотоВСтроке - 1;
			Иначе
				ПутьКФайлуФотоТовара1 = "";
				ПутьКФайлуФотоТовара2 = "";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Таб.ПараметрыСтраницы(2,,,,,,,,,1); //ландшафт, по ширине страницы
	ВывестиВоФрейм(Таб);
КонецПроцедуры // ПечатьПрочее

//======================================================================
Процедура Печать()
	Если видПредложения = Перечисление.видыПредложения.двери Тогда
		ПечатьДвери();
	Иначе
		ПечатьПрочее();
	КонецЕсли;
КонецПроцедуры // Печать

Процедура ВывестиФотоТовара(ОбъектКартинка,ПутьКФайлуФотоТовара)
	работаСКартинками.ПоказатьКартинкуНаФорме_GFlax(объектКартинка,ПутьКФайлуФотоТовара,,1,);
КонецПроцедуры


Процедура ВыборВариантаПечати()
		выбЗн = 0;
		спсМеню = СоздатьОбъект("СписокЗначений");
		спсМеню.ДобавитьЗначение("печатьСчета","печать счета");
		спсМеню.ДобавитьЗначение("email"," отправка счета на email");
		спсМеню.ДобавитьЗначение("Заказ","Заказ на бланке");
		Если спсМеню.ВыбратьЗначение(выбЗн,,,,1) <> 1 Тогда
			Возврат;
		КонецЕсли;
		
		Если выбЗн = "email" Тогда
			//Печать(0,1);
		ИначеЕсли выбЗн = "печатьСчета" Тогда
			//Печать();
		ИначеЕсли выбЗн = "Заказ" Тогда
			спсПарам = СоздатьОбъект("СписокЗначений");
			спсПарам.ДобавитьЗначение(ТекущийДокумент(),"Док");
			ОткрытьФормуМодально("Обработка.ПечатьЗаказаДвери",спсПарам);
			Возврат;
		КонецЕсли;
КонецПроцедуры

//======================================================================
Функция УстановитьНадписьРаспечатанОтгружен()
	Возврат дополненияТорговля.УстановитьНадписьРаспечатанОтгружен(Контекст);
КонецФункции

//======================================================================
Функция РасшифровкаОбновить(Зн)
	Расш = СоздатьОбъект("СписокЗначений");
	Расш.Установить("Exel",1);
	Возврат Расш;
КонецФункции // РасшифровкаОбновить("Exel")

//======================================================================
Процедура Сортировать()
	тз = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(тз);
	тз.Сортировать("ИмяКомплекта,Товар");
	ЗагрузитьТабличнуюЧасть(тз);
	
	тзСтрок = СоздатьОбъект("ТаблицаЗначений");
	тзСтрок.НоваяКолонка("ном","Число",2,0);
	тзСтрок.НоваяКолонка("Раскраска","Строка");
	
	Раскраска1 = "(BRUSH[NONE])";
	Раскраска2 = "(BRUSH[" + цветСвСерый + "])";
	стКомплект = ""; счРаскрасок = 0;
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		тзСтрок.НоваяСтрока();
		тзСтрок.ном = тз.НомерСтроки;
		Если стКомплект <> тз.имяКомплекта Тогда
			стКомплект = тз.имяКомплекта;
			счРаскрасок = счРаскрасок +1;
			Если счРаскрасок%2 = 0 Тогда
				стРаскраска = Раскраска2;
			Иначе
				стРаскраска = Раскраска1;
			КонецЕсли;
		КонецЕсли;
		тзСтрок.Раскраска = стРаскраска;			
	КонецЦикла;
КонецПроцедуры // Сортировать

//******************************************************************************
Процедура ВводНового(Скопирован) //Предопределенная процедура
	Предупреждение("Документ вводится только на основании документа ""Счет"".");
	СтатусВозврата(0);
	Возврат;
КонецПроцедуры

//======================================================================
Функция ПолучитьСвойствоТовара(Товар,КодПараметра,ОбъектСвойство = 0)
	спрКатегории = СоздатьОбъект("Справочник.КатегорииТоваров");
	спрКатегории.ИспользоватьВладельца(Товар);
	спрКатегории.ВыбратьЭлементы();
	Пока спрКатегории.ПолучитьЭлемент() = 1 Цикл
		Если спрКатегории.ПометкаУдаления() = 1 Тогда
			Продолжить;
		КонецЕсли;
		Если спрКатегории.Категория.Родитель.ЭтоГруппа() = 0 Тогда
			Продолжить;
		КонецЕсли;
		Если СокрЛП(спрКатегории.Категория.Родитель.КодПараметра) <> КодПараметра Тогда
			Продолжить;
		КонецЕсли;
		ОбъектСвойство = спрКатегории.ТекущийЭлемент().Категория;
		Возврат СокрЛП(спрКатегории.ТекущийЭлемент().Категория);
	КонецЦикла;
	Возврат "";
КонецФункции // ПолучитьСвойствоТовара

//******************************************************************************
Процедура ВводНаОсновании(ДокОснование) //Предопределенная процедура
	ВидДок = ДокОснование.Вид();
	Если ВидДок<>"Счет" Тогда
		Предупреждение("Коммерческое предложение нельзя вводить на основании данного вида документов!");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	видПредложения = Перечисление.видыПредложения.прочее;
	ДокументОснованиее = ДокОснование;                                               	
	глЗаполнитьШапкуНаОсн(Контекст,ДокОснование);
	Контрагент = ДокОснование.контрагент;
	Валюта = ДокОснование.Валюта;
	Курс = ДокОснование.Курс;
	Дата_курса = ДокОснование.Дата_курса;
	
	ДокОснование.ВыбратьСтроки();
	Пока ДокОснование.ПолучитьСтроку() = 1 Цикл
		НоваяСтрока();
		Товар = ДокОснование.Товар;
		Количество = ДокОснование.Количество;
		Единица = ДокОснование.Единица;
		ЦенаБезНДС = ДокОснование.ЦенаБезНДС;
		ЦенаСоСкидкой = ДокОснование.ЦенаСоСкидкой;
		СуммаСкидки = ДокОснование.СуммаСкидки;
		СуммаСНДС = ДокОснование.СуммаСНДС;
		СуммаБезСкидки = ДокОснование.СуммаБезСкидки;
		Размер = ПолучитьСвойствоТовара(Товар,"IP_PROP49");
		Покрытие = ПолучитьСвойствоТовара(Товар,"IP_PROP38");
	КонецЦикла;
		
	Комментарий = "";
КонецПроцедуры

//======================================================================
Процедура измКво()
	СуммаСНДС = ЦенаСоСкидкой * Количество;
	СуммаБезСкидки = СуммаСНДС + СуммаСкидки;
КонецПроцедуры // измКво

Процедура ПриНачалеРедактированияСтроки()
	стКоличество = Количество;
КонецПроцедуры

//======================================================================
Процедура ПриВводеСтроки()
		стКоличество = Количество;
	//СтатусВозврата(0);
	//Возврат;
КонецПроцедуры // ПриВводеСтроки

//======================================================================
Процедура ПриНачалеВыбораЗначения(ид,фл)
	Если (ид = "Товар")  или (ид = "Сумма") или (ид = "Единица") Тогда
		СтатусВозврата(0); Возврат;
	ИначеЕсли ид = "Количество" Тогда
		стКоличество = Количество;
		Сообщить(стКоличество);
	ИначеЕсли ид = "имяКомплекта" Тогда
		спсИмяКомплекта = СоздатьОбъект("СписокЗначений");
		тзВр = СоздатьОбъект("ТаблицаЗначений");
		ВыгрузитьТабличнуюЧасть(тзВр,"имяКомплекта,Количество");
		тзВр.Свернуть("имяКомплекта","Количество");
		тзВр.Выгрузить(спсИмяКомплекта,,,"имяКомплекта");
		тзВр = 0;
		Если спсИмяКомплекта.РазмерСписка() <> 0 Тогда
			спсИмяКомплекта.ДобавитьЗначение("ввести новый","ввести новый");
		КонецЕсли;
		
		Если спсИмяКомплекта.РазмерСписка() = 0 Тогда
			фл = 1;
		Иначе
			фл = 0; выбЗн = 0; поз = 0;
			Если спсИмяКомплекта.ВыбратьЗначение(выбЗн,,поз,,1) = 0 Тогда
				фл = 0; Возврат;
			КонецЕсли;
			Если поз = спсИмяКомплекта.РазмерСписка() Тогда //тут должно быть предложение "ввести новый"
				фл = 1;
				Возврат;
			Иначе
				фл = 0;
				имяКомплекта = выбЗн;
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ПриНачалевыбора

Процедура ПриВыбореЗакладки(Ном,Зн)
	Форма.ИспользоватьСлой("Общий," + Зн,2);
КонецПроцедуры

Процедура ПриОткрытии() //Предопределенная процедура
	стараяСумма = ДокументОснование.Итог("СуммаСНДС");
	
	НачальнаяДатаДокумента = ДатаДок;	
	глПроверкаРазрешенияРедактирования(Контекст);
	Если (названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер") ИЛИ (названиенабораправ()="МенеджерТоварищ") Тогда
		
		// Если открыли только на просмотр, то надо кнопки сделать недоступными
		Если Форма.ТолькоПросмотр()=1 Тогда
			Форма.кнОК.Доступность(0);
			Форма.кнДействия.Доступность(0);
		Иначе
			Форма.КнопкаПоУмолчанию("кнОК");
		КонецЕсли;
	КонецЕсли;	
	
	глУстановкаРеквизитаТип(Контекст);
	ОбновитьНадписи();
	СтараяДата = ДатаДок;           
	Сортировать();
КонецПроцедуры //При открытии
	
//*****************************************************************************
Процедура ОбработкаПодбора(Выб) //Предопределенная процедура
	Если ТипЗначенияСтр(выб) = "ТаблицаЗначений" Тогда
		глПриОбработкеПодбора(Выб,Контекст);
	КонецЕсли;
КонецПроцедуры //Обработка подбора

//*****************************************************************************
Процедура ПриЗаписи() //Предопределенная процедура
	Если глМожноЗаписатьДокумент(Контекст)=0 Тогда
		СтатусВозврата(0);                        
	КонецЕсли;
	
	ОтборАвтор=фирма;	
	Пользователь = Автор;
	ГруппаПользователей = Автор.Родитель;
КонецПроцедуры

// ===============================
Процедура ПриЗакрытии()
КонецПроцедуры	


Функция Раскраска()
	Попытка
		тзСтрок.ПолучитьСтрокуПоНомеру(НомерСтроки);
		Возврат тзСтрок.Раскраска;
	Исключение
		Возврат "";
	КонецПопытки;
	//Если (Товар.Акция.Получить(ДатаДок) = 1) и (Товар.Распродажа.Получить(ДатаДок) = 1) Тогда
	//	стр = "(BRUSH[" + цветАкция +"])()(BRUSH[" + цветРаспродажа + "])(BRUSH[NONE])";
	//ИначеЕсли Товар.Акция.Получить(ДатаДок) = 1 Тогда
	//	стр = "(BRUSH[" + цветАкция + "])()(BRUSH[NONE])";
	//ИначеЕсли Товар.Распродажа.Получить(ДатаДок) = 1 Тогда
	//	стр = "(BRUSH[" + цветРаспродажа + "])()(BRUSH[NONE])";
	//КонецЕсли;
КонецФункции

//======================================================================
Процедура ПоказатьНаКарте()
	Если Контрагент.Выбран() = 1 Тогда
		ЗапуститьПриложение("https://www.google.com.ua/maps/place/" + СокрЛП(Контрагент.ЮридическийАдрес));
	КонецЕсли;
КонецПроцедуры // ПоказатьНаКарте()

Форма.Товар.ВыполнятьФормулуТолькоПриИзменении(1);

//*****************************************************************************
//Инициализирум список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
|СтруктураПодчиненности,
|ОткрытьВЖурнале,
|Подчиненные,
|ИзмКомментария");

спрКонтрПрава = СоздатьОбъект("КонтрагентыПрава");
работаСКартинками = СоздатьОбъект("РаботаСКартинками");