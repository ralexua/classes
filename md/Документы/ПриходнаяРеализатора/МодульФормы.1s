//*****************************************************************************
// Описание переменных 
Перем СписокДействий,новый;
Перем СтарыйКонтрагент;
Перем СтараяДата;

Перем НачальнаяДатаДокумента;
//*****************************************************************************
// "служебные" функции и процедуры 

//*****************************************************************************
Функция ЗаголовокФормы() 
	Перем Заголовок, Название;

	Если ВидОперации = 0  Тогда
		Заголовок = "Приходная реализатора";
		Название ="Накладная №";
	Иначе
		Заголовок = "Приходная реализатора (возврат)";
		Название = "Накладная (возврат) №";
	КонецЕсли;
	
	
	Заголовок = Заголовок + глЗаголовок(Контекст);
	
	Форма.Заголовок(Заголовок);     
	Возврат Название;
КонецФункции //ЗаголовокФормы

//******************************************************************************
Процедура ОбновитьНадписи()
	Форма.ТекстВалюты.Заголовок(глСтрокаВалюты(Контекст));
	Форма.ТекстОснования.Заголовок(СокрП(Основание));
	Форма.ТекстПорядокОплаты.Заголовок(глСтрокаПорядокОплаты(Контекст)); 
КонецПроцедуры

//******************************************************************************
Функция Итого()
	// Показ итоговых сумм по документу
	Перем Результат,СуммаБезНДС, СуммаСНДС, СуммаНДС;
	СуммаБезНДС = Итог("СуммаБезНДС");
	СуммаСНДС = Итог("СуммаСНДС");
	СуммаНДС = СуммаСНДС - СуммаБезНДС;
	Результат = ?(СуммаБезНДС =0,"","Сумма="+ глФРМ(СуммаБезНДС, Валюта, 1))+
	            ?(СуммаНДС = 0,""," НДС=" + глФРМ(СуммаНДС, Валюта, 1)) + 
	            ?(СуммаСНДС = 0,""," Всего=" + глФРМ(СуммаСНДС, Валюта, 1));
	Возврат Результат;
КонецФункции

// ===============================
Процедура УстДоступностьКнопок()
	Если ВидОперации = 1 Тогда
		Форма.кнПодбор.Доступность(0);
	Иначе                      
		Форма.кнПодбор.Доступность(1);
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура УстДоступность()
	Если Договор.Выбран()=1 Тогда
		Дост=0;
	Иначе
		Дост=1;
	КонецЕсли;
	Если названиенабораправ()<>"Администратор" Тогда
	    Если распечатан=1 Тогда
	        форма.толькопросмотр(1);
	    КонецЕсли;
	КонецЕсли;
	
	Форма.спВидТорговли.Доступность(Дост);
	Форма.тВидТорговли.Доступность(Дост);
	УстДоступностьКнопок();
КонецПроцедуры             

// ===============================
Процедура ИзмВидТорговли()
	ВидТорговли = спВидТорговли.ПолучитьЗначение(спВидТорговли.ТекущаяСтрока());
КонецПроцедуры         
                       
// ===============================
Процедура ВыбранВидТорговли()
	спВидТорговли.ТекущаяСтрока(спВидТорговли.НайтиЗначение(ВидТорговли));
КонецПроцедуры

// ===============================
Процедура ЗаполнитьСпВидТорговли()
	
	спВидТорговли.ДобавитьЗначение(Перечисление.ВидыТорговли.Консигнация,Строка(Перечисление.ВидыТорговли.Консигнация));

КонецПроцедуры              

Процедура Печать()
	Если (названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер")  ИЛИ (названиенабораправ()="МенеджерТоварищ")Тогда
		Если новый=1 Тогда
		    возврат;
		КонецЕсли;
	КонецЕсли;                       
	Если (названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер") ИЛИ (названиенабораправ()="МенеджерТоварищ") Тогда
		Распечатан=1; 		
		провести();			
	    //записать();
		Если проведен()=0 Тогда
		СТАТУСВОЗВРАТА(0);    
		КонецЕсли;
		форма.толькопросмотр(1);
		Если выбран()=1 Тогда
		    новый=0;
		КонецЕсли;		
	КонецЕсли;	
	Таб = СоздатьОбъект("Таблица");  

	ВП = Валюта;  
	КурсПечати = Курс;                     
	ДатаКурса = Дата_Курса;

	Если ПустоеЗначение(Контрагент) = 0 Тогда
		Если Контрагент.ВидКонтрагента <> Перечисление.ВидыКонтрагентов.Нерезидент Тогда
			Если ТипУчета > 0 Тогда
				ВП = Гривня;  
				КурсПечати = глКурсДляВалюты(ВП,ДатаДок);                     
				ДатаКурса = ДатаДок;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;	

	ПечФорма = "Накладная";
	
	Язык = глЯзык(ПечФорма); 	
	
	Таб.ИсходнаяТаблица(ПечФорма);
	
	глУстПропись(Валюта,Язык);
	
	Фирма.ИспользоватьДату(ДатаДок,1);
	Таб.ВывестиСекцию("Шапка");
	Ном = 1;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл 
		ПечЦена = глФРМ(глПересчет(ЦенаБезНДС,Валюта,Курс,ВП,ДатаДок),ВП,0);
		ПечСумма = глФРМ(глПересчет(СуммаБезНДС,Валюта,Курс,ВП,ДатаДок),ВП,0);
		Таб.ВывестиСекцию("Строка");
		Ном = Ном+1;
	КонецЦикла;
	ПечБезНДС = глФРМ(глПересчет(Итог("СуммаБезНДС"),Валюта,Курс,ВП,ДатаДок),ВП,0);
	ПечНДС = глФРМ(глПересчет(Итог("СуммаСНДС") - Итог("СуммаБезНДС"),Валюта,Курс,ВП,ДатаДок),ВП,0);
	ПечСНДС = глФРМ(глПересчет(Итог("СуммаСНДС"),Валюта,Курс,ВП,ДатаДок),ВП,0);	
	ПечНДСПропись = " "+Формат(глПересчет(Итог("СуммаСНДС") - Итог("СуммаБезНДС"),Валюта,Курс,ВП,ДатаДок),"Ч12.2")+" "+ВП.Кратко;
	ПечСНДСПропись = глСуммаПрописью(глПересчет(Итог("СуммаСНДС"),Валюта,Курс,ВП,ДатаДок),ВП);  
	Таб.ВывестиСекцию("Дно");
	Таб.ТолькоПросмотр(1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.Опции(0,0,,);
	Таб.Показать("ПЕЧАТЬ: Приходная накладная","");
		Распечатан=1;
		записать();		

КонецПроцедуры

// ===============================
Процедура ИзмДоговор()
	Если ПустоеЗначение(Договор)=0 Тогда
		Если Договор.ВидТорговли<> Перечисление.ВидыТорговли.Консигнация Тогда
			глТрассировка("Можно выбирать только договор консигнации !!!",1);
			Договор=0;
		КонецЕсли;                              
	КонецЕсли;
КонецПроцедуры
                                           
//******************************************************************************
Процедура ПриВводеНаОсновании(ДокОснование)
	Перем ВидОсн;
	
	Если ПустоеЗначение(ДокОснование) = 1 Тогда
		Возврат;
	КонецЕсли;

	ВидОсн = ДокОснование.Вид();
	
	БезПраваПередачи = Нет;

	Валюта = ДокОснование.Валюта;
	Дата_Курса = ДокОснование.Дата_Курса;
	Курс = ДокОснование.Курс;
		
	глЗаполнитьШапкуНаОсн(Контекст,ДокОснование);
	ВыбранВидТорговли();
	ИзмДоговор();
	
	Если ВидОсн <> "Договор" Тогда
		глСкопироватьТовСостав(Контекст,ДокОснование);    
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 цикл                   
			Если Товар.ВидТовара = Перечисление.ВидыТоваров.Услуга Тогда
				Продолжить;
			КонецЕсли;
			Фрм = ?(ТипУчета = Упр,глПустаяФирма,Фирма);
			КвоОстПр = Регистр.ПартииТоваров.СводныйОстаток(Фрм,Товар,ОтданныйПринятый,,,,ДокументОснование,"ОстатокТовара"); 
			КвоОстКуп = Регистр.ПартииТоваров.СводныйОстаток(Фрм,Товар,ОтданныйКупленный,,,,ДокументОснование,"ОстатокТовара"); 
			Если Количество = КвоОстПр/Коэффициент+КвоОстКуп/Коэффициент Тогда 
				Продолжить;
			Иначе
				Количество = КвоОстПр/Коэффициент+КвоОстКуп/Коэффициент;
			КонецЕсли;	
			глВыч_суммы_накл(Контекст);      
		КонецЦикла;	
		// удаляем сторки с количеством 0
		ТаблЧ = СоздатьОбъект("ТаблицаЗначений");
		ВыгрузитьТабличнуюЧасть(ТаблЧ);
		КСтр = ТаблЧ.КоличествоСтрок();
		Пока КСтр <> 0 цикл
			ТаблЧ.ПолучитьСтрокуПоНомеру(КСтр);				
			Если (ТаблЧ.Количество = 0) И (ТаблЧ.Товар.ВидТовара <> Перечисление.ВидыТоваров.Услуга) Тогда
				ТаблЧ.УдалитьСтроку();
				КСтр = ТаблЧ.КоличествоСтрок();
			Иначе
				КСтр = КСтр-1;
			КонецЕсли;	  
		КонецЦикла;	
		ЗагрузитьТабличнуюЧасть(ТаблЧ);
		Если КоличествоСтрок() = 0 тогда
			глТрассировка("При начальном заполнении на основании "+ДокументОснование+", табличная часть пустая.",0);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры


//*****************************************************************************
// функции и процедуры, вызываемые из формул элементов диалога

//******************************************************************************
Процедура Взаиморасчеты()
	глПоказатьДолг(Контекст, Контрагент, "Закупка");
КонецПроцедуры
                       
// ===============================
Процедура Подбор()
	Варианы= СоздатьОбъект("СписокЗначений");
	Варианы.ДобавитьЗначение("по каталогу");
	Варианы.ДобавитьЗначение("по прайсу");
	Результат = 0;
	Если Варианы.ВыбратьЗначение(,,Результат,,1)=1 Тогда
	    Если Результат = 1 Тогда
			глПодбор(Контекст,"номенклатура","ДляПодбора")
		ИначеЕсли Результат = 2 Тогда
			глПодбор(Контекст,"прайс_лист","ДляПодбора")
	    КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//*****************************************************************************
Процедура ВыборФирмы()
	// по кнопке редактирования параметров фирмы в докумнете
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ИнформацияОфирме", КонтекстДокумента);
	ОбновитьНадписи();
КонецПроцедуры	
	
//*****************************************************************************
Процедура ВыборОплаты()
	// Процедура по кнопке редактирования параметров оплаты в докумнете
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ИнформацияОценах", КонтекстДокумента);
	ОбновитьНадписи();
КонецПроцедуры	


//*****************************************************************************
Процедура ИзмКонтрагент() // Процедура при выборе Контрагента в докумнете
    Если Контрагент.Выбран()=1 Тогда                                      
		Если СтарыйКонтрагент <> Контрагент Тогда
			// изменили Контрагента
			// очистим договор
			Договор = ПолучитьПустоеЗначение("Документ.Договор");
			Если Константа.ПодставлятьОсновнойДоговор = Да Тогда
				// подставим договор по умолчанию                                 
				Если ПустоеЗначение(Контрагент.ОсновнойДоговорТорг) = 0 Тогда
					Если Фирма = Контрагент.ОсновнойДоговорТорг.Фирма Тогда
						Договор = Контрагент.ОсновнойДоговорТорг;
					КонецЕсли;	
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
	Иначе
		//Не выбран Контрагент - не имеет смысла показывать глубину и дату оплаты и договор
		Договор = ПолучитьПустоеЗначение("Документ.Договор");
	КонецЕсли;
	// Формирует и показывает дату оплаты
	СтарыйКонтрагент = Контрагент;
	УстДоступность();
	ОбновитьНадписи();
КонецПроцедуры	
	
//*****************************************************************************
Процедура ВыборОснования()
	// Процедура по кнопке редактирования основания в докумнете
	Перем КонтекстДокумента;
	СтарДоговор = Договор;
	СтарОснование = ДокументОснование;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", КонтекстДокумента);
	Если ((ДокументОснование <> СтарОснование) и (ПустоеЗначение(ДокументОснование) = 0)) тогда
		ПриВводеНаОсновании(ДокументОснование);	
	ИначеЕсли Договор<>СтарДоговор тогда
		ПриВводеНаОсновании(Договор);			
	КонецЕсли;	
	Если Договор.Выбран()=1 Тогда
		ВидТорговли=Договор.ВидТорговли;
	КонецЕсли;                          	
	ИзмДоговор();
	УстДоступность();
	глУстДостСумм(Контекст);
	ОбновитьНадписи();
КонецПроцедуры	

//*****************************************************************************
// Предопределенные процедуры

//******************************************************************************
Процедура ВводНового(Скопирован) //Предопределенная процедура
    новый=1;   
	распечатан=0;
	глЗаполнитьШапку(Контекст);
	Если Скопирован=1 Тогда	//копирование документа
		Возврат;
	КонецЕсли;

	ДатаДок=РабочаяДата();
	
	Если Форма.Параметр="Возврат" Тогда                          
		ВидОперации = 1;
		
		Если ПустоеЗначение(Контрагент) = 1 Тогда
			Контрагент=Константа.ОсновнойПокупатель;
		КонецЕсли;
		
		Валюта=Константа.ОсновнаяВалютаПродажи;
		
		Если ПустоеЗначение(Контрагент) = 0 Тогда
			КатегорияЦен = Контрагент.КатегорияЦен;
		КонецЕсли;
	Иначе
		ВидОперации = 0;
		Если ПустоеЗначение(Контрагент) = 1 Тогда
			Контрагент=Константа.ОсновнойПоставщик;
		КонецЕсли;
		
		Валюта=Константа.ОсновнаяВалютаЗакупки;
	
		Если ПустоеЗначение(Контрагент) = 0 Тогда
			КатегорияЦен = Контрагент.КатегорияЦенПоставщика;
		КонецЕсли;
	КонецЕсли;
	
	Дата_Курса = ДатаДок;
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта = Гривня;
	КонецЕсли;
	
	Курс=глКурсДляВалюты(Валюта,Дата_Курса);
	
	Если ПустоеЗначение(КатегорияЦен) = 1 Тогда
		КатегорияЦен = Автор.КатегорияЦен;
	КонецЕсли;      
	
	ВидТорговли = Перечисление.ВидыТорговли.Консигнация;
	ВыбранВидТорговли();
	
	БезПраваПередачи = Нет;
	УстДоступность();
КонецПроцедуры
                           
//******************************************************************************
Процедура ВводНаОсновании(ДокОснование)
	Перем ВидОсн;
    новый=1;   
	распечатан=0;
	
	ВидОсн = ДокОснование.Вид();
	Если ВидОсн = "РасходнаяРеализатора"  Тогда
		Если ДокОснование.ВидОперации = 1 Тогда
		    СтатусВозврата(0);
			Предупреждение("Приходную реализатора нельзя выписывать"+РазделительСтрок+
			               "на основании возвратной расходной реализатора !");
			Возврат;
		КонецЕсли;
		ВидОперации=1;
	Иначе
		ВидОперации=0;
	КонецЕсли;
	
	Автор = глПользователь;
	
	ДатаДок=РабочаяДата();
	
	ПриВводеНаОсновании(ДокОснование);  

	Если ПустоеЗначение(КатегорияЦен)=1 Тогда
		Если ПустоеЗначение(Контрагент)=0 Тогда
			КатегорияЦен = Контрагент.КатегорияЦен;    
		КонецЕсли;	    
	КонецЕсли;          
	
	Если ПустоеЗначение(КатегорияЦен)=1 Тогда
		КатегорияЦен = Автор.КатегорияЦен;
	КонецЕсли;
		
КонецПроцедуры

//*****************************************************************************
Процедура ПриОткрытии() //Предопределенная процедура
	НачальнаяДатаДокумента = ДатаДок;
	глПроверкаРазрешенияРедактирования(Контекст);
	глУстановкаРеквизитаТип(Контекст);
	Если новый<>1 тогда
		новый=0;
	КонецЕсли;  	
	Если (названиенабораправ()="Продавець") ИЛИ (названиенабораправ()="Менеджер") ИЛИ (названиенабораправ()="МенеджерТоварищ") Тогда
		Если распечатан=1 Тогда
		    форма.кнподбор.доступность(0);			
		КонецЕсли;								
		ЕСли (проведен()=1) ИЛИ (ПометкаУдаления()=1) тогда		
			форма.толькопросмотр(1);			
		КонецЕсли;		
		форма.распечатан.доступность(0);
	Иначе
		форма.распечатан.доступность(1);
	КонецЕсли;
	
	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кнОК.Доступность(0);
		Форма.кнПровести.Доступность(0);
		Форма.кнДействия.Доступность(0);
		
		Форма.кнПодбор.Доступность(0);
		
		Форма.кнОснование.Доступность(0);
	Иначе
		Форма.КнопкаПоУмолчанию("кнОК");
	КонецЕсли;
	          
	глУстВидимостьЦен(Контекст);
	глУстДостСумм(Контекст);
	
	УстДоступность();
    ОбновитьНадписи(); 

	СтараяДата = ДатаДок;
	Если ПустоеЗначение(ВидТорговли)=1 Тогда
	    ВидТорговли = Перечисление.ВидыТорговли.Консигнация;
		ВыбранВидТорговли();
	КонецЕсли;	
КонецПроцедуры //При открытии

//*****************************************************************************
Процедура ПриНачалеВыбораЗначения(Рекв,Флаг)
	Флаг=0;
	Если (Рекв="Фирма") или (Рекв="Склад") Тогда
		ВыборФирмы();
	ИначеЕсли Рекв="КатегорияЦен" Тогда
	    ВыборОплаты();
	Иначе
		Флаг=1;
	КонецЕсли;
КонецПроцедуры
//*****************************************************************************
Процедура ОбработкаПодбора(Выб) //Предопределенная процедура
	глПриОбработкеПодбора(Выб,Контекст);
КонецПроцедуры //Обработка подбора

//*****************************************************************************
Процедура ПриЗаписи() //Предопределенная процедура
	Если глМожноЗаписатьДокумент(Контекст)=0 Тогда
		СтатусВозврата(0);                        
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	новый=0;
	ГруппаПользователей = Автор.Родитель;
КонецПроцедуры
                     
// ===============================
Процедура ПриЗакрытии()
КонецПроцедуры	
                                               
Форма.Товар.ВыполнятьФормулуТолькоПриИзменении(1);

//*****************************************************************************
//Инициализирум список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
    |ТоварныйСостав,
	|ОбновлениеЦен,
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ВводНаОсновании,
	|ОткрытьВЖурнале,
	|Подчиненные,
	|ИзмКомментария");

ЗаполнитьСпВидТорговли();
ВыбранВидТорговли();
