Перем спФирмы;
// ===============================
Функция ПроверкаШапки()
	глВсеВыбрано = 1;
	глВыбранЛи(Фирма,"Фирма");  
	глВыбранЛи(Контрагент,"Контрагент");
	глВыбранЛи(ВидТорговли,"Вид торговли");
	глВыбранЛи(КатегорияЦен,"Категория цен");
	глВыбранЛи(Договор,"Договор");	
	глВыбранЛи(Склад,"Склад");		
	глВыбранЛи(Валюта,"Валюта");
	Возврат глВсеВыбрано;
КонецФункции

// ===============================
Функция ПроверкаСтроки()
    глВсеВыбрано = 1;
	глВыбранЛи(Товар,"Товар",НомерСтроки);
	Если глВсеВыбрано = 1 Тогда
		Если (Товар.ВидТовара = Перечисление.ВидыТоваров.Услуга) Тогда
			глТрассировка("В документе "+ПредставлениеВида() +" нельзя использовать услуги. Cтрока "+НомерСтроки+".",0);
			глВсеВыбрано = 0;
		КонецЕсли;		
	КонецЕсли;
	глВыбранЛи(Единица,"Единица",НомерСтроки);
	Возврат глВсеВыбрано;
КонецФункции                 

// ===============================
Процедура ДвиженияОстатки()

	ФлагПрихода = 1;
	
	ФлагВозврата = ВидОперации;
	
	глИзменитьОстатки(Контекст, спФирмы, Склад, ФлагВозврата, ФлагПрихода);
	
КонецПроцедуры

// ===============================
Процедура ДвиженияПартии() 
		
	Для Инд=1 по спФирмы.РазмерСписка() Цикл
		текФирма = спФирмы.ПолучитьЗначение(Инд);
		
		Если ПустоеЗначение(текФирма)=1 Тогда
			МетодРасчетаСебестоимости = Константа.МетодРасчетаСебестоимостиУправленческогоУчета;
		Иначе
			текФирма.ИспользоватьДату(ДатаДок);
			МетодРасчетаСебестоимости = текФирма.МетодРасчетаСебестоимостиФинансовогоУчета;
		КонецЕсли;                  
		                            
		Если МетодРасчетаСебестоимости = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
		    глТрассировка(Шаблон(?(ПустоеЗначение(текФирма)=1,"Управленческий учёт.","Фирма [текФирма].")+" Для работы учета по консигнации необходим партионный учёт."),0);
			глНеПроводить(Контекст);
			Возврат;
		КонецЕсли;
		
		Если (ВидОперации <> 1) Тогда
			// Приходуем на реализацию
			
			Регистр.ПартииТоваров.Фирма = текФирма;
			Если БезПраваПередачи = Да Тогда
				Регистр.ПартииТоваров.Статус = ПринятыйБезПраваПередачи;
			Иначе
				Регистр.ПартииТоваров.Статус = Принятый;    
			КонецЕсли;
			
			Регистр.ПартииТоваров.Контрагент = Контрагент;
			Регистр.ПартииТоваров.Поставщик = Контрагент;
			Регистр.ПартииТоваров.Поставка = ТекущийДокумент();
			Регистр.ПартииТоваров.ПрихДокумент = ТекущийДокумент();
			
			ВыбратьСтроки();
			Пока ПолучитьСтроку()=1 Цикл
				
				Регистр.ПартииТоваров.ПривязыватьСтроку(НомерСтроки);
				Регистр.ПартииТоваров.Товар = Товар;
				Регистр.ПартииТоваров.ОстатокТовара = Количество * Единица.Коэффициент;
				
				Если ПустоеЗначение(текФирма)=1 Тогда
					ВУ = Товар.ВалютаУчета;
				Иначе
					ВУ = Гривня;
				КонецЕсли;
				
				Регистр.ПартииТоваров.Стоимость = глПересчет(СуммаБезНДС ,Валюта,Курс,ВУ,Дата_Курса);
				Регистр.ПартииТоваров.ПродСтоимость = 0;
				Регистр.ПартииТоваров.НДС = глПересчет(СуммаСНДС - СуммаБезНДС,Валюта,Курс,ВУ,Дата_Курса);
				Регистр.ПартииТоваров.Оборот =0;
				Регистр.ПартииТоваров.НДСРасхода = 0;
				Регистр.ПартииТоваров.КодОперации = ПриемТовараНаРеализацию;
				
				Регистр.ПартииТоваров.ДвижениеПриходВыполнить();
			КонецЦикла;
			
		Иначе // Возврат товара
			ФлагВозврата = 1;
			
			спОтбор = СоздатьОбъект("СписокЗначений");
			спСтатус = СоздатьОбъект("СписокЗначений");
			спСтатус.ДобавитьЗначение( ОтданныйКупленный );
			спСтатус.ДобавитьЗначение( ОтданныйПринятый );
			спОтбор.Установить("Статус",спСтатус);
			Если ПустоеЗначение(ДокументОснование)=0 Тогда
				спОтбор.Установить("Контрагент",ДокументОснование.Контрагент);
				спОтбор.Установить("ТекущийДокумент",ДокументОснование);
			Иначе
				спОтбор.Установить("Контрагент",Контрагент);
			КонецЕсли;
			
			Предпочтение = 0;
			тбПартии = 0;
			тбОстатки = 0;
			ИнвСтартегияПредпочтения  = ФлагВозврата;
			ИнвСтратегияПродажи = ФлагВозврата;
			ВремРег = СоздатьОбъект("Регистры");
			
			глСформироватьТаблицуПартий(Контекст, ВремРег ,текФирма, ФлагВозврата, спОтбор, Предпочтение, 
			тбПартии, тбОстатки, ИнвСтартегияПредпочтения, ИнвСтратегияПродажи);
			
			ВыбратьСтроки();
			Пока ПолучитьСтроку()=1 Цикл
				
				Если ПустоеЗначение(текФирма)=1 Тогда
					ВУ = Товар.ВалютаУчета;
				Иначе	
					ВУ = Гривня;
				КонецЕсли;
				
				ОсталосьСписать =  Количество * Коэффициент;
				
				НС=0;
				Если тбПартии.НайтиЗначение(Товар,НС,"Товар")=1 Тогда
					тбПартии.ПолучитьСтрокуПоНомеру(НС);
				Иначе
					тбПартии.ВыбратьСтроки();
					тбПартии.ПолучитьСтроку();
				КонецЕсли;
				
				Пока тбПартии.Товар = Товар Цикл			
					
					КонтрагентП = тбПартии.Контрагент;
					ПоставщикП = тбПартии.Поставщик;
					ПоставкаП = тбПартии.Поставка;
					ПрихДокументП = тбПартии.ПрихДокумент;
					СтатусП = тбПартии.Статус;
					
					НС =0;
					Если тбОстатки.НайтиЗначение(глПолучитьКлючТбОстатков(ПрихДокументП,ПоставкаП,Товар.Код),НС,"Ключ")=1 Тогда
						тбОстатки.ПолучитьСтрокуПоНомеру(НС);
						
						ОстатокТовара = тбОстатки.ОстатокТовара;
						                                         
						Если ОстатокТовара = 0 Тогда
							Если тбПартии.ПолучитьСтроку()=0 Тогда
								Прервать;
							КонецЕсли;
							Продолжить;
						КонецЕсли;
						
						СписываемыйОстатокТовара = Мин(ОсталосьСписать, ОстатокТовара);
						
						КоэфСписания = СписываемыйОстатокТовара / ОстатокТовара;
						
						СписываемаяСтоимость = тбОстатки.Стоимость * КоэфСписания;
						СписываемаяПродСтоимость = тбОстатки.ПродСтоимость * КоэфСписания;
						СписываемыйНДС = тбОстатки.НДС * КоэфСписания;
						
						СписываемыйОборот = тбОстатки.Оборот * КоэфСписания;
						СписываемыйНДСРасхода = тбОстатки.НДСРасхода * КоэфСписания;
						
						Если СтатусП = ОтданныйКупленный Тогда
							КодОперации = ВозвратТовараОтРеализатора;
						ИначеЕсли СтатусП = ОтданныйПринятый Тогда                            
							КодОперации = ВозвратПринятогоПереданногоТовараОтРеализатора;
						КонецЕсли;                                            
						
						СписываемаяПрибыль = тбОстатки.Прибыль * КоэфСписания;						
						     
						// Списываем с реализатора
						
						глПровестиПартию(Контекст, 0, ФлагВозврата, текФирма, Товар, СтатусП, КонтрагентП, ПоставщикП, 
							ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
							СписываемыйНДС, СписываемыйОборот, СписываемыйНДСРасхода, КодОперации,,СписываемаяПрибыль);
						
						// Приходуем у себя
						
						Если СтатусП = ОтданныйКупленный Тогда
							СтатусП = Купленный;
						ИначеЕсли СтатусП = ОтданныйПринятый Тогда                            
							СтатусП = Принятый;
						КонецЕсли;
						
						СписываемаяПродСтоимость = 0;
						
						глПровестиПартию(Контекст, 1, ФлагВозврата, текФирма, Товар, СтатусП, КонтрагентП, ПоставщикП, 
							ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
							СписываемыйНДС, СписываемыйОборот, СписываемыйНДСРасхода, КодОперации,,СписываемаяПрибыль);

						глУчестьСписание(тбОстатки,СписываемыйОстатокТовара,СписываемаяСтоимость,СписываемаяПродСтоимость,СписываемыйНДС,СписываемыйОборот,СписываемыйНДСРасхода,СписываемаяПрибыль);

						ОсталосьСписать = ОсталосьСписать - СписываемыйОстатокТовара;
					КонецЕсли;
					
					Если ОсталосьСписать = 0 Тогда
						Прервать;
					КонецЕсли;   
					
					Если тбПартии.ПолучитьСтроку()=0 Тогда
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
				Если ОсталосьСписать > 0 Тогда
					глСообщитьОбОтсутствииПартии(Контекст,ФлагВозврата, текФирма, Товар, НомерСтроки);
					//*ralex, 07-04-20 00:33
					//Если Константа.РазрешитьОтрицательныеОстаткиТоваров = Нет Тогда
					// -------- заменено на:
					Если (Константа.РазрешитьОтрицательныеОстаткиТоваров = Нет) и (НазваниеНабораПрав() <> "Администратор") Тогда
					//*/ralex, 07-04-20 00:33
						глНеПроводить(Контекст);
						Возврат;
					Иначе
						СписываемыйОстатокТовара = ОсталосьСписать;
						ОстатокТовара = Количество * Коэффициент;
						КоэфСписания = СписываемыйОстатокТовара / ОстатокТовара;
						
						СписываемаяСтоимость = глПересчет(СуммаБезНДС * КоэфСписания,Валюта,Курс,ВУ,Дата_курса);
						СписываемаяПродСтоимость = глПересчет(СуммаСНДС * КоэфСписания,Валюта,Курс,ВУ,Дата_курса);
						СписываемыйНДС = глПересчет((СуммаСНДС - СуммаБезНДС) * КоэфСписания,Валюта,Курс,ВУ,Дата_курса);
						
						СписываемыйОборот = 0;
						СписываемыйНДСРасхода = 0;
						
						СтатусП = ОтданныйКупленный;
						КодОперации = ВозвратТовараОтРеализатора;
						
						КонтрагентП = Контрагент;
						ПоставщикП = 0;
						ПоставкаП = 0;          
						
						Если ПустоеЗначение(ДокументОснование)=0 Тогда
							ПрихДокументП = ДокументОснование;	
						Иначе
							ПрихДокументП = ТекущийДокумент();
						КонецЕсли;
						
						глПровестиПартию(Контекст, 1, ФлагВозврата, текФирма, Товар, СтатусП, КонтрагентП, ПоставщикП, 
							ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
							СписываемыйНДС, СписываемыйОборот, СписываемыйНДСРасхода, КодОперации,,0);
						
						глСообщитьОСозданииПартии(Товар, СтатусП, СписываемыйОстатокТовара);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
//-------------------------------------
Процедура ОбработкаПроведения()

	Если ДатаДок>РабочаяДата() Тогда
		глНеПроводить(Контекст,"Нельзя проводить документ будущей датой!");
		Возврат;
	КонецЕсли;
	
	Если глПроверкаДублейСтрок(Контекст)=1 Тогда
		глНеПроводить(Контекст,"В документе строки с одинаковым товаром, но разной ценой!");
		Возврат;
	КонецЕсли;

	Если ПроверкаШапки() = 0 Тогда
	    глНеПроводить(Контекст); 
		Возврат;
	КонецЕсли;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ПроверкаСтроки() = 0 Тогда
			глНеПроводить(Контекст); 
			Возврат;
		КонецЕсли;
	КонецЦикла;

	                                     
	спФирмы = глПолучитьФирмы(Контекст);
	                
	Если спФирмы.РазмерСписка()>0 Тогда
		
		ДвиженияОстатки();
		
		ДвиженияПартии();
		
	КонецЕсли; 
	
		

КонецПроцедуры


