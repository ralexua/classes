// ===============================
// Описание переменных 
Перем СписокДействий;
Перем КатегорияЦен;
Перем СтараяДата;
Перем НачальнаяДатаДокумента; // Для контроля даты документа

// ===============================
// "служебные" функции и процедуры 

// ===============================
Функция ЗаголовокФормы() 
	Перем Заголовок, Название;
	Заголовок = "ЧЕК";
	Название = "ЧЕК";
	Если ВидОперации =1  Тогда
		Название = Название + " (возврат)";
		Заголовок = Заголовок + " (возврат)";
	КонецЕсли;
	Название = Название + " №";
	
	Заголовок = Заголовок + глЗаголовок(Контекст);
	
	Форма.Заголовок(Заголовок);     
	Возврат Название;
КонецФункции //ЗаголовокФормы

// ===============================
Процедура ОбновитьНадписи()
	Форма.ТекстВалюты.Заголовок(глСтрокаВалюты(Контекст));
	Форма.ТекстОснования.Заголовок(СокрП(Основание));
КонецПроцедуры
                              
Процедура Подбор()
	Варианы= СоздатьОбъект("СписокЗначений");
	Варианы.ДобавитьЗначение("по прайсу");
	Варианы.ДобавитьЗначение("по штрих-коду");
	Результат = 0;
	Если Варианы.ВыбратьЗначение(,,Результат,,1)=1 Тогда
		Если Результат = 1 Тогда
			глПодбор(Контекст,"прайс_лист","ДляПодбора")
		ИначеЕсли Результат = 2 Тогда
			ОткрытьПодбор("Обработка.ПодборПоШтрихКоду");
	    КонецЕсли;
	КонецЕсли;	
КонецПроцедуры
                                   
// ===============================
Процедура ЗаполнениеШапкиНаОсновании(ДокОснование)
	Если ПустоеЗначение(ДокОснование)=1 Тогда
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта=ДокОснование.Валюта;
		Дата_Курса=ДокОснование.Дата_Курса;
		Курс=ДокОснование.Курс;
	КонецЕсли;
	глЗаполнитьШапкуНаОсн(Контекст,ДокОснование);
	ВидОперации = 1;
КонецПроцедуры

// ===============================
Процедура УстДоступностьКнопок()
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кнЗаполнить.Доступность(0);
		Если РежимПроведения = 0 Тогда
			Форма.кнПровести.Доступность(0);    
		КонецЕсли;
		Форма.кнПредварительно.Доступность(0);
		Форма.кнОК.Доступность(0);
		Форма.кнОснование.Доступность(0);
		Форма.кнВалюта.Доступность(0);
	Иначе
		Форма.КнопкаПоУмолчанию("кнОК");
	КонецЕсли;
КонецПроцедуры
                                               
// ===============================
Процедура ПровестиДокумент()
	Если глМожноЗаписатьДокумент(Контекст)=0 Тогда
		Возврат;
	КонецЕсли;
	Записать();
	Провести();
	Если Проведен() = 1 Тогда
		глПроверкаРазрешенияРедактирования(Контекст);
		УстДоступностьКнопок();
	КонецЕсли;
КонецПроцедуры                      

// ===============================
Процедура ЧастичноПровести()
	фМожноПроводить = 1;
	Если Проведен()=1 Тогда
		Если РежимПроведения=0 Тогда
			фМожноПроводить = 0;
			Предупреждение("Документ "+ПредставлениеВида()+" № "+СокрЛП(НомерДок)+" от "+Формат(ДатаДок,"ДДММГГГГ")+
			               " полностью проведен. Предварительное проведение невозможно.");
		КонецЕсли;
	ИначеЕсли ДатаДок<ПолучитьДатуТА() Тогда
		фМожноПроводить = 0;
		Предупреждение("Предварительное проведение задним числом невозможно.");
	ИначеЕсли ДатаДок<>РабочаяДата() Тогда
		фМожноПроводить = 0;
		Предупреждение("Дата документа "+ПредставлениеВида()+" № "+СокрЛП(НомерДок)+" от "+Формат(ДатаДок,"ДДММГГГГ")+
		               " отличается от рабочей даты ("+Формат(РабочаяДата(),"ДДММГГГГ")+"). Предварительное проведение невозможно.");
	КонецЕсли;
				
	Если фМожноПроводить = 1 Тогда
		Провести(3,1);
		ЗаголовокФормы();          
		Если Проведен() = 1 Тогда
			глПроверкаРазрешенияРедактирования(Контекст);
			УстДоступностьКнопок();
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры
                             
// ===============================
Процедура ВыборФирмы()
	// по кнопке редактирования параметров фирмы в докумнете
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ИнформацияОфирме", КонтекстДокумента);
КонецПроцедуры	
                          
// ===============================
Процедура ВыборОплаты()
	// Процедура по кнопке редактирования параметров оплаты в докумнете
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ИнформацияОценах", КонтекстДокумента);
	ОбновитьНадписи();
КонецПроцедуры	

// ===============================
Процедура ВыборОснования()
	// Процедура по кнопке редактирования основания в докумнете
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ДокОснование=ДокументОснование;
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", КонтекстДокумента);
	Если (ДокОснование<>ДокументОснование) И (ПустоеЗначение(ДокументОснование)=0) Тогда
		УдалитьСтроки();
		ЗаполнениеШапкиНаОсновании(ДокументОснование);
		глСкопироватьТовСостав(Контекст,ДокументОснование);
	КонецЕсли;
	ОбновитьНадписи();
	глУстДостСумм(Контекст);
КонецПроцедуры	

// ===============================
Процедура ВыборПредпочтения()
	
	спОтбор = СоздатьОбъект("СписокЗначений");
	
	спСтатусы=СоздатьОбъект("СписокЗначений");
	спСтатусы.ДобавитьЗначение(РозницаКупленный);
	спСтатусы.ДобавитьЗначение(РозницаПринятый);
	спСтатусы.ДобавитьЗначение(РозницаПринятыйБезПраваПередачи);	
	спОтбор.Установить("Статус",спСтатусы);
	
	спОтбор.Установить("Контекст",глВзятьКонтекст(Контекст));  
	
	ОткрытьФормуМодально("Справочник.Контрагенты.ВыборПредпочтения", спОтбор);
КонецПроцедуры

// ===============================
Процедура ИзмДатаДок()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
	ОбновитьНадписи();
КонецПроцедуры

// ===============================
Процедура Сдача()
	ВыданаСдача=Получено-Итог("СуммаСНДС")+СуммаСкидки;
	ВыданаСдача=Макс(0,ВыданаСдача);
КонецПроцедуры

// ===============================
Процедура ОбработкаПодбора(Выб)
	глПриОбработкеПодбора(Выб,Контекст);
КонецПроцедуры
                                     

// ===============================
Процедура ВводНового(Скопирован)

	глЗаполнитьШапку(Контекст);
	
	Если Скопирован=1 Тогда	//копирование документа
		ЧекПробит=0;
		Возврат;
	КонецЕсли;
	
	Если Форма.Параметр = "Возврат" Тогда
	    ВидОперации = 1;
	Иначе
		ВидОперации = 0;
	КонецЕсли;
	
	ДатаДок=РабочаяДата();
	Валюта=Гривня;
	Дата_Курса=ДатаДок;
	Курс=глКурсДляВалюты(Валюта,Дата_Курса);
	

	спЭККА = глЗаполнитьСпЭККА("Чек");
    
	Если спЭККА.РазмерСписка() > 1 тогда
		Стр = "";
		ЭККА = спЭККА.ПолучитьЗначение(1,Стр);	
		Если ЭККА = ПолучитьПустоеЗначение("Справочник.ЭККА") тогда
			ЭККА = спЭККА.ПолучитьЗначение(2,Стр);	
		КонецЕсли;	
	ИначеЕсли спЭККА.РазмерСписка() = 1 тогда
		ЭККА = спЭККА.ПолучитьЗначение(1,Стр);	
	КонецЕсли;

	Если ЭККА.Выбран()=1 Тогда
		Если (ЭККА.РежимРаботы = Перечисление.РежимыРаботыЭККА.Регистрация) или
			(ЭККА.РежимРаботы = Перечисление.РежимыРаботыЭККА.Автономный) Тогда
			Склад = ЭККА.Магазин;    
		КонецЕсли;
	КонецЕсли;

	Касса = глНайтиКассу(Фирма,Валюта);
	
	ЧекПробит=0;
	
КонецПроцедуры

// ===============================
Процедура ВводНаОсновании(ДокОснование)  
	
	СинонимДокумента	= ПредставлениеВида();
	СинонимОснования	= ДокОснование.ПредставлениеВида();

	Список = глПолучитьСписокВводимыхНаОсновании(ДокОснование);
	Поз = Список.НайтиЗначение(Вид());
	
	Если Поз=0 Тогда
		СтатусВозврата(0);
		Предупреждение("Документ """+СинонимДокумента+""" нельзя вводить на основании """+СинонимОснования+"""");
		Возврат;
	КонецЕсли;
        
	Автор=глПользователь;
	
	ВидОперации = 1;
	ЭККА = ДокОснование.ЭККА;
	
	Получено = ДокОснование.Получено;
	ВыданаСдача = ДокОснование.ВыданаСдача;
	Касса = ДокОснование.Касса;
	
	ЗаполнениеШапкиНаОсновании(ДокОснование);
	глСкопироватьТовСостав(Контекст,ДокОснование);
	                   	
	ЧекПробит=0;   
	
	Если Константа.НачальноеЗаполнение = Да тогда	
		// если это возврат, проверяем сколько уже возвращено 
		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 цикл
			Если Товар.ВидТовара = Перечисление.ВидыТоваров.Услуга Тогда
				Продолжить;
			КонецЕсли;
			Фрм = ?(ТипУчета = Упр,глПустаяФирма,Фирма);
			КвоВозвр = Регистр.ВозвратыПартий.СводныйОстаток(ДокументОснование,Фрм,Товар,,,,,,"ОстатокТовара"); 
			Если КвоВозвр/Коэффициент = 0 Тогда
				Продолжить;
			Иначе	
				Количество = Количество+КвоВозвр/Коэффициент; 
			КонецЕсли;		
			глВыч_суммы_накл(Контекст);
		КонецЦикла;	
		// удаляем сторки с количеством 0
		ТаблЧ = СоздатьОбъект("ТаблицаЗначений");
		ВыгрузитьТабличнуюЧасть(ТаблЧ);
		КСтр = ТаблЧ.КоличествоСтрок();
		Пока КСтр <> 0 цикл
			ТаблЧ.ПолучитьСтрокуПоНомеру(КСтр);				
			Если (ТаблЧ.Количество = 0) И (ТаблЧ.Товар.ВидТовара <> Перечисление.ВидыТоваров.Услуга) Тогда
				ТаблЧ.УдалитьСтроку();
				КСтр = ТаблЧ.КоличествоСтрок();
			Иначе
				КСтр = КСтр-1;
			КонецЕсли;	  
		КонецЦикла;	
		ЗагрузитьТабличнуюЧасть(ТаблЧ);
		Если КоличествоСтрок() = 0 тогда
			глТрассировка("При начальном заполнении на основании "+ДокументОснование+", табличная часть пустая.",0);
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры
                                   
// ===============================
Процедура ПриОткрытии()

	НачальнаяДатаДокумента = ДатаДок;

	глПроверкаРазрешенияРедактирования(Контекст);
	
	УстДоступностьКнопок();
	
	КатегорияЦен = Константа.РозничнаяКатегорияЦен;
	
	ОбновитьНадписи();
	СтараяДата = ДатаДок;
	
	глУстДостСумм(Контекст);
КонецПроцедуры

// ===============================
Процедура ПриВводеСтроки()
	Сдача();
КонецПроцедуры

// ===============================
Процедура ПриРедактированииНовойСтроки()
	Сдача();
	Если ПустоеЗначение(Предпочтение)=1 Тогда
		Форма.Предпочтение.НазначитьТип("Справочник.Контрагенты");
		Предпочтение=ПустоеЗначение("Справочник.Контрагенты");
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ПриНачалеРедактированияСтроки()
	Сдача();
	Если ПустоеЗначение(Предпочтение)=1 Тогда
		Форма.Предпочтение.НазначитьТип("Справочник.Контрагенты");
		Предпочтение=ПустоеЗначение("Справочник.Контрагенты");
	КонецЕсли;	
КонецПроцедуры

// ===============================
Процедура ПриУдаленииСтроки()
	Сдача();
КонецПроцедуры        

// ===============================
Процедура ВыборКассы()
	спКассы = глЗаполнитьСпКассы(Фирма,Валюта);
	спКассы.ВыбратьЗначение(Касса,,,,2);
КонецПроцедуры
                          
// ===============================
Процедура ВыборЭККА()
	спЭККА = глЗаполнитьСпЭККА("Чек");
	спЭККА.ВыбратьЗначение(ЭККА,,,,2);
КонецПроцедуры

// ===============================
Процедура ПриНачалеВыбораЗначения(Рекв,Флаг)
	Флаг=0;
	Если (Рекв="Фирма") или (Рекв="Склад") Тогда
		ВыборФирмы();
	ИначеЕсли Рекв="Предпочтение" Тогда
	    ВыборПредпочтения();
	ИначеЕсли Рекв="Касса" Тогда
		ВыборКассы();	
	ИначеЕсли Рекв="ЭККА" Тогда
		ВыборЭККА();
	Иначе
		Флаг=1;
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура ОбработкаВнешнегоСобытия(Источник,Событие,Данные)
	// Процедура разбирает штрих-код, считанный сканером
	// и заполняет строки накладной
	Перем Упаковка,ТекКоличество;

	Если РаботаСоСканеромШтрихКода<>2 Тогда
		Возврат;
	КонецЕсли;
	
	ТекКоличество=0;
	Упаковка=0;
	Если Событие="BarCodeValue"	Тогда
		СканерШтрихКода.ПосылкаДанных = 1;
        Если Форма.ТолькоПросмотр() = 1 Тогда
        	// форма открыта только для просмотра
			Возврат;
        КонецЕсли;
		// Определение типа штрих-кода
		Если ШтрихКодИмеетПрефикс=1 Тогда
			Если Найти("MPJS",Лев(Данные,1))<>0 Тогда
				// Штрих-код определяет товар
				Данные=Сред(Данные,2,СтрДлина(Данные)-1);
			Иначе
				Сообщить("Формат считанного штрих-кода не предназначен для товаров");
			КонецЕсли;
		КонецЕсли;
		Тов=СоздатьОбъект("Справочник.Номенклатура");
		Упак=СоздатьОбъект("Справочник.Единицы");

		Лев2 = Лев(Данные,2);
		//Если Лев2 = "22" Тогда
		//	// Используется свой внутренний штрих-код товара
		//	// Штрих-код построен по коду товара и весу
		//	Если Тов.НайтиПоКоду(Сред(Данные,3,5))=0 Тогда
		//		Сообщить("Товар с кодом "+Сред(Данные,3,5)+" не найден");
		//		Возврат;
		//	КонецЕсли;
		//	ТекКоличество=Число(Сред(Данные,8,5))/1000;
		//	Упаковка = Тов.ЕдиницаПоУмолчанию;
		//Иначе
			// Используется основной штрих-код товара
			// или свой внутренний штрих-код товара с префиксом "20,21"
			Если Упак.НайтиПоРеквизиту("ШтрихКод",Данные,1)=0 Тогда
				Сообщить("Товар со штрих кодом "+Данные+" не найден");
				Возврат;
			КонецЕсли;
			Упаковка=Упак.ТекущийЭлемент();
			Тов=Упаковка.Владелец;
		//КонецЕсли;

		// добавим товар
		ВыбратьСтроки();
		ФлагПоиска = 0;
		Пока ПолучитьСтроку() > 0  Цикл
			Если Товар=Тов.ТекущийЭлемент() Тогда
				ФлагПоиска=1;
				Прервать;
			КонецЕсли;
		КонецЦикла;

		Если ФлагПоиска=0 Тогда
			// товар вносим первый раз
			НоваяСтрока();
			Товар=Тов.ТекущийЭлемент();
			ЦенаТовара = глВернутьЦену(Товар, Константа.РозничнаяКатегорияЦен);
			Если ПустоеЗначение(ЦенаТовара) = 1 Тогда
				// у товара отсутствует розничная цена
				Сообщить("У товара "+Товар.Наименование+" отсутствует "+Константа.РозничнаяКатегорияЦен+" цена");
				Возврат;
			КонецЕсли;
			ЦенаТовара.ИспользоватьДату(ДатаДок);
			ВалютаЦены=ЦенаТовара.Валюта;
			ВремЦена = ЦенаТовара.Цена;
			Единица=Упаковка;
			Если Упаковка <> ЦенаТовара.Единица Тогда
				// есть цена за другую единицу измерения. Нужно пересчитать цену
				ВремЦена = ВремЦена * Упаковка.Коэффициент / ЦенаТовара.Единица.Коэффициент;
			КонецЕсли;
			ВремЦена = глПересчет(ВремЦена,ВалютаЦены,Дата_курса,Гривня,Курс);
			// цены всегда гривневые,  нужно округлить
			ВремЦена=Окр(ВремЦена,Константа.КоэффОкрГрнЦены,1);
			ЦенаСНДС = ВремЦена;
			Количество=?(ПустоеЗначение(ТекКоличество)=1,1,ТекКоличество);
			Коэффициент=Упаковка.Коэффициент;
			глВыч_суммы_накл(Контекст,1);
		Иначе
			// товар уже есть в документе. Увеличиваем количество
			ПромКоличество=?(ПустоеЗначение(ТекКоличество)=1,1,ТекКоличество);
			Если ПустоеЗначение(Упаковка)=0 Тогда
				ПромКоэффициент=Упаковка.Коэффициент;
			Иначе
				ПромКоэффициент=1;
			КонецЕсли;
			Количество=(Единица.Коэффициент*Количество+ПромКоличество*ПромКоэффициент);
			глВыч_суммы_накл(Контекст);
		КонецЕсли;
		
	КонецЕсли;
	АктивизироватьСтроку();
КонецПроцедуры

// ===============================
Процедура ПриЗаписи()
	Если глМожноЗаписатьДокумент(Контекст)=0 Тогда
		СтатусВозврата(0);                        
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
КонецПроцедуры                              

Форма.Товар.ВыполнятьФормулуТолькоПриИзменении(1);

// ===============================
//Инициализирум список действий по кнопке "Действия"
Если ЧекПробит=0 Тогда
	СписокДействий = глПолучитьСписокДействий("
		|ТоварныйСостав,
		|ДвиженияДокумента,
		|ОткрытьВЖурнале,
		|ИзмКомментария");
Иначе
	СписокДействий = глПолучитьСписокДействий("
		|ДвиженияДокумента,
		|ОткрытьВЖурнале");
КонецЕсли;
