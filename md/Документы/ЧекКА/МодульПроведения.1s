Перем спФирмы;                              
Перем НомерПоследнейСтроки;
// ===============================
Функция ПроверкаШапки()
	глВсеВыбрано = 1;
	глВыбранЛи(Фирма,"Фирма");  
	глВыбранЛи(Склад,"Склад");		
	Если Склад.ВидСклада <> Перечисление.ВидыСкладов.Розничный Тогда
	    глТрассировка("Выберите розничный склад !");
		глВсеВыбрано = 0;
	КонецЕсли; 
	глВыбранЛи(Валюта,"Валюта");
	глВыбранЛи(ЭККА,"ЭККА");
	глВыбранЛи(Касса,"Касса");
	Возврат глВсеВыбрано;
КонецФункции

// ===============================
Функция ПроверкаСтроки()
	глВсеВыбрано = 1;
	глВыбранЛи(Товар,"Товар",НомерСтроки);
	глВыбранЛи(Единица,"Единица",НомерСтроки);
	Возврат глВсеВыбрано;
КонецФункции

// ===============================
Процедура ДвиженияДеньги()
		
	Для Инд=1 по спФирмы.РазмерСписка() Цикл
		текФирма = спФирмы.ПолучитьЗначение(Инд);
		
		Регистр.Деньги.Фирма = текФирма;
		Регистр.Деньги.Валюта = Валюта;
		
		Если ПустоеЗначение(текФирма)=0 Тогда
			Регистр.Деньги.Счет = Касса;
		Иначе	
			Регистр.Деньги.Счет = 0;
		КонецЕсли;
		
		Регистр.Деньги.БезНал = 0; // Наличные
		
		Если ВидОперации = 1 Тогда // Возврат
			Регистр.Деньги.Сумма = - (Итог("СуммаСНДС") - СуммаСкидки);
		Иначе 
			Регистр.Деньги.Сумма = (Итог("СуммаСНДС") - СуммаСкидки);
		КонецЕсли;
		Регистр.Деньги.ДвижениеПриходВыполнить();
	КонецЦикла;
	
КонецПроцедуры        

// ===============================
Процедура ДвиженияОстатки()
	
	ФлагПрихода = ВидОперации;
	ФлагВозврата = ВидОперации;
	
	глИзменитьОстатки(Контекст, спФирмы, Склад, ФлагВозврата, ФлагПрихода);
	
КонецПроцедуры
                               
// ===============================
Процедура ДвиженияРеализация(ФлагВозврата,текФирма,тбРеализация)

	//Вычислим ставку вознаграждения тбРеализация по каждому договору в разрезе СтавкаНДС
	Если ФлагВозврата = 1 Тогда
		ДокументОснованиеРеализация = ДокументОснование;
	Иначе
		ДокументОснованиеРеализация = ТекущийДокумент();
	КонецЕсли;
	
	глЗаполнитьСтавкиВознаграждения(Контекст, текФирма,ДокументОснованиеРеализация, тбРеализация);
	
	ФлагОтгрузки = 1;
	ЗнакОплаты = +1;
	
	спДоговора = СоздатьОбъект("СписокЗначений");
	спКонтрагенты = СоздатьОбъект("СписокЗначений");   
	
	//составляем список договоров и дополнений,
	тбРеализация.ВыбратьСтроки();
	Пока тбРеализация.ПолучитьСтроку()=1 Цикл
		Если спДоговора.Принадлежит(тбРеализация.ДоговорКомм)=0 Тогда
			Дог = тбРеализация.ДоговорКомм;
			спДоговора.ДобавитьЗначение(Дог);
			спДоговора.ДобавитьЗначение(глПолучитьДополнениеДоговора(Дог,Перечисление.ВидыДополненийДоговоров.Консигнация, ДокументОснованиеРеализация.ДатаДок));
			//список контрагентов
			Если спКонтрагенты.Принадлежит(Дог.Контрагент)=0 Тогда
				спКонтрагенты.ДобавитьЗначение(Дог.Контрагент);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ВремРегРеализация = СоздатьОбъект("Регистры");
	
	глРассчитатьИтогиВзаиморасчетов(Контекст, ВремРегРеализация, текФирма, ЗнакОплаты, спКонтрагенты, спДоговора);
	тбДолги = глПолучитьИтогиВзаиморасчетов(Контекст, ВремРегРеализация, текФирма, ЗнакОплаты, спКонтрагенты, спДоговора);
	
	тбСуммыПогашения = СоздатьОбъект("ТаблицаЗначений");
	тбСуммыПогашения.НоваяКолонка("СтавкаНДС");
	тбСуммыПогашения.НоваяКолонка("СтавкаВознаграждения");
	тбСуммыПогашения.НоваяКолонка("СуммаСНДС");
	
	// Мы должны поставщикам 
	стДоговор = 0;				
	тбРеализация.ВыбратьСтроки();
	Пока тбРеализация.ПолучитьСтроку()=1 Цикл
		Если стДоговор <> тбРеализация.ДоговорКомм Тогда
			Если ПустоеЗначение(стДоговор)=0 Тогда
				глПровестиПоВзаиморасчетам(Контекст,  ФлагОтгрузки, ЗнакОплаты, ФлагВозврата, 
				текФирма, тбДолги, тбСуммыПогашения, стДоговор.Контрагент, стДоговор, Перечисление.ВидыТорговли.Консигнация,ДокументОснованиеРеализация);
			КонецЕсли;
			стДоговор=тбРеализация.ДоговорКомм;
			тбСуммыПогашения.УдалитьСтроки();
		КонецЕсли;
		тбСуммыПогашения.НоваяСтрока();
		Вознаграждение = тбРеализация.СуммаСНДС*(1 - тбРеализация.СтавкаВознаграждения/100);
		Если ПустоеЗначение(текФирма)=0 Тогда
			тбСуммыПогашения.СтавкаНДС = тбРеализация.СтавкаНДС;
			ВВ = Гривня;
		Иначе
			ВВ = глВалютаВзаиморасчетов(стДоговор.Контрагент);
		КонецЕсли;
		тбСуммыПогашения.СуммаСНДС = глПодготовитьСумму(Вознаграждение,Валюта,Курс,ВВ,Дата_Курса);
		тбСуммыПогашения.СтавкаВознаграждения = тбРеализация.СтавкаВознаграждения;
	КонецЦикла;
	Если ПустоеЗначение(стДоговор)=0 Тогда
		глПровестиПоВзаиморасчетам(Контекст,  ФлагОтгрузки, ЗнакОплаты, ФлагВозврата, 
		текФирма, тбДолги, тбСуммыПогашения, стДоговор.Контрагент, стДоговор, Перечисление.ВидыТорговли.Консигнация, ДокументОснованиеРеализация);
	КонецЕсли;          
	
	ФлагОтгрузки = 0;
	ЗнакОплаты = -1;
	
	глРассчитатьИтогиВзаиморасчетов(Контекст, ВремРегРеализация, текФирма, ЗнакОплаты, спКонтрагенты, спДоговора);				
	тбДолги = глПолучитьИтогиВзаиморасчетов(Контекст, ВремРегРеализация, текФирма, ЗнакОплаты, спКонтрагенты, спДоговора);
	
	// Поставщики должны нам вознаграждение
	стДоговор = 0;							
	тбРеализация.ВыбратьСтроки();
	тбСуммыПогашения.УдалитьСтроки();
	Пока тбРеализация.ПолучитьСтроку()=1 Цикл
		Если стДоговор <> тбРеализация.ДоговорКомм Тогда
			Если ПустоеЗначение(стДоговор)=0 Тогда		
				ДоговорВознаграждения = глПолучитьДополнениеДоговора(стДоговор, Перечисление.ВидыДополненийДоговоров.Консигнация, ДокументОснованиеРеализация.ДатаДок);
				глПровестиПоВзаиморасчетам(Контекст,  ФлагОтгрузки, ЗнакОплаты, ФлагВозврата, 
					текФирма, тбДолги, тбСуммыПогашения, стДоговор.Контрагент, ДоговорВознаграждения, Перечисление.ВидыТорговли.Консигнация,ДокументОснованиеРеализация);
			КонецЕсли;
			стДоговор=тбРеализация.ДоговорКомм;
			тбСуммыПогашения.УдалитьСтроки();
		КонецЕсли;
		тбСуммыПогашения.НоваяСтрока();
		Вознаграждение = тбРеализация.СуммаСНДС*тбРеализация.СтавкаВознаграждения/100;
		Если ПустоеЗначение(текФирма)=0 Тогда
			тбСуммыПогашения.СтавкаНДС = тбРеализация.СтавкаНДС;
			ВВ = Гривня;
		Иначе
			ВВ = глВалютаВзаиморасчетов(стДоговор.Контрагент);
		КонецЕсли;
		тбСуммыПогашения.СуммаСНДС = глПодготовитьСумму(Вознаграждение,Валюта,Курс,ВВ,Дата_Курса);
		тбСуммыПогашения.СтавкаВознаграждения = 0;
	КонецЦикла;
	Если ПустоеЗначение(стДоговор)=0 Тогда
		ДоговорВознаграждения = глПолучитьДополнениеДоговора(стДоговор, Перечисление.ВидыДополненийДоговоров.Консигнация, ДокументОснованиеРеализация.ДатаДок);
		глПровестиПоВзаиморасчетам(Контекст,  ФлагОтгрузки, ЗнакОплаты, ФлагВозврата, 
			текФирма, тбДолги, тбСуммыПогашения, стДоговор.Контрагент, ДоговорВознаграждения, Перечисление.ВидыТорговли.Консигнация,ДокументОснованиеРеализация);
	КонецЕсли;          
	
КонецПроцедуры

// ===============================
Процедура ДвиженияПартии() 

	спОтбор = СоздатьОбъект("СписокЗначений");
	спСтатус = СоздатьОбъект("СписокЗначений");
	
	Если ВидОперации = 0 Тогда
		ФлагВозврата = 0;	
	Иначе
		ФлагВозврата = 1;
		Если ПустоеЗначение(ДокументОснование)=0 Тогда
			спОтбор.Установить("ТекущийДокумент",ДокументОснование);
		Иначе
			спОтбор.Установить("ТекущийДокумент",ТекущийДокумент());
		КонецЕсли;
	КонецЕсли;
	
	спСтатус.ДобавитьЗначение(РозницаКупленный);
	спСтатус.ДобавитьЗначение(РозницаПринятый);
	спСтатус.ДобавитьЗначение(РозницаПринятыйБезПраваПередачи);
	спОтбор.Установить("Статус", спСтатус);
	
	ВремРегПартии = СоздатьОбъект("Регистры");
	глРассчитатьОстаткиПартий(Контекст, ВремРегПартии, спФирмы, ФлагВозврата, спОтбор);
	
	тбРеализация = СоздатьОбъект("ТаблицаЗначений");
	тбРеализация.НоваяКолонка("ДоговорКомм");
	тбРеализация.НоваяКолонка("СтавкаНДС");
	тбРеализация.НоваяКолонка("СуммаСНДС","Число",19,5);

	Для Инд=1 по спФирмы.РазмерСписка() Цикл
		текФирма = спФирмы.ПолучитьЗначение(Инд);
		
		Если ПустоеЗначение(текФирма)=1 Тогда
			МетодРасчетаСебестоимости = Константа.МетодРасчетаСебестоимостиУправленческогоУчета;
		Иначе
			текФирма.ИспользоватьДату(ДатаДок);
			МетодРасчетаСебестоимости = текФирма.МетодРасчетаСебестоимостиФинансовогоУчета;
		КонецЕсли;                  
		
		тбРеализация.УдалитьСтроки();
		
		Предпочтение = 0;
		тбПартии = 0;
		тбОстатки = 0;
		ИнвСтартегияПредпочтения  = ФлагВозврата;
		ИнвСтратегияПродажи = ФлагВозврата;
		
		глСформироватьТаблицуПартий(Контекст, ВремРегПартии,текФирма, ФлагВозврата, спОтбор, Предпочтение, 
			тбПартии, тбОстатки, ИнвСтартегияПредпочтения, ИнвСтратегияПродажи);
        
		ОсталосьСкидки = СуммаСкидки;  
		ПроцентСкидки = СуммаСкидки/Итог("СуммаСНДС");
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл
			
			Если ПустоеЗначение(текФирма)=1 Тогда
				ВУ = Товар.ВалютаУчета;
			Иначе	
				ВУ = Гривня;
			КонецЕсли;
			
			ПроцНДС = глПроцентНДС(Товар.СтавкаНДС.Получить(ДатаДок));
			КоэфНДС =  ПроцНДС / (100 + ПроцНДС);
			
			ВсегоСписать = Количество * Коэффициент;			
			ОсталосьСписать = ВсегоСписать;
			
			Если НомерСтроки = НомерПоследнейСтроки Тогда
				ВсегоСуммаСНДС =  СуммаСНДС - ОсталосьСкидки;
			Иначе
				ВсегоСуммаСНДС =  СуммаСНДС - СуммаСНДС * ПроцентСкидки;
				ОсталосьСкидки = ОсталосьСкидки - СуммаСНДС * ПроцентСкидки;
			КонецЕсли;
			               
			ВсегоСуммаСНДС = глПересчет(ВсегоСуммаСНДС,Валюта,Курс,ВУ,Дата_курса);
			ВсегоСуммаНДС =  ВсегоСуммаСНДС * КоэфНДС;
			
			ОсталосьСуммаСНДС = ВсегоСуммаСНДС;
			ОсталосьСуммаНДС = ВсегоСуммаНДС;     

			Если Товар.ВидТовара = Перечисление.ВидыТоваров.Услуга Тогда
				Если ФлагВозврата = 0 Тогда
					КодОперации = ПродажаУслуги;                        
				Иначе
					КодОперации = СторноПокупкаУслуги;
				КонецЕсли;
				
				СписываемыйОборот = ОсталосьСуммаСНДС;
				СписываемыйНДСРасхода = ОсталосьСуммаНДС;
				
				глПровестиПартию(Контекст, 0, ФлагВозврата, текФирма, Товар, Услуга,
					0,0, ТекущийДокумент(), ТекущийДокумент(), ОсталосьСписать, ОсталосьСуммаСНДС - ОсталосьСуммаНДС, 
					0, ОсталосьСуммаНДС,  СписываемыйОборот,СписываемыйНДСРасхода,КодОперации, 0, СписываемыйОборот);
				
				Продолжить;
			КонецЕсли;
			
			НС=0;
			Если ?(ФлагВозврата=0,тбПартии.НайтиЗначение(НомерСтроки,НС,"НомерСтрокиДокумента"),тбПартии.НайтиЗначение(Товар,НС,"Товар"))=1 Тогда
				тбПартии.ПолучитьСтрокуПоНомеру(НС);
			Иначе
				тбПартии.ВыбратьСтроки();
				тбПартии.ПолучитьСтроку();
			КонецЕсли;
			
			Пока ?(ФлагВозврата=0,тбПартии.НомерСтрокиДокумента,тбПартии.Товар) = ?(ФлагВозврата=0,НомерСтроки,Товар) Цикл
				
				КонтрагентП = тбПартии.Контрагент;
				ПоставщикП = тбПартии.Поставщик;
				ПоставкаП = тбПартии.Поставка;
				ПрихДокументП = тбПартии.ПрихДокумент;
				СтатусП = тбПартии.Статус;
				
				НС =0;
				Если тбОстатки.НайтиЗначение(глПолучитьКлючТбОстатков(ПрихДокументП,ПоставкаП,Товар.Код),НС,"Ключ")=1 Тогда
					
					тбОстатки.ПолучитьСтрокуПоНомеру(НС);
					
					ОстатокТовара = тбОстатки.ОстатокТовара;
					
					Если ОстатокТовара = 0 Тогда
						Если тбПартии.ПолучитьСтроку()=0 Тогда
							Прервать;
						КонецЕсли;
						Продолжить;
					КонецЕсли;
					
					
					СписываемыйОстатокТовара = Мин(ОсталосьСписать, ОстатокТовара);
					
					КоэфСписания = СписываемыйОстатокТовара / ОстатокТовара;
					КоэфРеализации = СписываемыйОстатокТовара / ВсегоСписать;
					
					СписываемаяСтоимость = тбОстатки.Стоимость * КоэфСписания;
					СписываемаяПродСтоимость = тбОстатки.ПродСтоимость * КоэфСписания;
					СписываемыйНДС = тбОстатки.НДС * КоэфСписания;
					                  
					Если ФлагВозврата = 0 Тогда
						Если СписываемыйОстатокТовара = ОсталосьСписать Тогда
							СписываемыйОборот = ОсталосьСуммаСНДС;
							СписываемыйНДСРасхода = ОсталосьСуммаНДС;
						Иначе
							СписываемыйОборот = ВсегоСуммаСНДС * КоэфРеализации;
							СписываемыйНДСРасхода = ВсегоСуммаНДС * КоэфРеализации;
						КонецЕсли;
						
						Если СтатусП = РозницаКупленный Тогда
							КодОперации = РозничнаяПродажаКупленногоТовара;
						Иначе
							КодОперации = РозничнаяПродажаПринятогоТовара;
						КонецЕсли;
						
                        СписываемаяПрибыль = глРассчитатьПрибыль(Контекст,текФирма,СтатусП,ПоставкаП,ПрихДокументП,СписываемаяСтоимость,СписываемыйНДС,СписываемаяПродСтоимость,СписываемыйОборот,СписываемыйНДСРасхода);

						ОсталосьСуммаНДС = ОсталосьСуммаНДС - СписываемыйНДСРасхода;
						ОсталосьСуммаСНДС = ОсталосьСуммаСНДС - СписываемыйОборот;						
					Иначе
						СписываемыйОборот = тбОстатки.Оборот * КоэфСписания;
						СписываемыйНДСРасхода = тбОстатки.НДСРасхода * КоэфСписания;
						
						СписываемаяПрибыль = тбОстатки.Прибыль * КоэфСписания;
						
						Если СтатусП = РозницаКупленный Тогда
							КодОперации = РозничнаяПродажаКупленногоТовара;
						Иначе
							КодОперации = РозничнаяПродажаПринятогоТовара;
						КонецЕсли;
						
					КонецЕсли;
					
					// в валюте документа
					СуммаРеализации = глПересчет(СписываемыйОборот,ВУ,Дата_курса,Валюта,Курс);
					                     
					глПровестиПартию(Контекст, ФлагВозврата, ФлагВозврата, текФирма, Товар, СтатусП, КонтрагентП, ПоставщикП, 
						ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
						СписываемыйНДС, СписываемыйОборот, СписываемыйНДСРасхода, КодОперации,ДокументОснование, СписываемаяПрибыль);
						
					глУчестьСписание(тбОстатки,СписываемыйОстатокТовара,СписываемаяСтоимость,СписываемаяПродСтоимость,СписываемыйНДС,СписываемыйОборот,СписываемыйНДСРасхода, СписываемаяПрибыль);
					
					Если (СтатусП = РозницаПринятый) или (СтатусП = РозницаПринятыйБезПраваПередачи) Тогда
						тбРеализация.НоваяСтрока();
						тбРеализация.ДоговорКомм = ПоставкаП.Договор;
						тбРеализация.СтавкаНДС = Товар.СтавкаНДС.Получить(ДатаДок);
						тбРеализация.СуммаСНДС = СуммаРеализации;
					КонецЕсли;
					
					ОсталосьСписать = ОсталосьСписать - СписываемыйОстатокТовара;
				КонецЕсли;
				
				Если ОсталосьСписать = 0 Тогда
					Прервать;
				КонецЕсли;   
				
				Если тбПартии.ПолучитьСтроку()=0 Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла; 
			
			Если ОсталосьСписать > 0 Тогда
				глСообщитьОбОтсутствииПартии(Контекст,ФлагВозврата, текФирма, Товар, НомерСтроки);
				//*ralex, 07-04-20 00:34
				//Если Константа.РазрешитьОтрицательныеОстаткиТоваров = Нет Тогда
				// -------- заменено на:
				Если (Константа.РазрешитьОтрицательныеОстаткиТоваров = Нет) и (НазваниеНабораПрав() <> "Администратор") Тогда
				//*/ralex, 07-04-20 00:34
					глНеПроводить(Контекст);
					Возврат;
				Иначе
					СписываемыйОстатокТовара = ОсталосьСписать;
					КоэфСписания = СписываемыйОстатокТовара / ВсегоСписать;
					СписываемаяСтоимость = ВсегоСуммаСНДС * КоэфСписания * (1 - КоэфНДС);
					СписываемаяПродСтоимость = ВсегоСуммаСНДС * КоэфСписания;
					СписываемыйНДС = КоэфНДС * ВсегоСуммаСНДС * КоэфСписания;
					СтатусП = РозницаКупленный;
					
					Если МетодРасчетаСебестоимости = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
						КонтрагентП = 0;
						ПоставщикП = 0;
						ПоставкаП = 0;
						ПрихДокументП = 0;
					Иначе
						КонтрагентП = 0;
						ПоставщикП = 0;
						ПоставкаП = 0;
						ПрихДокументП = ТекущийДокумент();
					КонецЕсли;			
					            
					Если ФлагВозврата=0 Тогда
						СписываемыйОборот = ОсталосьСуммаСНДС;
						СписываемыйНДСРасхода = ОсталосьСуммаНДС;
						
						ОсталосьСуммаНДС = ОсталосьСуммаНДС - СписываемыйНДСРасхода;
						ОсталосьСуммаСНДС = ОсталосьСуммаСНДС - СписываемыйОборот;
						
						КодОперации = РозничнаяПродажаКупленногоТовара;
					Иначе	
						СписываемыйОборот = ВсегоСуммаСНДС * КоэфСписания;
						СписываемыйНДСРасхода = КоэфНДС * ВсегоСуммаСНДС * КоэфСписания;
						
						КодОперации = РозничнаяПродажаКупленногоТовара;
					КонецЕсли;
					                            
					
					глПровестиПартию(Контекст, ФлагВозврата, ФлагВозврата, текФирма, Товар, СтатусП, КонтрагентП, ПоставщикП, 
						ПоставкаП, ПрихДокументП,СписываемыйОстатокТовара, СписываемаяСтоимость, СписываемаяПродСтоимость,
						СписываемыйНДС, СписываемыйОборот, СписываемыйНДСРасхода, КодОперации,ДокументОснование,0);
					
					глСообщитьОСозданииПартии(Товар, СтатусП, СписываемыйОстатокТовара);
				КонецЕсли;
			КонецЕсли; // ОсталосьСписать > 0
		КонецЦикла; // строки документа
		
		// Реализация
		Если тбРеализация.КоличествоСтрок() > 0 Тогда
			ДвиженияРеализация(ФлагВозврата,текФирма,тбРеализация);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

//-------------------------------------
Процедура ОбработкаПроведения(ЧастичноПровести = 0)
	
	Если ДатаДок>РабочаяДата() Тогда
		глНеПроводить(Контекст,"Нельзя проводить документ будущей датой!");
		Возврат;
	КонецЕсли;
	
	Если глПроверкаДублейСтрок(Контекст)=1 Тогда
		глНеПроводить(Контекст,"В документе строки с одинаковым товаром, но разной ценой!");
		Возврат;
	КонецЕсли;
	
	Если ПроверкаШапки() = 0 Тогда
		глНеПроводить(Контекст); 
		Возврат;
	КонецЕсли;                           
	
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ПроверкаСтроки() = 0 Тогда
			глНеПроводить(Контекст); 
			Возврат;
		КонецЕсли;
		НомерПоследнейСтроки = НомерСтроки;	
	КонецЦикла;		                                 
	
	спФирмы = глПолучитьФирмы(Контекст);

	Если спФирмы.РазмерСписка()>0 Тогда
		
		ДвиженияОстатки();
		
		Если ЧастичноПровести = 1 Тогда
			Если РежимПроведения<>1 Тогда
				РежимПроведения=1;
			КонецЕсли;
			Возврат;
		КонецЕсли;
		
		ДвиженияДеньги();
		
		ДвиженияПартии();
		
	КонецЕсли;

	Если (ВидОперации = 0) и (ГрупповаяОбработка()=0) и 
		 (ЧекПробит=0) и (СтатусВозврата()=1) Тогда 
		глПечатьЧека(Контекст);
		Если ЧекПробит=0 Тогда
			глНеПроводить(Контекст);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	           
	РежимПроведения=0;
КонецПроцедуры

//------------------------
Процедура ОбработкаУдаленияПроведения()	
	РежимПроведения=0;
КонецПроцедуры


