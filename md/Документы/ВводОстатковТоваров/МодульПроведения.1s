Перем спФирмы;
// ===============================
Функция ПроверкаШапки()
	глВсеВыбрано = 1;
	Если ТипУчета <> 0 Тогда
		глВыбранЛи(Фирма,"Фирма");  
	КонецЕсли;
	
	//глВыбранЛи(Поставщик,"Поставщик");
	глВыбранЛи(КатегорияЦен,"Категория цен");	
	Если ВидОстатков <> 1 Тогда
		глВыбранЛи(Договор,"Договор");
		Если ВидОстатков = 3 тогда
		    глВыбранЛи(Контрагент,"Контрагент");
			глВыбранЛи(Договор,"Договор");
			Если Договор.Выбран()=1 Тогда
			    Если Договор.ВидТорговли <> Перечисление.ВидыТорговли.Консигнация Тогда
			        глТрассировка("Должен быть выбран договор консигнации.",0);
			    КонецЕсли;
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	глВыбранЛи(Склад,"Склад");		
	Возврат глВсеВыбрано;
КонецФункции

// ===============================
Функция ПроверкаСтроки()
    глВсеВыбрано = 1;
	глВыбранЛи(Товар,"Товар",НомерСтроки);
	Если глВсеВыбрано = 1 Тогда
		Если (Товар.ВидТовара = Перечисление.ВидыТоваров.Услуга) и (Товар.УслугиНаСебестоимость=0) Тогда
			глТрассировка("В документе "+ПредставлениеВида() +" нельзя использовать услуги. Cтрока "+НомерСтроки+".",0);
			глВсеВыбрано = 0;
		КонецЕсли;		
	КонецЕсли;
	глВыбранЛи(Единица,"Единица",НомерСтроки);
	Возврат глВсеВыбрано;
КонецФункции                 

// ===============================
Процедура ДвиженияОстатки()
    
	Если (ВидОстатков = 1) или (ВидОстатков = 2) Тогда
		ФлагПрихода = 1;
		
		ФлагВозврата = 0;
		
		ФлагУчетаОстатков = 0;
		
		глИзменитьОстатки(Контекст, спФирмы, Склад, ФлагВозврата, ФлагПрихода,ФлагУчетаОстатков,,Сорт,Сорт);
	КонецЕсли;
	
КонецПроцедуры

// ===============================
Процедура ДвиженияПартии() 
	
	Для Инд=1 по спФирмы.РазмерСписка() Цикл
		текФирма = спФирмы.ПолучитьЗначение(Инд);
		
		Если ПустоеЗначение(текФирма)=1 Тогда
			МетодРасчетаСебестоимости = Константа.МетодРасчетаСебестоимостиУправленческогоУчета;
		Иначе
			текФирма.ИспользоватьДату(ДатаДок);
			МетодРасчетаСебестоимости = текФирма.МетодРасчетаСебестоимостиФинансовогоУчета;
		КонецЕсли;                  
		
		// Рассчитать сумму услуг в табличной части !! В гривнях !!
		ИСуммаСНДСУслуг = 0;
		ИСуммаБезНДСУслуг = 0;
		ИСуммаСНДСТоваров = 0;
		ИСуммаБезНДСТоваров = 0;
		НомерСтрокиПоследнегоТовара = 1;
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл
			Если ПустоеЗначение(текФирма)=1 Тогда
				ВУ = Товар.ВалютаУчета;
			Иначе
				ВУ = Гривня;
			КонецЕсли;
			Если Товар.УслугиНаСебестоимость = 1 Тогда
				ИСуммаСНДСУслуг = ИСуммаСНДСУслуг + глПересчет(СуммаСНДС,ВУ,ДатаДок,Гривня,ДатаДок);
				ИСуммаБезНДСУслуг = ИСуммаБезНДСУслуг + глПересчет(СуммаБезНДС,ВУ,ДатаДок,Гривня,ДатаДок);
			Иначе
				ИСуммаСНДСТоваров = ИСуммаСНДСТоваров + глПересчет(СуммаСНДС,ВУ,ДатаДок,Гривня,ДатаДок);
				ИСуммаБезНДСТоваров = ИСуммабезНДСТоваров + глПересчет(СуммаБезНДС,ВУ,ДатаДок,Гривня,ДатаДок);
				НомерСтрокиПоследнегоТовара = НомерСтроки;
			КонецЕсли;
		КонецЦикла;
		
		Если (ИСуммаСНДСУслуг = Итог("СуммаСНДС")) и (ИСуммаСНДСУслуг <> 0) Тогда
			глНеПроводить(Контекст,"Отсутствуют товары в табличной части.");
			Возврат;
		КонецЕсли;		
		
		НераспрИСуммаСНДСУслуг = ИСуммаСНДСУслуг;
		НераспрИСуммаБезНДСУслуг = ИСуммаБезНДСУслуг;
		
		Регистр.ПартииТоваров.Фирма = текФирма;
		
		Если Статус = ОтданныйКупленный Тогда
			СтатусП = Купленный;
		Иначе
			СтатусП = Статус;
		КонецЕсли;			
		
		Если МетодРасчетаСебестоимости = Перечисление.МетодыРасчетаСебестоимости.ПоСреднему Тогда
			Регистр.ПартииТоваров.Контрагент = 0;
			Регистр.ПартииТоваров.Поставщик = 0;
			Регистр.ПартииТоваров.Поставка = 0;
			Регистр.ПартииТоваров.ПрихДокумент = 0;
		Иначе
			Регистр.ПартииТоваров.Контрагент = Поставщик;
			Регистр.ПартииТоваров.Поставщик = Поставщик;
			Регистр.ПартииТоваров.Поставка = ТекущийДокумент();
			Регистр.ПартииТоваров.ПрихДокумент = ТекущийДокумент();
		КонецЕсли;
		
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл              
			
			Если Товар.УслугиНаСебестоимость = 1 Тогда
				Продолжить;
			КонецЕсли;
			
			Регистр.ПартииТоваров.ПривязыватьСтроку(НомерСтроки);
			Регистр.ПартииТоваров.Товар = Товар;
			Регистр.ПартииТоваров.ОстатокТовара = Количество * Единица.Коэффициент;
		
			Регистр.ПартииТоваров.Статус = СтатусП;
			
			Если СтатусП = Купленный Тогда
				Регистр.ПартииТоваров.КодОперации = ВводОстатковКупленногоТовара;
			ИначеЕсли (Статус = Принятый) или (Статус = ПринятыйБезПраваПередачи) Тогда
				Регистр.ПартииТоваров.КодОперации = ВводОстатковПринятогоТовара;
			КонецЕсли;
			
			Если НомерСтроки = НомерСтрокиПоследнегоТовара Тогда
				ДопСуммаСНДС = НераспрИСуммаСНДСУслуг;
				ДопСуммаБезНДС = НераспрИСуммаБезНДСУслуг;
			Иначе
				ДопСуммаСНДС = ?(ИСуммаСНДСТоваров=0,СуммаСНДС * ИСуммаСНДСУслуг,СуммаСНДС / ИСуммаСНДСТоваров *  ИСуммаСНДСУслуг);
				НераспрИСуммаСНДСУслуг = НераспрИСуммаСНДСУслуг  - ДопСуммаСНДС;
				ДопСуммаБезНДС = ?(ИСуммаБезНДСТоваров=0,СуммаСНДС * ИСуммаБезНДСУслуг,СуммаСНДС / ИСуммаБезНДСТоваров *  ИСуммаБезНДСУслуг);
				НераспрИСуммаБезНДСУслуг = НераспрИСуммаБезНДСУслуг  - ДопСуммаБезНДС; 
			КонецЕсли;
			
			Если ПустоеЗначение(текФирма)=1 Тогда
				ВУ = Товар.ВалютаУчета;
			Иначе
				ВУ = Гривня;
			КонецЕсли;
			
			Регистр.ПартииТоваров.Стоимость = глПересчет(СуммаБезНДС + ДопСуммаБезНДС,Товар.ВалютаУчета,ДатаДок,ВУ,ДатаДок);
			
			ПродСтоим = 0;			
			Регистр.ПартииТоваров.ПродСтоимость = ПродСтоим;
			
			Регистр.ПартииТоваров.НДС = глПересчет(СуммаСНДС - СуммаБезНДС + ДопСуммаСНДС - ДопСуммаБезНДС,Товар.ВалютаУчета,ДатаДок,ВУ,ДатаДок);
			Регистр.ПартииТоваров.Оборот = 0;
			Регистр.ПартииТоваров.НДСРасхода = 0;
			
			Регистр.ПартииТоваров.ДвижениеПриходВыполнить();
			
			Если ВидОстатков = 3 Тогда // на реализации				
			    Регистр.ПартииТоваров.КодОперации = ПередачаТовараНаРеализацию;
				Регистр.ПартииТоваров.ДвижениеРасходВыполнить();
				
				Регистр.ПартииТоваров.Статус = ОтданныйКупленный;
				Регистр.ПартииТоваров.Контрагент = Контрагент;
				Регистр.ПартииТоваров.ПродСтоимость = глПересчет(СуммаСНДСРеал,Товар.ВалютаУчета,ДатаДок,ВУ,ДатаДок);
				Регистр.ПартииТоваров.ДвижениеПриходВыполнить();
			КонецЕсли;
		КонецЦикла; // строки документа
	КонецЦикла; // Фирмы
КонецПроцедуры

Функция ДвиженияПартииПоставщикаВводНачОстатков() 
	текФирма = ПолучитьПустоеЗначение("Справочник.Фирмы");
	
	спОтбор = СоздатьОбъект("СписокЗначений");
	тбПартии = 0;
	ВремРег = СоздатьОбъект("Регистры");
	спОтбор.ДобавитьЗначение(Склад,"Склад");
	глРассчитатьОстаткиПартийПост(Контекст, ВремРег, спОтбор); 
	глСформироватьТаблицуПартийПоставщика(Контекст, ВремРег,0,спОтбор,тбПартии);
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ПартияПост.Выбран() = 0 Тогда
			Продолжить;
		КонецЕсли;
		НС = 0;
		
		//т.к. создаем документы в базе из которой переносим то тут остатки по партиям пост.будут.
		//Если тбПартии.НайтиЗначение(ПартияПост,НС,"ПартияПост")=1 Тогда
		//	Если (тбПартии.партияПост = ПартияПост) и (тбПартии.ОстатокТовара <> 0) Тогда //в тзПартийпост есть остаток
		//		Сообщить("стр. " + НомерСтроки + "В режиме ввода начальных остатков по партиям поставщика нельзя использовать партии по которым имеется остаток.");
		//		Возврат 0;
		//	КонецЕсли;
		//КонецЕсли;

		ОстатокТовара = Количество * Единица.Коэффициент;
		глПровестиПартиюПост(Контекст,1,0,Товар,ПартияПост,Поставщик,Поставщик,ТекущийДокумент(),ОстатокТовара,,Склад);
	КонецЦикла;	
	Возврат 1;	
КонецФункции

//-------------------------------------
Процедура ОбработкаПроведения()
	//если заполнена фирма и стоит тип учета управленческий то такой документ пропускаем. Его нужно провести только по фин. учету
	//*ralex, 17-04-23 21:37
	//Если (ТипУчета = 0) и (ПустоеЗначение(Фирма) = 0) Тогда
	//	сообщить("НЕ ПРОВЕДЕН док. " + ТекущийДокумент() + " фирма = " + Фирма + ", ТипУчета = " + ?(ТипУчета = 0,"Упр.","Фин."));
	//	Возврат;
	//КонецЕсли;
	// -------- заменено на:
	//Если (ТипУчета = 0) и (ПустоеЗначение(Фирма) = 0) Тогда
	//	сообщить("НЕ ПРОВЕДЕН док. " + ТекущийДокумент() + " фирма = " + Фирма + ", ТипУчета = " + ?(ТипУчета = 0,"Упр.","Фин."));
	//	Возврат;
	//КонецЕсли;
	//*/------------------------
	
	
	Если ДатаДок>РабочаяДата() Тогда
		глНеПроводить(Контекст,"Нельзя проводить документ будущей датой!");
		Возврат;
	КонецЕсли;
	
	Если глПроверкаДублейСтрок(Контекст)=1 Тогда
		глНеПроводить(Контекст,"В документе строки с одинаковым товаром, но разной ценой!");
		Возврат;
	КонецЕсли;

	Если ПроверкаШапки() = 0 Тогда
	    глНеПроводить(Контекст); 
		Возврат;
	КонецЕсли;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ПроверкаСтроки() = 0 Тогда
			глНеПроводить(Контекст); 
			Возврат;
		КонецЕсли;
	КонецЦикла;
    
	спФирмы = глПолучитьФирмы(Контекст);
	                
	Если спФирмы.РазмерСписка()>0 Тогда
		
		ДвиженияОстатки();
		
		ДвиженияПартии();
		
	КонецЕсли; 
	Если ДвиженияПартииПоставщикаВводНачОстатков()  = 0 Тогда
		глНеПроводить(Контекст); 
		Возврат;
	КонецЕсли;

КонецПроцедуры


