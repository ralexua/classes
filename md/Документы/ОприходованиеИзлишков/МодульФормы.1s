//*****************************************************************************
// Описание переменных 
Перем СписокДействий;
Перем СтараяДата;
Перем ВариантыЗаполнения;
Перем НачальнаяДатаДокумента; // Для контроля даты документа

//*****************************************************************************
// "служебные" функции и процедуры 

//*****************************************************************************
Функция ЗаголовокФормы() 
	Перем Заголовок, Название;

	
	Заголовок = "Акт оприходования излишков";
	Название = "Акт оприходования излишков № ";
	
	Заголовок = Заголовок + глЗаголовок(Контекст);
	
    Форма.Заголовок(Заголовок);               
	Возврат Название;
КонецФункции //ЗаголовокФормы

//******************************************************************************
Процедура ОбновитьНадписи()
	// Формируем информационные строки
	Форма.ТекстВалюты.Заголовок(глСтрокаВалюты(Контекст));
	Форма.ТекстОснования.Заголовок(СокрП(Основание));
КонецПроцедуры

//*****************************************************************************
// функции и процедуры, вызываемые из формул элементов диалога

//******************************************************************************
Функция Итого()
	// Показ итоговых сумм по документу
	Перем Результат,СуммаБезНДС, СуммаСНДС, СуммаНДС;
	СуммаБезНДС = Итог("СуммаБезНДС");
	СуммаСНДС = Итог("СуммаСНДС");
	СуммаНДС = СуммаСНДС - СуммаБезНДС;
	Результат = ?(СуммаБезНДС =0,"","Сумма="+ глФРМ(СуммаБезНДС, Валюта, 1))+
	            ?(СуммаНДС = 0,""," НДС=" + глФРМ(СуммаНДС, Валюта, 1));
	Возврат Результат;
КонецФункции

//******************************************************************************
Процедура Печать()
	Таб = СоздатьОбъект("Таблица");  

	ПечФорма = "Таблица";
	Язык = глЯзык(ПечФорма); 	
	Таб.ИсходнаяТаблица(ПечФорма);
	глУстПропись(Валюта,Язык);
	
	Фирма.ИспользоватьДату(ДатаДок,1);
	Таб.ВывестиСекцию("Шапка");
	Ном = 1;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл                
		Таб.ВывестиСекцию("Строка");
		Ном = Ном+1;
	КонецЦикла;
	Таб.ВывестиСекцию("Дно");
	Таб.ТолькоПросмотр(1);
	Таб.Защита(Константа.ФлагЗащитыТаблиц);
	Таб.Опции(0,0,,);
	Таб.Показать("ПЕЧАТЬ: акт оприходования излишков","");
КонецПроцедуры

//******************************************************************************
Процедура ИзмДата()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
	ОбновитьНадписи();
КонецПроцедуры

// ===============================
Процедура Подбор()
	Варианы= СоздатьОбъект("СписокЗначений");
	Варианы.ДобавитьЗначение("по каталогу");
	Варианы.ДобавитьЗначение("по прайсу");
	Результат = 0;
	Если Варианы.ВыбратьЗначение(,,Результат,,1)=1 Тогда
	    Если Результат = 1 Тогда
			глПодбор(Контекст,"номенклатура","ДляПодбора")
		ИначеЕсли Результат = 2 Тогда
			глПодбор(Контекст,"прайс_лист","ДляПодбора")
	    КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//*****************************************************************************
Процедура ВыборФирмы()
	// по кнопке редактирования параметров фирмы в докумнете
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ИнформацияОфирме", КонтекстДокумента);
	ОбновитьНадписи();
КонецПроцедуры	
	
//*****************************************************************************
Процедура ВыборОплаты()
	// Процедура по кнопке редактирования параметров оплаты в докумнете
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ИнформацияОценах", КонтекстДокумента);
	ОбновитьНадписи();
КонецПроцедуры	

//*****************************************************************************
Процедура ЗаполнениеШапкиНаОсновании(ДокОснование)
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта=ДокОснование.Валюта;
		Дата_Курса=ДокОснование.Дата_Курса;
		Курс=ДокОснование.Курс;
	КонецЕсли;
	глЗаполнитьШапкуНаОсн(Контекст,ДокОснование);
КонецПроцедуры

//********************************************************************************
Процедура Заполнить()
	УдалитьСтроки();
	ДокОснование = ДокументОснование;
	ДокОснование.ВыбратьСтроки();
	Пока ДокОснование.ПолучитьСтроку()=1 Цикл
		Если ДокОснование.Количество < ДокОснование.ИнвКоличество Тогда
			НоваяСтрока();
			Товар=ДокОснование.Товар;
			Количество=ДокОснование.ИнвКоличество-ДокОснование.Количество;
			Единица=ДокОснование.Единица;
			Коэффициент=ДокОснование.Коэффициент;
			Колво=?(ДокОснование.ИнвКоличество=0,1,ДокОснование.ИнвКоличество);
			ЦенаБезНДС = ДокОснование.Стоимость/Колво;
			глВыч_суммы_накл(Контекст,0);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

//*****************************************************************************
Процедура ВыборОснования()
	// Процедура по кнопке редактирования основания в докумнете
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ДокОснование=ДокументОснование;
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", КонтекстДокумента);
	Если (ДокОснование<>ДокументОснование) И (ПустоеЗначение(ДокументОснование)=0) Тогда
		Заполнить();
	КонецЕсли;
	ОбновитьНадписи();
КонецПроцедуры	

//*****************************************************************************
// Предопределенные процедуры

//*****************************************************************************
Процедура ПриНачалеВыбораЗначения(Рекв,Флаг)
	Флаг=0;
	Если (Рекв="Фирма") или (Рекв="Склад") Тогда
		ВыборФирмы();
	ИначеЕсли Рекв="КатегорияЦен" Тогда
	    ВыборОплаты();
	Иначе
		Флаг=1;
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
Процедура ВводНового(Скопирован)

	глЗаполнитьШапку(Контекст);
	Если Скопирован=1 Тогда	//копирование документа
		Возврат;
	КонецЕсли;

	ДатаДок=РабочаяДата();
	Валюта=Константа.ОсновнаяВалютаЗакупки;
	Дата_Курса=ДатаДок;
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта = Гривня;
	КонецЕсли;
	Курс=глКурсДляВалюты(Валюта,Дата_Курса);
	КатегорияЦен = Автор.КатегорияЦен;
КонецПроцедуры

//******************************************************************************
Процедура ВводНаОсновании(ДокОснование)
	СинонимДокумента	= ПредставлениеВида();
	СинонимОснования	= ДокОснование.ПредставлениеВида();

	Список = глПолучитьСписокВводимыхНаОсновании(ДокОснование);
	Поз = Список.НайтиЗначение(Вид());
	
	Если Поз=0 Тогда
		СтатусВозврата(0);
		Предупреждение("Документ """+СинонимДокумента+""" нельзя вводить на основании """+СинонимОснования+"""");
		Возврат;
	КонецЕсли;

	Если ДокОснование.ТипИнвентаризации <> 2 Тогда
	    СтатусВозврата(0);
		Предупреждение("Документ """+ПредставлениеВида()+""" можно вводить на основании для документа """+ДокОснование.ПредставлениеВида()+""" с типом инвентаризации <по складу>.");
		Возврат;
	КонецЕсли;

	Автор = глПользователь;
	ДатаДок=РабочаяДата();
    КатегорияЦен = Автор.КатегорияЦен;

	ЗаполнениеШапкиНаОсновании(ДокОснование);
	Заполнить();
КонецПроцедуры

//******************************************************************************
Процедура ПриОткрытии()

	НачальнаяДатаДокумента = ДатаДок;

	глПроверкаРазрешенияРедактирования(Контекст);
	глУстановкаРеквизитаТип(Контекст);
	
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.кнОК.Доступность(0);
		Форма.кнПровести.Доступность(0);
		Форма.кнДействия.Доступность(0);
		
		Форма.кнПодбор.Доступность(0);
		Форма.кнЗаполнить.Доступность(0);
		
		Форма.кнОснование.Доступность(0);
				
	Иначе
	    Форма.КнопкаПоУмолчанию("кнОК");
	КонецЕсли;
	ОбновитьНадписи();
	СтараяДата = ДатаДок;
КонецПроцедуры

//*****************************************************************************
Процедура ОбработкаПодбора(Выб) //Предопределенная процедура
	глПриОбработкеПодбора(Выб,Контекст);
КонецПроцедуры //Обработка подбора

//******************************************************************************
Процедура ПриЗаписи()
	Если глМожноЗаписатьДокумент(Контекст)=0 Тогда
		СтатусВозврата(0);                        
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
		СтатусВозврата(0);
	КонецЕсли;
КонецПроцедуры
                                                                             
Форма.Товар.ВыполнятьФормулуТолькоПриИзменении(1);

//*****************************************************************************
//Инициализирум список действий по кнопке "Действия"
СписокДействий = глПолучитьСписокДействий("
	|СтруктураПодчиненности,
	|ДвиженияДокумента,
	|ОткрытьВЖурнале,
	|ИзмКомментария");